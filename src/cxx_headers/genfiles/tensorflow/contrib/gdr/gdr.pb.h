// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/gdr/gdr.proto

#ifndef PROTOBUF_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto_INCLUDED
#define PROTOBUF_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRemoteMemoryRegionImpl();
void InitDefaultsRemoteMemoryRegion();
inline void InitDefaults() {
  InitDefaultsRemoteMemoryRegion();
}
}  // namespace protobuf_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto
namespace tensorflow {
class RemoteMemoryRegion;
class RemoteMemoryRegionDefaultTypeInternal;
extern RemoteMemoryRegionDefaultTypeInternal _RemoteMemoryRegion_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::RemoteMemoryRegion* Arena::CreateMessage< ::tensorflow::RemoteMemoryRegion>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {

// ===================================================================

class RemoteMemoryRegion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.RemoteMemoryRegion) */ {
 public:
  RemoteMemoryRegion();
  virtual ~RemoteMemoryRegion();

  RemoteMemoryRegion(const RemoteMemoryRegion& from);

  inline RemoteMemoryRegion& operator=(const RemoteMemoryRegion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteMemoryRegion(RemoteMemoryRegion&& from) noexcept
    : RemoteMemoryRegion() {
    *this = ::std::move(from);
  }

  inline RemoteMemoryRegion& operator=(RemoteMemoryRegion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteMemoryRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteMemoryRegion* internal_default_instance() {
    return reinterpret_cast<const RemoteMemoryRegion*>(
               &_RemoteMemoryRegion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(RemoteMemoryRegion* other);
  void Swap(RemoteMemoryRegion* other);
  friend void swap(RemoteMemoryRegion& a, RemoteMemoryRegion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteMemoryRegion* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<RemoteMemoryRegion>(NULL);
  }

  RemoteMemoryRegion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::CreateMessage<RemoteMemoryRegion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoteMemoryRegion& from);
  void MergeFrom(const RemoteMemoryRegion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoteMemoryRegion* other);
  protected:
  explicit RemoteMemoryRegion(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_host();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_host(
      ::std::string* host);

  // string port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  const ::std::string& port() const;
  void set_port(const ::std::string& value);
  #if LANG_CXX11
  void set_port(::std::string&& value);
  #endif
  void set_port(const char* value);
  void set_port(const char* value, size_t size);
  ::std::string* mutable_port();
  ::std::string* release_port();
  void set_allocated_port(::std::string* port);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_port();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_port(
      ::std::string* port);

  // uint64 addr = 3;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  ::google::protobuf::uint64 addr() const;
  void set_addr(::google::protobuf::uint64 value);

  // uint32 rkey = 4;
  void clear_rkey();
  static const int kRkeyFieldNumber = 4;
  ::google::protobuf::uint32 rkey() const;
  void set_rkey(::google::protobuf::uint32 value);

  // uint32 tensor_key = 5;
  void clear_tensor_key();
  static const int kTensorKeyFieldNumber = 5;
  ::google::protobuf::uint32 tensor_key() const;
  void set_tensor_key(::google::protobuf::uint32 value);

  // uint64 checksum = 6;
  void clear_checksum();
  static const int kChecksumFieldNumber = 6;
  ::google::protobuf::uint64 checksum() const;
  void set_checksum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.RemoteMemoryRegion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr port_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint32 rkey_;
  ::google::protobuf::uint32 tensor_key_;
  ::google::protobuf::uint64 checksum_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto::InitDefaultsRemoteMemoryRegionImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RemoteMemoryRegion

// string host = 1;
inline void RemoteMemoryRegion::clear_host() {
  host_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RemoteMemoryRegion::host() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.host)
  return host_.Get();
}
inline void RemoteMemoryRegion::set_host(const ::std::string& value) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.host)
}
#if LANG_CXX11
inline void RemoteMemoryRegion::set_host(::std::string&& value) {
  
  host_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.RemoteMemoryRegion.host)
}
#endif
inline void RemoteMemoryRegion::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteMemoryRegion.host)
}
inline void RemoteMemoryRegion::set_host(const char* value,
    size_t size) {
  
  host_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteMemoryRegion.host)
}
inline ::std::string* RemoteMemoryRegion::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteMemoryRegion.host)
  return host_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RemoteMemoryRegion::release_host() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteMemoryRegion.host)
  
  return host_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RemoteMemoryRegion::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteMemoryRegion.host)
}
inline ::std::string* RemoteMemoryRegion::unsafe_arena_release_host() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteMemoryRegion.host)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return host_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RemoteMemoryRegion::unsafe_arena_set_allocated_host(
    ::std::string* host) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (host != NULL) {
    
  } else {
    
  }
  host_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      host, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteMemoryRegion.host)
}

// string port = 2;
inline void RemoteMemoryRegion::clear_port() {
  port_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RemoteMemoryRegion::port() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.port)
  return port_.Get();
}
inline void RemoteMemoryRegion::set_port(const ::std::string& value) {
  
  port_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.port)
}
#if LANG_CXX11
inline void RemoteMemoryRegion::set_port(::std::string&& value) {
  
  port_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.RemoteMemoryRegion.port)
}
#endif
inline void RemoteMemoryRegion::set_port(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  port_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.RemoteMemoryRegion.port)
}
inline void RemoteMemoryRegion::set_port(const char* value,
    size_t size) {
  
  port_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.RemoteMemoryRegion.port)
}
inline ::std::string* RemoteMemoryRegion::mutable_port() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.RemoteMemoryRegion.port)
  return port_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RemoteMemoryRegion::release_port() {
  // @@protoc_insertion_point(field_release:tensorflow.RemoteMemoryRegion.port)
  
  return port_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RemoteMemoryRegion::set_allocated_port(::std::string* port) {
  if (port != NULL) {
    
  } else {
    
  }
  port_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), port,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.RemoteMemoryRegion.port)
}
inline ::std::string* RemoteMemoryRegion::unsafe_arena_release_port() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.RemoteMemoryRegion.port)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return port_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RemoteMemoryRegion::unsafe_arena_set_allocated_port(
    ::std::string* port) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (port != NULL) {
    
  } else {
    
  }
  port_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      port, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.RemoteMemoryRegion.port)
}

// uint64 addr = 3;
inline void RemoteMemoryRegion::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RemoteMemoryRegion::addr() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.addr)
  return addr_;
}
inline void RemoteMemoryRegion::set_addr(::google::protobuf::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.addr)
}

// uint32 rkey = 4;
inline void RemoteMemoryRegion::clear_rkey() {
  rkey_ = 0u;
}
inline ::google::protobuf::uint32 RemoteMemoryRegion::rkey() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.rkey)
  return rkey_;
}
inline void RemoteMemoryRegion::set_rkey(::google::protobuf::uint32 value) {
  
  rkey_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.rkey)
}

// uint32 tensor_key = 5;
inline void RemoteMemoryRegion::clear_tensor_key() {
  tensor_key_ = 0u;
}
inline ::google::protobuf::uint32 RemoteMemoryRegion::tensor_key() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.tensor_key)
  return tensor_key_;
}
inline void RemoteMemoryRegion::set_tensor_key(::google::protobuf::uint32 value) {
  
  tensor_key_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.tensor_key)
}

// uint64 checksum = 6;
inline void RemoteMemoryRegion::clear_checksum() {
  checksum_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RemoteMemoryRegion::checksum() const {
  // @@protoc_insertion_point(field_get:tensorflow.RemoteMemoryRegion.checksum)
  return checksum_;
}
inline void RemoteMemoryRegion::set_checksum(::google::protobuf::uint64 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.RemoteMemoryRegion.checksum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcontrib_2fgdr_2fgdr_2eproto_INCLUDED
