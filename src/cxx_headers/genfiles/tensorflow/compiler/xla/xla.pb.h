// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/xla.proto

#ifndef PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_2eproto_INCLUDED
#define PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/xla/xla_data.pb.h"
#include "tensorflow/compiler/xla/service/hlo.pb.h"
#include "tensorflow/compiler/xla/service/session.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[55];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHloReducePrecisionOptionsImpl();
void InitDefaultsHloReducePrecisionOptions();
void InitDefaultsDebugOptions_XlaBackendExtraOptionsEntry_DoNotUseImpl();
void InitDefaultsDebugOptions_XlaBackendExtraOptionsEntry_DoNotUse();
void InitDefaultsDebugOptionsImpl();
void InitDefaultsDebugOptions();
void InitDefaultsExecutionOptionsImpl();
void InitDefaultsExecutionOptions();
void InitDefaultsSnapshotComputationRequestImpl();
void InitDefaultsSnapshotComputationRequest();
void InitDefaultsSnapshotComputationResponseImpl();
void InitDefaultsSnapshotComputationResponse();
void InitDefaultsLoadComputationSnapshotRequestImpl();
void InitDefaultsLoadComputationSnapshotRequest();
void InitDefaultsLoadComputationSnapshotResponseImpl();
void InitDefaultsLoadComputationSnapshotResponse();
void InitDefaultsGetDeviceHandlesRequestImpl();
void InitDefaultsGetDeviceHandlesRequest();
void InitDefaultsGetDeviceHandlesResponseImpl();
void InitDefaultsGetDeviceHandlesResponse();
void InitDefaultsTransferToClientRequestImpl();
void InitDefaultsTransferToClientRequest();
void InitDefaultsTransferToClientResponseImpl();
void InitDefaultsTransferToClientResponse();
void InitDefaultsTransferToServerRequestImpl();
void InitDefaultsTransferToServerRequest();
void InitDefaultsTransferToServerResponseImpl();
void InitDefaultsTransferToServerResponse();
void InitDefaultsTransferToInfeedRequestImpl();
void InitDefaultsTransferToInfeedRequest();
void InitDefaultsTransferToInfeedResponseImpl();
void InitDefaultsTransferToInfeedResponse();
void InitDefaultsTransferFromOutfeedRequestImpl();
void InitDefaultsTransferFromOutfeedRequest();
void InitDefaultsTransferFromOutfeedResponseImpl();
void InitDefaultsTransferFromOutfeedResponse();
void InitDefaultsResetDeviceRequestImpl();
void InitDefaultsResetDeviceRequest();
void InitDefaultsResetDeviceResponseImpl();
void InitDefaultsResetDeviceResponse();
void InitDefaultsComputationStatsRequestImpl();
void InitDefaultsComputationStatsRequest();
void InitDefaultsComputationStatsResponseImpl();
void InitDefaultsComputationStatsResponse();
void InitDefaultsComputationRequestImpl();
void InitDefaultsComputationRequest();
void InitDefaultsComputationResponseImpl();
void InitDefaultsComputationResponse();
void InitDefaultsCreateChannelHandleRequestImpl();
void InitDefaultsCreateChannelHandleRequest();
void InitDefaultsCreateChannelHandleResponseImpl();
void InitDefaultsCreateChannelHandleResponse();
void InitDefaultsUnregisterRequestImpl();
void InitDefaultsUnregisterRequest();
void InitDefaultsUnregisterResponseImpl();
void InitDefaultsUnregisterResponse();
void InitDefaultsSetReturnValueRequestImpl();
void InitDefaultsSetReturnValueRequest();
void InitDefaultsSetReturnValueResponseImpl();
void InitDefaultsSetReturnValueResponse();
void InitDefaultsExecuteRequestImpl();
void InitDefaultsExecuteRequest();
void InitDefaultsExecuteGraphRequestImpl();
void InitDefaultsExecuteGraphRequest();
void InitDefaultsExecuteParallelRequestImpl();
void InitDefaultsExecuteParallelRequest();
void InitDefaultsExecuteResponseImpl();
void InitDefaultsExecuteResponse();
void InitDefaultsExecuteParallelResponseImpl();
void InitDefaultsExecuteParallelResponse();
void InitDefaultsExecuteAsyncRequestImpl();
void InitDefaultsExecuteAsyncRequest();
void InitDefaultsExecuteAsyncResponseImpl();
void InitDefaultsExecuteAsyncResponse();
void InitDefaultsWaitForExecutionRequestImpl();
void InitDefaultsWaitForExecutionRequest();
void InitDefaultsWaitForExecutionResponseImpl();
void InitDefaultsWaitForExecutionResponse();
void InitDefaultsIsConstantRequestImpl();
void InitDefaultsIsConstantRequest();
void InitDefaultsIsConstantResponseImpl();
void InitDefaultsIsConstantResponse();
void InitDefaultsComputeConstantRequestImpl();
void InitDefaultsComputeConstantRequest();
void InitDefaultsComputeConstantResponseImpl();
void InitDefaultsComputeConstantResponse();
void InitDefaultsDeconstructTupleRequestImpl();
void InitDefaultsDeconstructTupleRequest();
void InitDefaultsDeconstructTupleResponseImpl();
void InitDefaultsDeconstructTupleResponse();
void InitDefaultsLoadDataRequestImpl();
void InitDefaultsLoadDataRequest();
void InitDefaultsLoadDataResponseImpl();
void InitDefaultsLoadDataResponse();
void InitDefaultsSpecializeRequestImpl();
void InitDefaultsSpecializeRequest();
void InitDefaultsSpecializeResponseImpl();
void InitDefaultsSpecializeResponse();
void InitDefaultsGetShapeRequestImpl();
void InitDefaultsGetShapeRequest();
void InitDefaultsGetShapeResponseImpl();
void InitDefaultsGetShapeResponse();
void InitDefaultsGetComputationShapeRequestImpl();
void InitDefaultsGetComputationShapeRequest();
void InitDefaultsGetComputationShapeResponseImpl();
void InitDefaultsGetComputationShapeResponse();
void InitDefaultsUnpackRequestImpl();
void InitDefaultsUnpackRequest();
void InitDefaultsUnpackResponseImpl();
void InitDefaultsUnpackResponse();
inline void InitDefaults() {
  InitDefaultsHloReducePrecisionOptions();
  InitDefaultsDebugOptions_XlaBackendExtraOptionsEntry_DoNotUse();
  InitDefaultsDebugOptions();
  InitDefaultsExecutionOptions();
  InitDefaultsSnapshotComputationRequest();
  InitDefaultsSnapshotComputationResponse();
  InitDefaultsLoadComputationSnapshotRequest();
  InitDefaultsLoadComputationSnapshotResponse();
  InitDefaultsGetDeviceHandlesRequest();
  InitDefaultsGetDeviceHandlesResponse();
  InitDefaultsTransferToClientRequest();
  InitDefaultsTransferToClientResponse();
  InitDefaultsTransferToServerRequest();
  InitDefaultsTransferToServerResponse();
  InitDefaultsTransferToInfeedRequest();
  InitDefaultsTransferToInfeedResponse();
  InitDefaultsTransferFromOutfeedRequest();
  InitDefaultsTransferFromOutfeedResponse();
  InitDefaultsResetDeviceRequest();
  InitDefaultsResetDeviceResponse();
  InitDefaultsComputationStatsRequest();
  InitDefaultsComputationStatsResponse();
  InitDefaultsComputationRequest();
  InitDefaultsComputationResponse();
  InitDefaultsCreateChannelHandleRequest();
  InitDefaultsCreateChannelHandleResponse();
  InitDefaultsUnregisterRequest();
  InitDefaultsUnregisterResponse();
  InitDefaultsSetReturnValueRequest();
  InitDefaultsSetReturnValueResponse();
  InitDefaultsExecuteRequest();
  InitDefaultsExecuteGraphRequest();
  InitDefaultsExecuteParallelRequest();
  InitDefaultsExecuteResponse();
  InitDefaultsExecuteParallelResponse();
  InitDefaultsExecuteAsyncRequest();
  InitDefaultsExecuteAsyncResponse();
  InitDefaultsWaitForExecutionRequest();
  InitDefaultsWaitForExecutionResponse();
  InitDefaultsIsConstantRequest();
  InitDefaultsIsConstantResponse();
  InitDefaultsComputeConstantRequest();
  InitDefaultsComputeConstantResponse();
  InitDefaultsDeconstructTupleRequest();
  InitDefaultsDeconstructTupleResponse();
  InitDefaultsLoadDataRequest();
  InitDefaultsLoadDataResponse();
  InitDefaultsSpecializeRequest();
  InitDefaultsSpecializeResponse();
  InitDefaultsGetShapeRequest();
  InitDefaultsGetShapeResponse();
  InitDefaultsGetComputationShapeRequest();
  InitDefaultsGetComputationShapeResponse();
  InitDefaultsUnpackRequest();
  InitDefaultsUnpackResponse();
}
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto
namespace xla {
class ComputationRequest;
class ComputationRequestDefaultTypeInternal;
extern ComputationRequestDefaultTypeInternal _ComputationRequest_default_instance_;
class ComputationResponse;
class ComputationResponseDefaultTypeInternal;
extern ComputationResponseDefaultTypeInternal _ComputationResponse_default_instance_;
class ComputationStatsRequest;
class ComputationStatsRequestDefaultTypeInternal;
extern ComputationStatsRequestDefaultTypeInternal _ComputationStatsRequest_default_instance_;
class ComputationStatsResponse;
class ComputationStatsResponseDefaultTypeInternal;
extern ComputationStatsResponseDefaultTypeInternal _ComputationStatsResponse_default_instance_;
class ComputeConstantRequest;
class ComputeConstantRequestDefaultTypeInternal;
extern ComputeConstantRequestDefaultTypeInternal _ComputeConstantRequest_default_instance_;
class ComputeConstantResponse;
class ComputeConstantResponseDefaultTypeInternal;
extern ComputeConstantResponseDefaultTypeInternal _ComputeConstantResponse_default_instance_;
class CreateChannelHandleRequest;
class CreateChannelHandleRequestDefaultTypeInternal;
extern CreateChannelHandleRequestDefaultTypeInternal _CreateChannelHandleRequest_default_instance_;
class CreateChannelHandleResponse;
class CreateChannelHandleResponseDefaultTypeInternal;
extern CreateChannelHandleResponseDefaultTypeInternal _CreateChannelHandleResponse_default_instance_;
class DebugOptions;
class DebugOptionsDefaultTypeInternal;
extern DebugOptionsDefaultTypeInternal _DebugOptions_default_instance_;
class DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse;
class DebugOptions_XlaBackendExtraOptionsEntry_DoNotUseDefaultTypeInternal;
extern DebugOptions_XlaBackendExtraOptionsEntry_DoNotUseDefaultTypeInternal _DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse_default_instance_;
class DeconstructTupleRequest;
class DeconstructTupleRequestDefaultTypeInternal;
extern DeconstructTupleRequestDefaultTypeInternal _DeconstructTupleRequest_default_instance_;
class DeconstructTupleResponse;
class DeconstructTupleResponseDefaultTypeInternal;
extern DeconstructTupleResponseDefaultTypeInternal _DeconstructTupleResponse_default_instance_;
class ExecuteAsyncRequest;
class ExecuteAsyncRequestDefaultTypeInternal;
extern ExecuteAsyncRequestDefaultTypeInternal _ExecuteAsyncRequest_default_instance_;
class ExecuteAsyncResponse;
class ExecuteAsyncResponseDefaultTypeInternal;
extern ExecuteAsyncResponseDefaultTypeInternal _ExecuteAsyncResponse_default_instance_;
class ExecuteGraphRequest;
class ExecuteGraphRequestDefaultTypeInternal;
extern ExecuteGraphRequestDefaultTypeInternal _ExecuteGraphRequest_default_instance_;
class ExecuteParallelRequest;
class ExecuteParallelRequestDefaultTypeInternal;
extern ExecuteParallelRequestDefaultTypeInternal _ExecuteParallelRequest_default_instance_;
class ExecuteParallelResponse;
class ExecuteParallelResponseDefaultTypeInternal;
extern ExecuteParallelResponseDefaultTypeInternal _ExecuteParallelResponse_default_instance_;
class ExecuteRequest;
class ExecuteRequestDefaultTypeInternal;
extern ExecuteRequestDefaultTypeInternal _ExecuteRequest_default_instance_;
class ExecuteResponse;
class ExecuteResponseDefaultTypeInternal;
extern ExecuteResponseDefaultTypeInternal _ExecuteResponse_default_instance_;
class ExecutionOptions;
class ExecutionOptionsDefaultTypeInternal;
extern ExecutionOptionsDefaultTypeInternal _ExecutionOptions_default_instance_;
class GetComputationShapeRequest;
class GetComputationShapeRequestDefaultTypeInternal;
extern GetComputationShapeRequestDefaultTypeInternal _GetComputationShapeRequest_default_instance_;
class GetComputationShapeResponse;
class GetComputationShapeResponseDefaultTypeInternal;
extern GetComputationShapeResponseDefaultTypeInternal _GetComputationShapeResponse_default_instance_;
class GetDeviceHandlesRequest;
class GetDeviceHandlesRequestDefaultTypeInternal;
extern GetDeviceHandlesRequestDefaultTypeInternal _GetDeviceHandlesRequest_default_instance_;
class GetDeviceHandlesResponse;
class GetDeviceHandlesResponseDefaultTypeInternal;
extern GetDeviceHandlesResponseDefaultTypeInternal _GetDeviceHandlesResponse_default_instance_;
class GetShapeRequest;
class GetShapeRequestDefaultTypeInternal;
extern GetShapeRequestDefaultTypeInternal _GetShapeRequest_default_instance_;
class GetShapeResponse;
class GetShapeResponseDefaultTypeInternal;
extern GetShapeResponseDefaultTypeInternal _GetShapeResponse_default_instance_;
class HloReducePrecisionOptions;
class HloReducePrecisionOptionsDefaultTypeInternal;
extern HloReducePrecisionOptionsDefaultTypeInternal _HloReducePrecisionOptions_default_instance_;
class IsConstantRequest;
class IsConstantRequestDefaultTypeInternal;
extern IsConstantRequestDefaultTypeInternal _IsConstantRequest_default_instance_;
class IsConstantResponse;
class IsConstantResponseDefaultTypeInternal;
extern IsConstantResponseDefaultTypeInternal _IsConstantResponse_default_instance_;
class LoadComputationSnapshotRequest;
class LoadComputationSnapshotRequestDefaultTypeInternal;
extern LoadComputationSnapshotRequestDefaultTypeInternal _LoadComputationSnapshotRequest_default_instance_;
class LoadComputationSnapshotResponse;
class LoadComputationSnapshotResponseDefaultTypeInternal;
extern LoadComputationSnapshotResponseDefaultTypeInternal _LoadComputationSnapshotResponse_default_instance_;
class LoadDataRequest;
class LoadDataRequestDefaultTypeInternal;
extern LoadDataRequestDefaultTypeInternal _LoadDataRequest_default_instance_;
class LoadDataResponse;
class LoadDataResponseDefaultTypeInternal;
extern LoadDataResponseDefaultTypeInternal _LoadDataResponse_default_instance_;
class ResetDeviceRequest;
class ResetDeviceRequestDefaultTypeInternal;
extern ResetDeviceRequestDefaultTypeInternal _ResetDeviceRequest_default_instance_;
class ResetDeviceResponse;
class ResetDeviceResponseDefaultTypeInternal;
extern ResetDeviceResponseDefaultTypeInternal _ResetDeviceResponse_default_instance_;
class SetReturnValueRequest;
class SetReturnValueRequestDefaultTypeInternal;
extern SetReturnValueRequestDefaultTypeInternal _SetReturnValueRequest_default_instance_;
class SetReturnValueResponse;
class SetReturnValueResponseDefaultTypeInternal;
extern SetReturnValueResponseDefaultTypeInternal _SetReturnValueResponse_default_instance_;
class SnapshotComputationRequest;
class SnapshotComputationRequestDefaultTypeInternal;
extern SnapshotComputationRequestDefaultTypeInternal _SnapshotComputationRequest_default_instance_;
class SnapshotComputationResponse;
class SnapshotComputationResponseDefaultTypeInternal;
extern SnapshotComputationResponseDefaultTypeInternal _SnapshotComputationResponse_default_instance_;
class SpecializeRequest;
class SpecializeRequestDefaultTypeInternal;
extern SpecializeRequestDefaultTypeInternal _SpecializeRequest_default_instance_;
class SpecializeResponse;
class SpecializeResponseDefaultTypeInternal;
extern SpecializeResponseDefaultTypeInternal _SpecializeResponse_default_instance_;
class TransferFromOutfeedRequest;
class TransferFromOutfeedRequestDefaultTypeInternal;
extern TransferFromOutfeedRequestDefaultTypeInternal _TransferFromOutfeedRequest_default_instance_;
class TransferFromOutfeedResponse;
class TransferFromOutfeedResponseDefaultTypeInternal;
extern TransferFromOutfeedResponseDefaultTypeInternal _TransferFromOutfeedResponse_default_instance_;
class TransferToClientRequest;
class TransferToClientRequestDefaultTypeInternal;
extern TransferToClientRequestDefaultTypeInternal _TransferToClientRequest_default_instance_;
class TransferToClientResponse;
class TransferToClientResponseDefaultTypeInternal;
extern TransferToClientResponseDefaultTypeInternal _TransferToClientResponse_default_instance_;
class TransferToInfeedRequest;
class TransferToInfeedRequestDefaultTypeInternal;
extern TransferToInfeedRequestDefaultTypeInternal _TransferToInfeedRequest_default_instance_;
class TransferToInfeedResponse;
class TransferToInfeedResponseDefaultTypeInternal;
extern TransferToInfeedResponseDefaultTypeInternal _TransferToInfeedResponse_default_instance_;
class TransferToServerRequest;
class TransferToServerRequestDefaultTypeInternal;
extern TransferToServerRequestDefaultTypeInternal _TransferToServerRequest_default_instance_;
class TransferToServerResponse;
class TransferToServerResponseDefaultTypeInternal;
extern TransferToServerResponseDefaultTypeInternal _TransferToServerResponse_default_instance_;
class UnpackRequest;
class UnpackRequestDefaultTypeInternal;
extern UnpackRequestDefaultTypeInternal _UnpackRequest_default_instance_;
class UnpackResponse;
class UnpackResponseDefaultTypeInternal;
extern UnpackResponseDefaultTypeInternal _UnpackResponse_default_instance_;
class UnregisterRequest;
class UnregisterRequestDefaultTypeInternal;
extern UnregisterRequestDefaultTypeInternal _UnregisterRequest_default_instance_;
class UnregisterResponse;
class UnregisterResponseDefaultTypeInternal;
extern UnregisterResponseDefaultTypeInternal _UnregisterResponse_default_instance_;
class WaitForExecutionRequest;
class WaitForExecutionRequestDefaultTypeInternal;
extern WaitForExecutionRequestDefaultTypeInternal _WaitForExecutionRequest_default_instance_;
class WaitForExecutionResponse;
class WaitForExecutionResponseDefaultTypeInternal;
extern WaitForExecutionResponseDefaultTypeInternal _WaitForExecutionResponse_default_instance_;
}  // namespace xla
namespace google {
namespace protobuf {
template<> ::xla::ComputationRequest* Arena::Create< ::xla::ComputationRequest>(Arena*);
template<> ::xla::ComputationResponse* Arena::Create< ::xla::ComputationResponse>(Arena*);
template<> ::xla::ComputationStatsRequest* Arena::Create< ::xla::ComputationStatsRequest>(Arena*);
template<> ::xla::ComputationStatsResponse* Arena::Create< ::xla::ComputationStatsResponse>(Arena*);
template<> ::xla::ComputeConstantRequest* Arena::Create< ::xla::ComputeConstantRequest>(Arena*);
template<> ::xla::ComputeConstantResponse* Arena::Create< ::xla::ComputeConstantResponse>(Arena*);
template<> ::xla::CreateChannelHandleRequest* Arena::Create< ::xla::CreateChannelHandleRequest>(Arena*);
template<> ::xla::CreateChannelHandleResponse* Arena::Create< ::xla::CreateChannelHandleResponse>(Arena*);
template<> ::xla::DebugOptions* Arena::Create< ::xla::DebugOptions>(Arena*);
template<> ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse* Arena::Create< ::xla::DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse>(Arena*);
template<> ::xla::DeconstructTupleRequest* Arena::Create< ::xla::DeconstructTupleRequest>(Arena*);
template<> ::xla::DeconstructTupleResponse* Arena::Create< ::xla::DeconstructTupleResponse>(Arena*);
template<> ::xla::ExecuteAsyncRequest* Arena::Create< ::xla::ExecuteAsyncRequest>(Arena*);
template<> ::xla::ExecuteAsyncResponse* Arena::Create< ::xla::ExecuteAsyncResponse>(Arena*);
template<> ::xla::ExecuteGraphRequest* Arena::Create< ::xla::ExecuteGraphRequest>(Arena*);
template<> ::xla::ExecuteParallelRequest* Arena::Create< ::xla::ExecuteParallelRequest>(Arena*);
template<> ::xla::ExecuteParallelResponse* Arena::Create< ::xla::ExecuteParallelResponse>(Arena*);
template<> ::xla::ExecuteRequest* Arena::Create< ::xla::ExecuteRequest>(Arena*);
template<> ::xla::ExecuteResponse* Arena::Create< ::xla::ExecuteResponse>(Arena*);
template<> ::xla::ExecutionOptions* Arena::Create< ::xla::ExecutionOptions>(Arena*);
template<> ::xla::GetComputationShapeRequest* Arena::Create< ::xla::GetComputationShapeRequest>(Arena*);
template<> ::xla::GetComputationShapeResponse* Arena::Create< ::xla::GetComputationShapeResponse>(Arena*);
template<> ::xla::GetDeviceHandlesRequest* Arena::Create< ::xla::GetDeviceHandlesRequest>(Arena*);
template<> ::xla::GetDeviceHandlesResponse* Arena::Create< ::xla::GetDeviceHandlesResponse>(Arena*);
template<> ::xla::GetShapeRequest* Arena::Create< ::xla::GetShapeRequest>(Arena*);
template<> ::xla::GetShapeResponse* Arena::Create< ::xla::GetShapeResponse>(Arena*);
template<> ::xla::HloReducePrecisionOptions* Arena::Create< ::xla::HloReducePrecisionOptions>(Arena*);
template<> ::xla::IsConstantRequest* Arena::Create< ::xla::IsConstantRequest>(Arena*);
template<> ::xla::IsConstantResponse* Arena::Create< ::xla::IsConstantResponse>(Arena*);
template<> ::xla::LoadComputationSnapshotRequest* Arena::Create< ::xla::LoadComputationSnapshotRequest>(Arena*);
template<> ::xla::LoadComputationSnapshotResponse* Arena::Create< ::xla::LoadComputationSnapshotResponse>(Arena*);
template<> ::xla::LoadDataRequest* Arena::Create< ::xla::LoadDataRequest>(Arena*);
template<> ::xla::LoadDataResponse* Arena::Create< ::xla::LoadDataResponse>(Arena*);
template<> ::xla::ResetDeviceRequest* Arena::Create< ::xla::ResetDeviceRequest>(Arena*);
template<> ::xla::ResetDeviceResponse* Arena::Create< ::xla::ResetDeviceResponse>(Arena*);
template<> ::xla::SetReturnValueRequest* Arena::Create< ::xla::SetReturnValueRequest>(Arena*);
template<> ::xla::SetReturnValueResponse* Arena::Create< ::xla::SetReturnValueResponse>(Arena*);
template<> ::xla::SnapshotComputationRequest* Arena::Create< ::xla::SnapshotComputationRequest>(Arena*);
template<> ::xla::SnapshotComputationResponse* Arena::Create< ::xla::SnapshotComputationResponse>(Arena*);
template<> ::xla::SpecializeRequest* Arena::Create< ::xla::SpecializeRequest>(Arena*);
template<> ::xla::SpecializeResponse* Arena::Create< ::xla::SpecializeResponse>(Arena*);
template<> ::xla::TransferFromOutfeedRequest* Arena::Create< ::xla::TransferFromOutfeedRequest>(Arena*);
template<> ::xla::TransferFromOutfeedResponse* Arena::Create< ::xla::TransferFromOutfeedResponse>(Arena*);
template<> ::xla::TransferToClientRequest* Arena::Create< ::xla::TransferToClientRequest>(Arena*);
template<> ::xla::TransferToClientResponse* Arena::Create< ::xla::TransferToClientResponse>(Arena*);
template<> ::xla::TransferToInfeedRequest* Arena::Create< ::xla::TransferToInfeedRequest>(Arena*);
template<> ::xla::TransferToInfeedResponse* Arena::Create< ::xla::TransferToInfeedResponse>(Arena*);
template<> ::xla::TransferToServerRequest* Arena::Create< ::xla::TransferToServerRequest>(Arena*);
template<> ::xla::TransferToServerResponse* Arena::Create< ::xla::TransferToServerResponse>(Arena*);
template<> ::xla::UnpackRequest* Arena::Create< ::xla::UnpackRequest>(Arena*);
template<> ::xla::UnpackResponse* Arena::Create< ::xla::UnpackResponse>(Arena*);
template<> ::xla::UnregisterRequest* Arena::Create< ::xla::UnregisterRequest>(Arena*);
template<> ::xla::UnregisterResponse* Arena::Create< ::xla::UnregisterResponse>(Arena*);
template<> ::xla::WaitForExecutionRequest* Arena::Create< ::xla::WaitForExecutionRequest>(Arena*);
template<> ::xla::WaitForExecutionResponse* Arena::Create< ::xla::WaitForExecutionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xla {

enum HloReducePrecisionOptions_Location {
  HloReducePrecisionOptions_Location_OP_INPUTS = 0,
  HloReducePrecisionOptions_Location_OP_OUTPUTS = 1,
  HloReducePrecisionOptions_Location_UNFUSED_OP_OUTPUTS = 2,
  HloReducePrecisionOptions_Location_FUSION_INPUTS_BY_CONTENT = 3,
  HloReducePrecisionOptions_Location_FUSION_OUTPUTS_BY_CONTENT = 4,
  HloReducePrecisionOptions_Location_HloReducePrecisionOptions_Location_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HloReducePrecisionOptions_Location_HloReducePrecisionOptions_Location_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HloReducePrecisionOptions_Location_IsValid(int value);
const HloReducePrecisionOptions_Location HloReducePrecisionOptions_Location_Location_MIN = HloReducePrecisionOptions_Location_OP_INPUTS;
const HloReducePrecisionOptions_Location HloReducePrecisionOptions_Location_Location_MAX = HloReducePrecisionOptions_Location_FUSION_OUTPUTS_BY_CONTENT;
const int HloReducePrecisionOptions_Location_Location_ARRAYSIZE = HloReducePrecisionOptions_Location_Location_MAX + 1;

const ::google::protobuf::EnumDescriptor* HloReducePrecisionOptions_Location_descriptor();
inline const ::std::string& HloReducePrecisionOptions_Location_Name(HloReducePrecisionOptions_Location value) {
  return ::google::protobuf::internal::NameOfEnum(
    HloReducePrecisionOptions_Location_descriptor(), value);
}
inline bool HloReducePrecisionOptions_Location_Parse(
    const ::std::string& name, HloReducePrecisionOptions_Location* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HloReducePrecisionOptions_Location>(
    HloReducePrecisionOptions_Location_descriptor(), name, value);
}
// ===================================================================

class HloReducePrecisionOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.HloReducePrecisionOptions) */ {
 public:
  HloReducePrecisionOptions();
  virtual ~HloReducePrecisionOptions();

  HloReducePrecisionOptions(const HloReducePrecisionOptions& from);

  inline HloReducePrecisionOptions& operator=(const HloReducePrecisionOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HloReducePrecisionOptions(HloReducePrecisionOptions&& from) noexcept
    : HloReducePrecisionOptions() {
    *this = ::std::move(from);
  }

  inline HloReducePrecisionOptions& operator=(HloReducePrecisionOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HloReducePrecisionOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HloReducePrecisionOptions* internal_default_instance() {
    return reinterpret_cast<const HloReducePrecisionOptions*>(
               &_HloReducePrecisionOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HloReducePrecisionOptions* other);
  friend void swap(HloReducePrecisionOptions& a, HloReducePrecisionOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HloReducePrecisionOptions* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HloReducePrecisionOptions>(NULL);
  }

  HloReducePrecisionOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HloReducePrecisionOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HloReducePrecisionOptions& from);
  void MergeFrom(const HloReducePrecisionOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HloReducePrecisionOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HloReducePrecisionOptions_Location Location;
  static const Location OP_INPUTS =
    HloReducePrecisionOptions_Location_OP_INPUTS;
  static const Location OP_OUTPUTS =
    HloReducePrecisionOptions_Location_OP_OUTPUTS;
  static const Location UNFUSED_OP_OUTPUTS =
    HloReducePrecisionOptions_Location_UNFUSED_OP_OUTPUTS;
  static const Location FUSION_INPUTS_BY_CONTENT =
    HloReducePrecisionOptions_Location_FUSION_INPUTS_BY_CONTENT;
  static const Location FUSION_OUTPUTS_BY_CONTENT =
    HloReducePrecisionOptions_Location_FUSION_OUTPUTS_BY_CONTENT;
  static inline bool Location_IsValid(int value) {
    return HloReducePrecisionOptions_Location_IsValid(value);
  }
  static const Location Location_MIN =
    HloReducePrecisionOptions_Location_Location_MIN;
  static const Location Location_MAX =
    HloReducePrecisionOptions_Location_Location_MAX;
  static const int Location_ARRAYSIZE =
    HloReducePrecisionOptions_Location_Location_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Location_descriptor() {
    return HloReducePrecisionOptions_Location_descriptor();
  }
  static inline const ::std::string& Location_Name(Location value) {
    return HloReducePrecisionOptions_Location_Name(value);
  }
  static inline bool Location_Parse(const ::std::string& name,
      Location* value) {
    return HloReducePrecisionOptions_Location_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 opcodes_to_suffix = 4;
  int opcodes_to_suffix_size() const;
  void clear_opcodes_to_suffix();
  static const int kOpcodesToSuffixFieldNumber = 4;
  ::google::protobuf::uint32 opcodes_to_suffix(int index) const;
  void set_opcodes_to_suffix(int index, ::google::protobuf::uint32 value);
  void add_opcodes_to_suffix(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      opcodes_to_suffix() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_opcodes_to_suffix();

  // repeated string opname_substrings_to_suffix = 5;
  int opname_substrings_to_suffix_size() const;
  void clear_opname_substrings_to_suffix();
  static const int kOpnameSubstringsToSuffixFieldNumber = 5;
  const ::std::string& opname_substrings_to_suffix(int index) const;
  ::std::string* mutable_opname_substrings_to_suffix(int index);
  void set_opname_substrings_to_suffix(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_opname_substrings_to_suffix(int index, ::std::string&& value);
  #endif
  void set_opname_substrings_to_suffix(int index, const char* value);
  void set_opname_substrings_to_suffix(int index, const char* value, size_t size);
  ::std::string* add_opname_substrings_to_suffix();
  void add_opname_substrings_to_suffix(const ::std::string& value);
  #if LANG_CXX11
  void add_opname_substrings_to_suffix(::std::string&& value);
  #endif
  void add_opname_substrings_to_suffix(const char* value);
  void add_opname_substrings_to_suffix(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& opname_substrings_to_suffix() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_opname_substrings_to_suffix();

  // .xla.HloReducePrecisionOptions.Location location = 1;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  ::xla::HloReducePrecisionOptions_Location location() const;
  void set_location(::xla::HloReducePrecisionOptions_Location value);

  // uint32 exponent_bits = 2;
  void clear_exponent_bits();
  static const int kExponentBitsFieldNumber = 2;
  ::google::protobuf::uint32 exponent_bits() const;
  void set_exponent_bits(::google::protobuf::uint32 value);

  // uint32 mantissa_bits = 3;
  void clear_mantissa_bits();
  static const int kMantissaBitsFieldNumber = 3;
  ::google::protobuf::uint32 mantissa_bits() const;
  void set_mantissa_bits(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xla.HloReducePrecisionOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > opcodes_to_suffix_;
  mutable int _opcodes_to_suffix_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> opname_substrings_to_suffix_;
  int location_;
  ::google::protobuf::uint32 exponent_bits_;
  ::google::protobuf::uint32 mantissa_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsHloReducePrecisionOptionsImpl();
};
// -------------------------------------------------------------------

class DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse();
  DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse& other);
  static const DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse*>(&_DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DebugOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DebugOptions) */ {
 public:
  DebugOptions();
  virtual ~DebugOptions();

  DebugOptions(const DebugOptions& from);

  inline DebugOptions& operator=(const DebugOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebugOptions(DebugOptions&& from) noexcept
    : DebugOptions() {
    *this = ::std::move(from);
  }

  inline DebugOptions& operator=(DebugOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DebugOptions* internal_default_instance() {
    return reinterpret_cast<const DebugOptions*>(
               &_DebugOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DebugOptions* other);
  friend void swap(DebugOptions& a, DebugOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebugOptions* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DebugOptions>(NULL);
  }

  DebugOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DebugOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DebugOptions& from);
  void MergeFrom(const DebugOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DebugOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string xla_disable_hlo_passes = 30;
  int xla_disable_hlo_passes_size() const;
  void clear_xla_disable_hlo_passes();
  static const int kXlaDisableHloPassesFieldNumber = 30;
  const ::std::string& xla_disable_hlo_passes(int index) const;
  ::std::string* mutable_xla_disable_hlo_passes(int index);
  void set_xla_disable_hlo_passes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_xla_disable_hlo_passes(int index, ::std::string&& value);
  #endif
  void set_xla_disable_hlo_passes(int index, const char* value);
  void set_xla_disable_hlo_passes(int index, const char* value, size_t size);
  ::std::string* add_xla_disable_hlo_passes();
  void add_xla_disable_hlo_passes(const ::std::string& value);
  #if LANG_CXX11
  void add_xla_disable_hlo_passes(::std::string&& value);
  #endif
  void add_xla_disable_hlo_passes(const char* value);
  void add_xla_disable_hlo_passes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& xla_disable_hlo_passes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_xla_disable_hlo_passes();

  // repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
  int hlo_reduce_precision_options_size() const;
  void clear_hlo_reduce_precision_options();
  static const int kHloReducePrecisionOptionsFieldNumber = 80;
  ::xla::HloReducePrecisionOptions* mutable_hlo_reduce_precision_options(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::HloReducePrecisionOptions >*
      mutable_hlo_reduce_precision_options();
  const ::xla::HloReducePrecisionOptions& hlo_reduce_precision_options(int index) const;
  ::xla::HloReducePrecisionOptions* add_hlo_reduce_precision_options();
  const ::google::protobuf::RepeatedPtrField< ::xla::HloReducePrecisionOptions >&
      hlo_reduce_precision_options() const;

  // map<string, string> xla_backend_extra_options = 500;
  int xla_backend_extra_options_size() const;
  void clear_xla_backend_extra_options();
  static const int kXlaBackendExtraOptionsFieldNumber = 500;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      xla_backend_extra_options() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_xla_backend_extra_options();

  // string xla_generate_hlo_graph = 1;
  void clear_xla_generate_hlo_graph();
  static const int kXlaGenerateHloGraphFieldNumber = 1;
  const ::std::string& xla_generate_hlo_graph() const;
  void set_xla_generate_hlo_graph(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_generate_hlo_graph(::std::string&& value);
  #endif
  void set_xla_generate_hlo_graph(const char* value);
  void set_xla_generate_hlo_graph(const char* value, size_t size);
  ::std::string* mutable_xla_generate_hlo_graph();
  ::std::string* release_xla_generate_hlo_graph();
  void set_allocated_xla_generate_hlo_graph(::std::string* xla_generate_hlo_graph);

  // string xla_hlo_graph_path = 4;
  void clear_xla_hlo_graph_path();
  static const int kXlaHloGraphPathFieldNumber = 4;
  const ::std::string& xla_hlo_graph_path() const;
  void set_xla_hlo_graph_path(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_hlo_graph_path(::std::string&& value);
  #endif
  void set_xla_hlo_graph_path(const char* value);
  void set_xla_hlo_graph_path(const char* value, size_t size);
  ::std::string* mutable_xla_hlo_graph_path();
  ::std::string* release_xla_hlo_graph_path();
  void set_allocated_xla_hlo_graph_path(::std::string* xla_hlo_graph_path);

  // string xla_log_hlo_text = 6;
  void clear_xla_log_hlo_text();
  static const int kXlaLogHloTextFieldNumber = 6;
  const ::std::string& xla_log_hlo_text() const;
  void set_xla_log_hlo_text(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_log_hlo_text(::std::string&& value);
  #endif
  void set_xla_log_hlo_text(const char* value);
  void set_xla_log_hlo_text(const char* value, size_t size);
  ::std::string* mutable_xla_log_hlo_text();
  ::std::string* release_xla_log_hlo_text();
  void set_allocated_xla_log_hlo_text(::std::string* xla_log_hlo_text);

  // string xla_generate_hlo_text_to = 7;
  void clear_xla_generate_hlo_text_to();
  static const int kXlaGenerateHloTextToFieldNumber = 7;
  const ::std::string& xla_generate_hlo_text_to() const;
  void set_xla_generate_hlo_text_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_generate_hlo_text_to(::std::string&& value);
  #endif
  void set_xla_generate_hlo_text_to(const char* value);
  void set_xla_generate_hlo_text_to(const char* value, size_t size);
  ::std::string* mutable_xla_generate_hlo_text_to();
  ::std::string* release_xla_generate_hlo_text_to();
  void set_allocated_xla_generate_hlo_text_to(::std::string* xla_generate_hlo_text_to);

  // string xla_dump_optimized_hlo_proto_to = 8;
  void clear_xla_dump_optimized_hlo_proto_to();
  static const int kXlaDumpOptimizedHloProtoToFieldNumber = 8;
  const ::std::string& xla_dump_optimized_hlo_proto_to() const;
  void set_xla_dump_optimized_hlo_proto_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_optimized_hlo_proto_to(::std::string&& value);
  #endif
  void set_xla_dump_optimized_hlo_proto_to(const char* value);
  void set_xla_dump_optimized_hlo_proto_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_optimized_hlo_proto_to();
  ::std::string* release_xla_dump_optimized_hlo_proto_to();
  void set_allocated_xla_dump_optimized_hlo_proto_to(::std::string* xla_dump_optimized_hlo_proto_to);

  // string xla_dump_computations_to = 10;
  void clear_xla_dump_computations_to();
  static const int kXlaDumpComputationsToFieldNumber = 10;
  const ::std::string& xla_dump_computations_to() const;
  void set_xla_dump_computations_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_computations_to(::std::string&& value);
  #endif
  void set_xla_dump_computations_to(const char* value);
  void set_xla_dump_computations_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_computations_to();
  ::std::string* release_xla_dump_computations_to();
  void set_allocated_xla_dump_computations_to(::std::string* xla_dump_computations_to);

  // string xla_dump_executions_to = 11;
  void clear_xla_dump_executions_to();
  static const int kXlaDumpExecutionsToFieldNumber = 11;
  const ::std::string& xla_dump_executions_to() const;
  void set_xla_dump_executions_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_executions_to(::std::string&& value);
  #endif
  void set_xla_dump_executions_to(const char* value);
  void set_xla_dump_executions_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_executions_to();
  ::std::string* release_xla_dump_executions_to();
  void set_allocated_xla_dump_executions_to(::std::string* xla_dump_executions_to);

  // string xla_dump_ir_to = 34;
  void clear_xla_dump_ir_to();
  static const int kXlaDumpIrToFieldNumber = 34;
  const ::std::string& xla_dump_ir_to() const;
  void set_xla_dump_ir_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_ir_to(::std::string&& value);
  #endif
  void set_xla_dump_ir_to(const char* value);
  void set_xla_dump_ir_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_ir_to();
  ::std::string* release_xla_dump_ir_to();
  void set_allocated_xla_dump_ir_to(::std::string* xla_dump_ir_to);

  // string xla_gpu_cuda_data_dir = 61;
  void clear_xla_gpu_cuda_data_dir();
  static const int kXlaGpuCudaDataDirFieldNumber = 61;
  const ::std::string& xla_gpu_cuda_data_dir() const;
  void set_xla_gpu_cuda_data_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_gpu_cuda_data_dir(::std::string&& value);
  #endif
  void set_xla_gpu_cuda_data_dir(const char* value);
  void set_xla_gpu_cuda_data_dir(const char* value, size_t size);
  ::std::string* mutable_xla_gpu_cuda_data_dir();
  ::std::string* release_xla_gpu_cuda_data_dir();
  void set_allocated_xla_gpu_cuda_data_dir(::std::string* xla_gpu_cuda_data_dir);

  // string xla_dump_unoptimized_hlo_proto_to = 95;
  void clear_xla_dump_unoptimized_hlo_proto_to();
  static const int kXlaDumpUnoptimizedHloProtoToFieldNumber = 95;
  const ::std::string& xla_dump_unoptimized_hlo_proto_to() const;
  void set_xla_dump_unoptimized_hlo_proto_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_unoptimized_hlo_proto_to(::std::string&& value);
  #endif
  void set_xla_dump_unoptimized_hlo_proto_to(const char* value);
  void set_xla_dump_unoptimized_hlo_proto_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_unoptimized_hlo_proto_to();
  ::std::string* release_xla_dump_unoptimized_hlo_proto_to();
  void set_allocated_xla_dump_unoptimized_hlo_proto_to(::std::string* xla_dump_unoptimized_hlo_proto_to);

  // string xla_dump_per_pass_hlo_proto_to = 96;
  void clear_xla_dump_per_pass_hlo_proto_to();
  static const int kXlaDumpPerPassHloProtoToFieldNumber = 96;
  const ::std::string& xla_dump_per_pass_hlo_proto_to() const;
  void set_xla_dump_per_pass_hlo_proto_to(const ::std::string& value);
  #if LANG_CXX11
  void set_xla_dump_per_pass_hlo_proto_to(::std::string&& value);
  #endif
  void set_xla_dump_per_pass_hlo_proto_to(const char* value);
  void set_xla_dump_per_pass_hlo_proto_to(const char* value, size_t size);
  ::std::string* mutable_xla_dump_per_pass_hlo_proto_to();
  ::std::string* release_xla_dump_per_pass_hlo_proto_to();
  void set_allocated_xla_dump_per_pass_hlo_proto_to(::std::string* xla_dump_per_pass_hlo_proto_to);

  // bool xla_hlo_graph_addresses = 2;
  void clear_xla_hlo_graph_addresses();
  static const int kXlaHloGraphAddressesFieldNumber = 2;
  bool xla_hlo_graph_addresses() const;
  void set_xla_hlo_graph_addresses(bool value);

  // bool xla_hlo_dump_as_graphdef = 5;
  void clear_xla_hlo_dump_as_graphdef();
  static const int kXlaHloDumpAsGraphdefFieldNumber = 5;
  bool xla_hlo_dump_as_graphdef() const;
  void set_xla_hlo_dump_as_graphdef(bool value);

  // bool xla_hlo_profile = 9;
  void clear_xla_hlo_profile();
  static const int kXlaHloProfileFieldNumber = 9;
  bool xla_hlo_profile() const;
  void set_xla_hlo_profile(bool value);

  // bool xla_enable_fast_math = 32;
  void clear_xla_enable_fast_math();
  static const int kXlaEnableFastMathFieldNumber = 32;
  bool xla_enable_fast_math() const;
  void set_xla_enable_fast_math(bool value);

  // int32 xla_backend_optimization_level = 31;
  void clear_xla_backend_optimization_level();
  static const int kXlaBackendOptimizationLevelFieldNumber = 31;
  ::google::protobuf::int32 xla_backend_optimization_level() const;
  void set_xla_backend_optimization_level(::google::protobuf::int32 value);

  // bool xla_embed_ir_in_executable = 33;
  void clear_xla_embed_ir_in_executable();
  static const int kXlaEmbedIrInExecutableFieldNumber = 33;
  bool xla_embed_ir_in_executable() const;
  void set_xla_embed_ir_in_executable(bool value);

  // bool xla_eliminate_hlo_implicit_broadcast = 35;
  void clear_xla_eliminate_hlo_implicit_broadcast();
  static const int kXlaEliminateHloImplicitBroadcastFieldNumber = 35;
  bool xla_eliminate_hlo_implicit_broadcast() const;
  void set_xla_eliminate_hlo_implicit_broadcast(bool value);

  // bool xla_cpu_multi_thread_eigen = 60;
  void clear_xla_cpu_multi_thread_eigen();
  static const int kXlaCpuMultiThreadEigenFieldNumber = 60;
  bool xla_cpu_multi_thread_eigen() const;
  void set_xla_cpu_multi_thread_eigen(bool value);

  // bool xla_gpu_ftz = 62;
  void clear_xla_gpu_ftz();
  static const int kXlaGpuFtzFieldNumber = 62;
  bool xla_gpu_ftz() const;
  void set_xla_gpu_ftz(bool value);

  // bool xla_gpu_disable_multi_streaming = 63;
  void clear_xla_gpu_disable_multi_streaming();
  static const int kXlaGpuDisableMultiStreamingFieldNumber = 63;
  bool xla_gpu_disable_multi_streaming() const;
  void set_xla_gpu_disable_multi_streaming(bool value);

  // bool xla_llvm_enable_alias_scope_metadata = 70;
  void clear_xla_llvm_enable_alias_scope_metadata();
  static const int kXlaLlvmEnableAliasScopeMetadataFieldNumber = 70;
  bool xla_llvm_enable_alias_scope_metadata() const;
  void set_xla_llvm_enable_alias_scope_metadata(bool value);

  // bool xla_llvm_enable_noalias_metadata = 71;
  void clear_xla_llvm_enable_noalias_metadata();
  static const int kXlaLlvmEnableNoaliasMetadataFieldNumber = 71;
  bool xla_llvm_enable_noalias_metadata() const;
  void set_xla_llvm_enable_noalias_metadata(bool value);

  // bool xla_llvm_enable_invariant_load_metadata = 72;
  void clear_xla_llvm_enable_invariant_load_metadata();
  static const int kXlaLlvmEnableInvariantLoadMetadataFieldNumber = 72;
  bool xla_llvm_enable_invariant_load_metadata() const;
  void set_xla_llvm_enable_invariant_load_metadata(bool value);

  // bool xla_llvm_disable_expensive_passes = 73;
  void clear_xla_llvm_disable_expensive_passes();
  static const int kXlaLlvmDisableExpensivePassesFieldNumber = 73;
  bool xla_llvm_disable_expensive_passes() const;
  void set_xla_llvm_disable_expensive_passes(bool value);

  // bool xla_test_all_output_layouts = 90;
  void clear_xla_test_all_output_layouts();
  static const int kXlaTestAllOutputLayoutsFieldNumber = 90;
  bool xla_test_all_output_layouts() const;
  void set_xla_test_all_output_layouts(bool value);

  // bool xla_test_all_input_layouts = 91;
  void clear_xla_test_all_input_layouts();
  static const int kXlaTestAllInputLayoutsFieldNumber = 91;
  bool xla_test_all_input_layouts() const;
  void set_xla_test_all_input_layouts(bool value);

  // bool xla_hlo_graph_sharding_color = 92;
  void clear_xla_hlo_graph_sharding_color();
  static const int kXlaHloGraphShardingColorFieldNumber = 92;
  bool xla_hlo_graph_sharding_color() const;
  void set_xla_hlo_graph_sharding_color(bool value);

  // bool xla_hlo_tfgraph_device_scopes = 93;
  void clear_xla_hlo_tfgraph_device_scopes();
  static const int kXlaHloTfgraphDeviceScopesFieldNumber = 93;
  bool xla_hlo_tfgraph_device_scopes() const;
  void set_xla_hlo_tfgraph_device_scopes(bool value);

  // bool xla_gpu_use_cudnn_batchnorm = 94;
  void clear_xla_gpu_use_cudnn_batchnorm();
  static const int kXlaGpuUseCudnnBatchnormFieldNumber = 94;
  bool xla_gpu_use_cudnn_batchnorm() const;
  void set_xla_gpu_use_cudnn_batchnorm(bool value);

  // @@protoc_insertion_point(class_scope:xla.DebugOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> xla_disable_hlo_passes_;
  ::google::protobuf::RepeatedPtrField< ::xla::HloReducePrecisionOptions > hlo_reduce_precision_options_;
  ::google::protobuf::internal::MapField<
      DebugOptions_XlaBackendExtraOptionsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > xla_backend_extra_options_;
  ::google::protobuf::internal::ArenaStringPtr xla_generate_hlo_graph_;
  ::google::protobuf::internal::ArenaStringPtr xla_hlo_graph_path_;
  ::google::protobuf::internal::ArenaStringPtr xla_log_hlo_text_;
  ::google::protobuf::internal::ArenaStringPtr xla_generate_hlo_text_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_optimized_hlo_proto_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_computations_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_executions_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_ir_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_gpu_cuda_data_dir_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_unoptimized_hlo_proto_to_;
  ::google::protobuf::internal::ArenaStringPtr xla_dump_per_pass_hlo_proto_to_;
  bool xla_hlo_graph_addresses_;
  bool xla_hlo_dump_as_graphdef_;
  bool xla_hlo_profile_;
  bool xla_enable_fast_math_;
  ::google::protobuf::int32 xla_backend_optimization_level_;
  bool xla_embed_ir_in_executable_;
  bool xla_eliminate_hlo_implicit_broadcast_;
  bool xla_cpu_multi_thread_eigen_;
  bool xla_gpu_ftz_;
  bool xla_gpu_disable_multi_streaming_;
  bool xla_llvm_enable_alias_scope_metadata_;
  bool xla_llvm_enable_noalias_metadata_;
  bool xla_llvm_enable_invariant_load_metadata_;
  bool xla_llvm_disable_expensive_passes_;
  bool xla_test_all_output_layouts_;
  bool xla_test_all_input_layouts_;
  bool xla_hlo_graph_sharding_color_;
  bool xla_hlo_tfgraph_device_scopes_;
  bool xla_gpu_use_cudnn_batchnorm_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsDebugOptionsImpl();
};
// -------------------------------------------------------------------

class ExecutionOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecutionOptions) */ {
 public:
  ExecutionOptions();
  virtual ~ExecutionOptions();

  ExecutionOptions(const ExecutionOptions& from);

  inline ExecutionOptions& operator=(const ExecutionOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionOptions(ExecutionOptions&& from) noexcept
    : ExecutionOptions() {
    *this = ::std::move(from);
  }

  inline ExecutionOptions& operator=(ExecutionOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionOptions* internal_default_instance() {
    return reinterpret_cast<const ExecutionOptions*>(
               &_ExecutionOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ExecutionOptions* other);
  friend void swap(ExecutionOptions& a, ExecutionOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionOptions* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecutionOptions>(NULL);
  }

  ExecutionOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecutionOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecutionOptions& from);
  void MergeFrom(const ExecutionOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecutionOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.DeviceHandle device_handles = 5;
  int device_handles_size() const;
  void clear_device_handles();
  static const int kDeviceHandlesFieldNumber = 5;
  ::xla::DeviceHandle* mutable_device_handles(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >*
      mutable_device_handles();
  const ::xla::DeviceHandle& device_handles(int index) const;
  ::xla::DeviceHandle* add_device_handles();
  const ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >&
      device_handles() const;

  // .xla.Shape shape_with_output_layout = 2;
  bool has_shape_with_output_layout() const;
  void clear_shape_with_output_layout();
  static const int kShapeWithOutputLayoutFieldNumber = 2;
  const ::xla::Shape& shape_with_output_layout() const;
  ::xla::Shape* release_shape_with_output_layout();
  ::xla::Shape* mutable_shape_with_output_layout();
  void set_allocated_shape_with_output_layout(::xla::Shape* shape_with_output_layout);

  // .xla.DebugOptions debug_options = 4;
  bool has_debug_options() const;
  void clear_debug_options();
  static const int kDebugOptionsFieldNumber = 4;
  const ::xla::DebugOptions& debug_options() const;
  ::xla::DebugOptions* release_debug_options();
  ::xla::DebugOptions* mutable_debug_options();
  void set_allocated_debug_options(::xla::DebugOptions* debug_options);

  // uint64 seed = 3;
  void clear_seed();
  static const int kSeedFieldNumber = 3;
  ::google::protobuf::uint64 seed() const;
  void set_seed(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:xla.ExecutionOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle > device_handles_;
  ::xla::Shape* shape_with_output_layout_;
  ::xla::DebugOptions* debug_options_;
  ::google::protobuf::uint64 seed_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecutionOptionsImpl();
};
// -------------------------------------------------------------------

class SnapshotComputationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SnapshotComputationRequest) */ {
 public:
  SnapshotComputationRequest();
  virtual ~SnapshotComputationRequest();

  SnapshotComputationRequest(const SnapshotComputationRequest& from);

  inline SnapshotComputationRequest& operator=(const SnapshotComputationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnapshotComputationRequest(SnapshotComputationRequest&& from) noexcept
    : SnapshotComputationRequest() {
    *this = ::std::move(from);
  }

  inline SnapshotComputationRequest& operator=(SnapshotComputationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotComputationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotComputationRequest* internal_default_instance() {
    return reinterpret_cast<const SnapshotComputationRequest*>(
               &_SnapshotComputationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SnapshotComputationRequest* other);
  friend void swap(SnapshotComputationRequest& a, SnapshotComputationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotComputationRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SnapshotComputationRequest>(NULL);
  }

  SnapshotComputationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SnapshotComputationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnapshotComputationRequest& from);
  void MergeFrom(const SnapshotComputationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnapshotComputationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // @@protoc_insertion_point(class_scope:xla.SnapshotComputationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSnapshotComputationRequestImpl();
};
// -------------------------------------------------------------------

class SnapshotComputationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SnapshotComputationResponse) */ {
 public:
  SnapshotComputationResponse();
  virtual ~SnapshotComputationResponse();

  SnapshotComputationResponse(const SnapshotComputationResponse& from);

  inline SnapshotComputationResponse& operator=(const SnapshotComputationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnapshotComputationResponse(SnapshotComputationResponse&& from) noexcept
    : SnapshotComputationResponse() {
    *this = ::std::move(from);
  }

  inline SnapshotComputationResponse& operator=(SnapshotComputationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotComputationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotComputationResponse* internal_default_instance() {
    return reinterpret_cast<const SnapshotComputationResponse*>(
               &_SnapshotComputationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SnapshotComputationResponse* other);
  friend void swap(SnapshotComputationResponse& a, SnapshotComputationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotComputationResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SnapshotComputationResponse>(NULL);
  }

  SnapshotComputationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SnapshotComputationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnapshotComputationResponse& from);
  void MergeFrom(const SnapshotComputationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnapshotComputationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.SessionModule module = 1;
  bool has_module() const;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::xla::SessionModule& module() const;
  ::xla::SessionModule* release_module();
  ::xla::SessionModule* mutable_module();
  void set_allocated_module(::xla::SessionModule* module);

  // @@protoc_insertion_point(class_scope:xla.SnapshotComputationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::SessionModule* module_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSnapshotComputationResponseImpl();
};
// -------------------------------------------------------------------

class LoadComputationSnapshotRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.LoadComputationSnapshotRequest) */ {
 public:
  LoadComputationSnapshotRequest();
  virtual ~LoadComputationSnapshotRequest();

  LoadComputationSnapshotRequest(const LoadComputationSnapshotRequest& from);

  inline LoadComputationSnapshotRequest& operator=(const LoadComputationSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadComputationSnapshotRequest(LoadComputationSnapshotRequest&& from) noexcept
    : LoadComputationSnapshotRequest() {
    *this = ::std::move(from);
  }

  inline LoadComputationSnapshotRequest& operator=(LoadComputationSnapshotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadComputationSnapshotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadComputationSnapshotRequest* internal_default_instance() {
    return reinterpret_cast<const LoadComputationSnapshotRequest*>(
               &_LoadComputationSnapshotRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LoadComputationSnapshotRequest* other);
  friend void swap(LoadComputationSnapshotRequest& a, LoadComputationSnapshotRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadComputationSnapshotRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadComputationSnapshotRequest>(NULL);
  }

  LoadComputationSnapshotRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadComputationSnapshotRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadComputationSnapshotRequest& from);
  void MergeFrom(const LoadComputationSnapshotRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadComputationSnapshotRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.SessionModule module = 1;
  bool has_module() const;
  void clear_module();
  static const int kModuleFieldNumber = 1;
  const ::xla::SessionModule& module() const;
  ::xla::SessionModule* release_module();
  ::xla::SessionModule* mutable_module();
  void set_allocated_module(::xla::SessionModule* module);

  // @@protoc_insertion_point(class_scope:xla.LoadComputationSnapshotRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::SessionModule* module_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsLoadComputationSnapshotRequestImpl();
};
// -------------------------------------------------------------------

class LoadComputationSnapshotResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.LoadComputationSnapshotResponse) */ {
 public:
  LoadComputationSnapshotResponse();
  virtual ~LoadComputationSnapshotResponse();

  LoadComputationSnapshotResponse(const LoadComputationSnapshotResponse& from);

  inline LoadComputationSnapshotResponse& operator=(const LoadComputationSnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadComputationSnapshotResponse(LoadComputationSnapshotResponse&& from) noexcept
    : LoadComputationSnapshotResponse() {
    *this = ::std::move(from);
  }

  inline LoadComputationSnapshotResponse& operator=(LoadComputationSnapshotResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadComputationSnapshotResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadComputationSnapshotResponse* internal_default_instance() {
    return reinterpret_cast<const LoadComputationSnapshotResponse*>(
               &_LoadComputationSnapshotResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(LoadComputationSnapshotResponse* other);
  friend void swap(LoadComputationSnapshotResponse& a, LoadComputationSnapshotResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadComputationSnapshotResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadComputationSnapshotResponse>(NULL);
  }

  LoadComputationSnapshotResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadComputationSnapshotResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadComputationSnapshotResponse& from);
  void MergeFrom(const LoadComputationSnapshotResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadComputationSnapshotResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // @@protoc_insertion_point(class_scope:xla.LoadComputationSnapshotResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsLoadComputationSnapshotResponseImpl();
};
// -------------------------------------------------------------------

class GetDeviceHandlesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetDeviceHandlesRequest) */ {
 public:
  GetDeviceHandlesRequest();
  virtual ~GetDeviceHandlesRequest();

  GetDeviceHandlesRequest(const GetDeviceHandlesRequest& from);

  inline GetDeviceHandlesRequest& operator=(const GetDeviceHandlesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceHandlesRequest(GetDeviceHandlesRequest&& from) noexcept
    : GetDeviceHandlesRequest() {
    *this = ::std::move(from);
  }

  inline GetDeviceHandlesRequest& operator=(GetDeviceHandlesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeviceHandlesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceHandlesRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceHandlesRequest*>(
               &_GetDeviceHandlesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetDeviceHandlesRequest* other);
  friend void swap(GetDeviceHandlesRequest& a, GetDeviceHandlesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceHandlesRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetDeviceHandlesRequest>(NULL);
  }

  GetDeviceHandlesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetDeviceHandlesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDeviceHandlesRequest& from);
  void MergeFrom(const GetDeviceHandlesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDeviceHandlesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 device_count = 1;
  void clear_device_count();
  static const int kDeviceCountFieldNumber = 1;
  ::google::protobuf::int64 device_count() const;
  void set_device_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.GetDeviceHandlesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 device_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetDeviceHandlesRequestImpl();
};
// -------------------------------------------------------------------

class GetDeviceHandlesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetDeviceHandlesResponse) */ {
 public:
  GetDeviceHandlesResponse();
  virtual ~GetDeviceHandlesResponse();

  GetDeviceHandlesResponse(const GetDeviceHandlesResponse& from);

  inline GetDeviceHandlesResponse& operator=(const GetDeviceHandlesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceHandlesResponse(GetDeviceHandlesResponse&& from) noexcept
    : GetDeviceHandlesResponse() {
    *this = ::std::move(from);
  }

  inline GetDeviceHandlesResponse& operator=(GetDeviceHandlesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeviceHandlesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceHandlesResponse* internal_default_instance() {
    return reinterpret_cast<const GetDeviceHandlesResponse*>(
               &_GetDeviceHandlesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetDeviceHandlesResponse* other);
  friend void swap(GetDeviceHandlesResponse& a, GetDeviceHandlesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceHandlesResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetDeviceHandlesResponse>(NULL);
  }

  GetDeviceHandlesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetDeviceHandlesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDeviceHandlesResponse& from);
  void MergeFrom(const GetDeviceHandlesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDeviceHandlesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.DeviceHandle device_handles = 1;
  int device_handles_size() const;
  void clear_device_handles();
  static const int kDeviceHandlesFieldNumber = 1;
  ::xla::DeviceHandle* mutable_device_handles(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >*
      mutable_device_handles();
  const ::xla::DeviceHandle& device_handles(int index) const;
  ::xla::DeviceHandle* add_device_handles();
  const ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >&
      device_handles() const;

  // @@protoc_insertion_point(class_scope:xla.GetDeviceHandlesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle > device_handles_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetDeviceHandlesResponseImpl();
};
// -------------------------------------------------------------------

class TransferToClientRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToClientRequest) */ {
 public:
  TransferToClientRequest();
  virtual ~TransferToClientRequest();

  TransferToClientRequest(const TransferToClientRequest& from);

  inline TransferToClientRequest& operator=(const TransferToClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToClientRequest(TransferToClientRequest&& from) noexcept
    : TransferToClientRequest() {
    *this = ::std::move(from);
  }

  inline TransferToClientRequest& operator=(TransferToClientRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToClientRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToClientRequest* internal_default_instance() {
    return reinterpret_cast<const TransferToClientRequest*>(
               &_TransferToClientRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TransferToClientRequest* other);
  friend void swap(TransferToClientRequest& a, TransferToClientRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToClientRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToClientRequest>(NULL);
  }

  TransferToClientRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToClientRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToClientRequest& from);
  void MergeFrom(const TransferToClientRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToClientRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // .xla.Shape shape_with_layout = 2;
  bool has_shape_with_layout() const;
  void clear_shape_with_layout();
  static const int kShapeWithLayoutFieldNumber = 2;
  const ::xla::Shape& shape_with_layout() const;
  ::xla::Shape* release_shape_with_layout();
  ::xla::Shape* mutable_shape_with_layout();
  void set_allocated_shape_with_layout(::xla::Shape* shape_with_layout);

  // @@protoc_insertion_point(class_scope:xla.TransferToClientRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  ::xla::Shape* shape_with_layout_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToClientRequestImpl();
};
// -------------------------------------------------------------------

class TransferToClientResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToClientResponse) */ {
 public:
  TransferToClientResponse();
  virtual ~TransferToClientResponse();

  TransferToClientResponse(const TransferToClientResponse& from);

  inline TransferToClientResponse& operator=(const TransferToClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToClientResponse(TransferToClientResponse&& from) noexcept
    : TransferToClientResponse() {
    *this = ::std::move(from);
  }

  inline TransferToClientResponse& operator=(TransferToClientResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToClientResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToClientResponse* internal_default_instance() {
    return reinterpret_cast<const TransferToClientResponse*>(
               &_TransferToClientResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TransferToClientResponse* other);
  friend void swap(TransferToClientResponse& a, TransferToClientResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToClientResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToClientResponse>(NULL);
  }

  TransferToClientResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToClientResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToClientResponse& from);
  void MergeFrom(const TransferToClientResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToClientResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.LiteralProto literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  const ::xla::LiteralProto& literal() const;
  ::xla::LiteralProto* release_literal();
  ::xla::LiteralProto* mutable_literal();
  void set_allocated_literal(::xla::LiteralProto* literal);

  // @@protoc_insertion_point(class_scope:xla.TransferToClientResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::LiteralProto* literal_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToClientResponseImpl();
};
// -------------------------------------------------------------------

class TransferToServerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToServerRequest) */ {
 public:
  TransferToServerRequest();
  virtual ~TransferToServerRequest();

  TransferToServerRequest(const TransferToServerRequest& from);

  inline TransferToServerRequest& operator=(const TransferToServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToServerRequest(TransferToServerRequest&& from) noexcept
    : TransferToServerRequest() {
    *this = ::std::move(from);
  }

  inline TransferToServerRequest& operator=(TransferToServerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToServerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToServerRequest* internal_default_instance() {
    return reinterpret_cast<const TransferToServerRequest*>(
               &_TransferToServerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TransferToServerRequest* other);
  friend void swap(TransferToServerRequest& a, TransferToServerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToServerRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToServerRequest>(NULL);
  }

  TransferToServerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToServerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToServerRequest& from);
  void MergeFrom(const TransferToServerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToServerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.LiteralProto literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  const ::xla::LiteralProto& literal() const;
  ::xla::LiteralProto* release_literal();
  ::xla::LiteralProto* mutable_literal();
  void set_allocated_literal(::xla::LiteralProto* literal);

  // .xla.DeviceHandle device_handle = 2;
  bool has_device_handle() const;
  void clear_device_handle();
  static const int kDeviceHandleFieldNumber = 2;
  const ::xla::DeviceHandle& device_handle() const;
  ::xla::DeviceHandle* release_device_handle();
  ::xla::DeviceHandle* mutable_device_handle();
  void set_allocated_device_handle(::xla::DeviceHandle* device_handle);

  // @@protoc_insertion_point(class_scope:xla.TransferToServerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::LiteralProto* literal_;
  ::xla::DeviceHandle* device_handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToServerRequestImpl();
};
// -------------------------------------------------------------------

class TransferToServerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToServerResponse) */ {
 public:
  TransferToServerResponse();
  virtual ~TransferToServerResponse();

  TransferToServerResponse(const TransferToServerResponse& from);

  inline TransferToServerResponse& operator=(const TransferToServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToServerResponse(TransferToServerResponse&& from) noexcept
    : TransferToServerResponse() {
    *this = ::std::move(from);
  }

  inline TransferToServerResponse& operator=(TransferToServerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToServerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToServerResponse* internal_default_instance() {
    return reinterpret_cast<const TransferToServerResponse*>(
               &_TransferToServerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TransferToServerResponse* other);
  friend void swap(TransferToServerResponse& a, TransferToServerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToServerResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToServerResponse>(NULL);
  }

  TransferToServerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToServerResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToServerResponse& from);
  void MergeFrom(const TransferToServerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToServerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // @@protoc_insertion_point(class_scope:xla.TransferToServerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToServerResponseImpl();
};
// -------------------------------------------------------------------

class TransferToInfeedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToInfeedRequest) */ {
 public:
  TransferToInfeedRequest();
  virtual ~TransferToInfeedRequest();

  TransferToInfeedRequest(const TransferToInfeedRequest& from);

  inline TransferToInfeedRequest& operator=(const TransferToInfeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToInfeedRequest(TransferToInfeedRequest&& from) noexcept
    : TransferToInfeedRequest() {
    *this = ::std::move(from);
  }

  inline TransferToInfeedRequest& operator=(TransferToInfeedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToInfeedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToInfeedRequest* internal_default_instance() {
    return reinterpret_cast<const TransferToInfeedRequest*>(
               &_TransferToInfeedRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(TransferToInfeedRequest* other);
  friend void swap(TransferToInfeedRequest& a, TransferToInfeedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToInfeedRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToInfeedRequest>(NULL);
  }

  TransferToInfeedRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToInfeedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToInfeedRequest& from);
  void MergeFrom(const TransferToInfeedRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToInfeedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.LiteralProto literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  const ::xla::LiteralProto& literal() const;
  ::xla::LiteralProto* release_literal();
  ::xla::LiteralProto* mutable_literal();
  void set_allocated_literal(::xla::LiteralProto* literal);

  // .xla.DeviceHandle device_handle = 3;
  bool has_device_handle() const;
  void clear_device_handle();
  static const int kDeviceHandleFieldNumber = 3;
  const ::xla::DeviceHandle& device_handle() const;
  ::xla::DeviceHandle* release_device_handle();
  ::xla::DeviceHandle* mutable_device_handle();
  void set_allocated_device_handle(::xla::DeviceHandle* device_handle);

  // int64 replica_id = 2;
  void clear_replica_id();
  static const int kReplicaIdFieldNumber = 2;
  ::google::protobuf::int64 replica_id() const;
  void set_replica_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.TransferToInfeedRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::LiteralProto* literal_;
  ::xla::DeviceHandle* device_handle_;
  ::google::protobuf::int64 replica_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToInfeedRequestImpl();
};
// -------------------------------------------------------------------

class TransferToInfeedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferToInfeedResponse) */ {
 public:
  TransferToInfeedResponse();
  virtual ~TransferToInfeedResponse();

  TransferToInfeedResponse(const TransferToInfeedResponse& from);

  inline TransferToInfeedResponse& operator=(const TransferToInfeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferToInfeedResponse(TransferToInfeedResponse&& from) noexcept
    : TransferToInfeedResponse() {
    *this = ::std::move(from);
  }

  inline TransferToInfeedResponse& operator=(TransferToInfeedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferToInfeedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferToInfeedResponse* internal_default_instance() {
    return reinterpret_cast<const TransferToInfeedResponse*>(
               &_TransferToInfeedResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TransferToInfeedResponse* other);
  friend void swap(TransferToInfeedResponse& a, TransferToInfeedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferToInfeedResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToInfeedResponse>(NULL);
  }

  TransferToInfeedResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferToInfeedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferToInfeedResponse& from);
  void MergeFrom(const TransferToInfeedResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferToInfeedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.TransferToInfeedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferToInfeedResponseImpl();
};
// -------------------------------------------------------------------

class TransferFromOutfeedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferFromOutfeedRequest) */ {
 public:
  TransferFromOutfeedRequest();
  virtual ~TransferFromOutfeedRequest();

  TransferFromOutfeedRequest(const TransferFromOutfeedRequest& from);

  inline TransferFromOutfeedRequest& operator=(const TransferFromOutfeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferFromOutfeedRequest(TransferFromOutfeedRequest&& from) noexcept
    : TransferFromOutfeedRequest() {
    *this = ::std::move(from);
  }

  inline TransferFromOutfeedRequest& operator=(TransferFromOutfeedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferFromOutfeedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferFromOutfeedRequest* internal_default_instance() {
    return reinterpret_cast<const TransferFromOutfeedRequest*>(
               &_TransferFromOutfeedRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TransferFromOutfeedRequest* other);
  friend void swap(TransferFromOutfeedRequest& a, TransferFromOutfeedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferFromOutfeedRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferFromOutfeedRequest>(NULL);
  }

  TransferFromOutfeedRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferFromOutfeedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferFromOutfeedRequest& from);
  void MergeFrom(const TransferFromOutfeedRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferFromOutfeedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.Shape shape_with_layout = 1;
  bool has_shape_with_layout() const;
  void clear_shape_with_layout();
  static const int kShapeWithLayoutFieldNumber = 1;
  const ::xla::Shape& shape_with_layout() const;
  ::xla::Shape* release_shape_with_layout();
  ::xla::Shape* mutable_shape_with_layout();
  void set_allocated_shape_with_layout(::xla::Shape* shape_with_layout);

  // .xla.DeviceHandle device_handle = 3;
  bool has_device_handle() const;
  void clear_device_handle();
  static const int kDeviceHandleFieldNumber = 3;
  const ::xla::DeviceHandle& device_handle() const;
  ::xla::DeviceHandle* release_device_handle();
  ::xla::DeviceHandle* mutable_device_handle();
  void set_allocated_device_handle(::xla::DeviceHandle* device_handle);

  // int64 replica_id = 2;
  void clear_replica_id();
  static const int kReplicaIdFieldNumber = 2;
  ::google::protobuf::int64 replica_id() const;
  void set_replica_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.TransferFromOutfeedRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::Shape* shape_with_layout_;
  ::xla::DeviceHandle* device_handle_;
  ::google::protobuf::int64 replica_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferFromOutfeedRequestImpl();
};
// -------------------------------------------------------------------

class TransferFromOutfeedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.TransferFromOutfeedResponse) */ {
 public:
  TransferFromOutfeedResponse();
  virtual ~TransferFromOutfeedResponse();

  TransferFromOutfeedResponse(const TransferFromOutfeedResponse& from);

  inline TransferFromOutfeedResponse& operator=(const TransferFromOutfeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferFromOutfeedResponse(TransferFromOutfeedResponse&& from) noexcept
    : TransferFromOutfeedResponse() {
    *this = ::std::move(from);
  }

  inline TransferFromOutfeedResponse& operator=(TransferFromOutfeedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferFromOutfeedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferFromOutfeedResponse* internal_default_instance() {
    return reinterpret_cast<const TransferFromOutfeedResponse*>(
               &_TransferFromOutfeedResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TransferFromOutfeedResponse* other);
  friend void swap(TransferFromOutfeedResponse& a, TransferFromOutfeedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferFromOutfeedResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferFromOutfeedResponse>(NULL);
  }

  TransferFromOutfeedResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TransferFromOutfeedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransferFromOutfeedResponse& from);
  void MergeFrom(const TransferFromOutfeedResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransferFromOutfeedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.LiteralProto literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  const ::xla::LiteralProto& literal() const;
  ::xla::LiteralProto* release_literal();
  ::xla::LiteralProto* mutable_literal();
  void set_allocated_literal(::xla::LiteralProto* literal);

  // @@protoc_insertion_point(class_scope:xla.TransferFromOutfeedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::LiteralProto* literal_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsTransferFromOutfeedResponseImpl();
};
// -------------------------------------------------------------------

class ResetDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ResetDeviceRequest) */ {
 public:
  ResetDeviceRequest();
  virtual ~ResetDeviceRequest();

  ResetDeviceRequest(const ResetDeviceRequest& from);

  inline ResetDeviceRequest& operator=(const ResetDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetDeviceRequest(ResetDeviceRequest&& from) noexcept
    : ResetDeviceRequest() {
    *this = ::std::move(from);
  }

  inline ResetDeviceRequest& operator=(ResetDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const ResetDeviceRequest*>(
               &_ResetDeviceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ResetDeviceRequest* other);
  friend void swap(ResetDeviceRequest& a, ResetDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetDeviceRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ResetDeviceRequest>(NULL);
  }

  ResetDeviceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ResetDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetDeviceRequest& from);
  void MergeFrom(const ResetDeviceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.DeviceHandle device_handle = 1;
  bool has_device_handle() const;
  void clear_device_handle();
  static const int kDeviceHandleFieldNumber = 1;
  const ::xla::DeviceHandle& device_handle() const;
  ::xla::DeviceHandle* release_device_handle();
  ::xla::DeviceHandle* mutable_device_handle();
  void set_allocated_device_handle(::xla::DeviceHandle* device_handle);

  // @@protoc_insertion_point(class_scope:xla.ResetDeviceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::DeviceHandle* device_handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsResetDeviceRequestImpl();
};
// -------------------------------------------------------------------

class ResetDeviceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ResetDeviceResponse) */ {
 public:
  ResetDeviceResponse();
  virtual ~ResetDeviceResponse();

  ResetDeviceResponse(const ResetDeviceResponse& from);

  inline ResetDeviceResponse& operator=(const ResetDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetDeviceResponse(ResetDeviceResponse&& from) noexcept
    : ResetDeviceResponse() {
    *this = ::std::move(from);
  }

  inline ResetDeviceResponse& operator=(ResetDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const ResetDeviceResponse*>(
               &_ResetDeviceResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ResetDeviceResponse* other);
  friend void swap(ResetDeviceResponse& a, ResetDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetDeviceResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ResetDeviceResponse>(NULL);
  }

  ResetDeviceResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ResetDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetDeviceResponse& from);
  void MergeFrom(const ResetDeviceResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.ResetDeviceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsResetDeviceResponseImpl();
};
// -------------------------------------------------------------------

class ComputationStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputationStatsRequest) */ {
 public:
  ComputationStatsRequest();
  virtual ~ComputationStatsRequest();

  ComputationStatsRequest(const ComputationStatsRequest& from);

  inline ComputationStatsRequest& operator=(const ComputationStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputationStatsRequest(ComputationStatsRequest&& from) noexcept
    : ComputationStatsRequest() {
    *this = ::std::move(from);
  }

  inline ComputationStatsRequest& operator=(ComputationStatsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputationStatsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputationStatsRequest* internal_default_instance() {
    return reinterpret_cast<const ComputationStatsRequest*>(
               &_ComputationStatsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ComputationStatsRequest* other);
  friend void swap(ComputationStatsRequest& a, ComputationStatsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputationStatsRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationStatsRequest>(NULL);
  }

  ComputationStatsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationStatsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputationStatsRequest& from);
  void MergeFrom(const ComputationStatsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.DebugOptions debug_options = 2;
  bool has_debug_options() const;
  void clear_debug_options();
  static const int kDebugOptionsFieldNumber = 2;
  const ::xla::DebugOptions& debug_options() const;
  ::xla::DebugOptions* release_debug_options();
  ::xla::DebugOptions* mutable_debug_options();
  void set_allocated_debug_options(::xla::DebugOptions* debug_options);

  // @@protoc_insertion_point(class_scope:xla.ComputationStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  ::xla::DebugOptions* debug_options_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputationStatsRequestImpl();
};
// -------------------------------------------------------------------

class ComputationStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputationStatsResponse) */ {
 public:
  ComputationStatsResponse();
  virtual ~ComputationStatsResponse();

  ComputationStatsResponse(const ComputationStatsResponse& from);

  inline ComputationStatsResponse& operator=(const ComputationStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputationStatsResponse(ComputationStatsResponse&& from) noexcept
    : ComputationStatsResponse() {
    *this = ::std::move(from);
  }

  inline ComputationStatsResponse& operator=(ComputationStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputationStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputationStatsResponse* internal_default_instance() {
    return reinterpret_cast<const ComputationStatsResponse*>(
               &_ComputationStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ComputationStatsResponse* other);
  friend void swap(ComputationStatsResponse& a, ComputationStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputationStatsResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationStatsResponse>(NULL);
  }

  ComputationStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationStatsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputationStatsResponse& from);
  void MergeFrom(const ComputationStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationStats stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::xla::ComputationStats& stats() const;
  ::xla::ComputationStats* release_stats();
  ::xla::ComputationStats* mutable_stats();
  void set_allocated_stats(::xla::ComputationStats* stats);

  // @@protoc_insertion_point(class_scope:xla.ComputationStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationStats* stats_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputationStatsResponseImpl();
};
// -------------------------------------------------------------------

class ComputationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputationRequest) */ {
 public:
  ComputationRequest();
  virtual ~ComputationRequest();

  ComputationRequest(const ComputationRequest& from);

  inline ComputationRequest& operator=(const ComputationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputationRequest(ComputationRequest&& from) noexcept
    : ComputationRequest() {
    *this = ::std::move(from);
  }

  inline ComputationRequest& operator=(ComputationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputationRequest* internal_default_instance() {
    return reinterpret_cast<const ComputationRequest*>(
               &_ComputationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ComputationRequest* other);
  friend void swap(ComputationRequest& a, ComputationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputationRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationRequest>(NULL);
  }

  ComputationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputationRequest& from);
  void MergeFrom(const ComputationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:xla.ComputationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputationRequestImpl();
};
// -------------------------------------------------------------------

class ComputationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputationResponse) */ {
 public:
  ComputationResponse();
  virtual ~ComputationResponse();

  ComputationResponse(const ComputationResponse& from);

  inline ComputationResponse& operator=(const ComputationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputationResponse(ComputationResponse&& from) noexcept
    : ComputationResponse() {
    *this = ::std::move(from);
  }

  inline ComputationResponse& operator=(ComputationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputationResponse* internal_default_instance() {
    return reinterpret_cast<const ComputationResponse*>(
               &_ComputationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ComputationResponse* other);
  friend void swap(ComputationResponse& a, ComputationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputationResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationResponse>(NULL);
  }

  ComputationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputationResponse& from);
  void MergeFrom(const ComputationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // @@protoc_insertion_point(class_scope:xla.ComputationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputationResponseImpl();
};
// -------------------------------------------------------------------

class CreateChannelHandleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.CreateChannelHandleRequest) */ {
 public:
  CreateChannelHandleRequest();
  virtual ~CreateChannelHandleRequest();

  CreateChannelHandleRequest(const CreateChannelHandleRequest& from);

  inline CreateChannelHandleRequest& operator=(const CreateChannelHandleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateChannelHandleRequest(CreateChannelHandleRequest&& from) noexcept
    : CreateChannelHandleRequest() {
    *this = ::std::move(from);
  }

  inline CreateChannelHandleRequest& operator=(CreateChannelHandleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateChannelHandleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateChannelHandleRequest* internal_default_instance() {
    return reinterpret_cast<const CreateChannelHandleRequest*>(
               &_CreateChannelHandleRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CreateChannelHandleRequest* other);
  friend void swap(CreateChannelHandleRequest& a, CreateChannelHandleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateChannelHandleRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CreateChannelHandleRequest>(NULL);
  }

  CreateChannelHandleRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CreateChannelHandleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateChannelHandleRequest& from);
  void MergeFrom(const CreateChannelHandleRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateChannelHandleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.CreateChannelHandleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsCreateChannelHandleRequestImpl();
};
// -------------------------------------------------------------------

class CreateChannelHandleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.CreateChannelHandleResponse) */ {
 public:
  CreateChannelHandleResponse();
  virtual ~CreateChannelHandleResponse();

  CreateChannelHandleResponse(const CreateChannelHandleResponse& from);

  inline CreateChannelHandleResponse& operator=(const CreateChannelHandleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateChannelHandleResponse(CreateChannelHandleResponse&& from) noexcept
    : CreateChannelHandleResponse() {
    *this = ::std::move(from);
  }

  inline CreateChannelHandleResponse& operator=(CreateChannelHandleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateChannelHandleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateChannelHandleResponse* internal_default_instance() {
    return reinterpret_cast<const CreateChannelHandleResponse*>(
               &_CreateChannelHandleResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CreateChannelHandleResponse* other);
  friend void swap(CreateChannelHandleResponse& a, CreateChannelHandleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateChannelHandleResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CreateChannelHandleResponse>(NULL);
  }

  CreateChannelHandleResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CreateChannelHandleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateChannelHandleResponse& from);
  void MergeFrom(const CreateChannelHandleResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateChannelHandleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ChannelHandle channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::xla::ChannelHandle& channel() const;
  ::xla::ChannelHandle* release_channel();
  ::xla::ChannelHandle* mutable_channel();
  void set_allocated_channel(::xla::ChannelHandle* channel);

  // @@protoc_insertion_point(class_scope:xla.CreateChannelHandleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ChannelHandle* channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsCreateChannelHandleResponseImpl();
};
// -------------------------------------------------------------------

class UnregisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.UnregisterRequest) */ {
 public:
  UnregisterRequest();
  virtual ~UnregisterRequest();

  UnregisterRequest(const UnregisterRequest& from);

  inline UnregisterRequest& operator=(const UnregisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterRequest(UnregisterRequest&& from) noexcept
    : UnregisterRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterRequest& operator=(UnregisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterRequest*>(
               &_UnregisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(UnregisterRequest* other);
  friend void swap(UnregisterRequest& a, UnregisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnregisterRequest>(NULL);
  }

  UnregisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnregisterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnregisterRequest& from);
  void MergeFrom(const UnregisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnregisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // @@protoc_insertion_point(class_scope:xla.UnregisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsUnregisterRequestImpl();
};
// -------------------------------------------------------------------

class UnregisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.UnregisterResponse) */ {
 public:
  UnregisterResponse();
  virtual ~UnregisterResponse();

  UnregisterResponse(const UnregisterResponse& from);

  inline UnregisterResponse& operator=(const UnregisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterResponse(UnregisterResponse&& from) noexcept
    : UnregisterResponse() {
    *this = ::std::move(from);
  }

  inline UnregisterResponse& operator=(UnregisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterResponse* internal_default_instance() {
    return reinterpret_cast<const UnregisterResponse*>(
               &_UnregisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(UnregisterResponse* other);
  friend void swap(UnregisterResponse& a, UnregisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnregisterResponse>(NULL);
  }

  UnregisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnregisterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnregisterResponse& from);
  void MergeFrom(const UnregisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnregisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.UnregisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsUnregisterResponseImpl();
};
// -------------------------------------------------------------------

class SetReturnValueRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SetReturnValueRequest) */ {
 public:
  SetReturnValueRequest();
  virtual ~SetReturnValueRequest();

  SetReturnValueRequest(const SetReturnValueRequest& from);

  inline SetReturnValueRequest& operator=(const SetReturnValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetReturnValueRequest(SetReturnValueRequest&& from) noexcept
    : SetReturnValueRequest() {
    *this = ::std::move(from);
  }

  inline SetReturnValueRequest& operator=(SetReturnValueRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetReturnValueRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetReturnValueRequest* internal_default_instance() {
    return reinterpret_cast<const SetReturnValueRequest*>(
               &_SetReturnValueRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SetReturnValueRequest* other);
  friend void swap(SetReturnValueRequest& a, SetReturnValueRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetReturnValueRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SetReturnValueRequest>(NULL);
  }

  SetReturnValueRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SetReturnValueRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetReturnValueRequest& from);
  void MergeFrom(const SetReturnValueRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetReturnValueRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.ComputationDataHandle operand = 2;
  bool has_operand() const;
  void clear_operand();
  static const int kOperandFieldNumber = 2;
  const ::xla::ComputationDataHandle& operand() const;
  ::xla::ComputationDataHandle* release_operand();
  ::xla::ComputationDataHandle* mutable_operand();
  void set_allocated_operand(::xla::ComputationDataHandle* operand);

  // @@protoc_insertion_point(class_scope:xla.SetReturnValueRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  ::xla::ComputationDataHandle* operand_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSetReturnValueRequestImpl();
};
// -------------------------------------------------------------------

class SetReturnValueResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SetReturnValueResponse) */ {
 public:
  SetReturnValueResponse();
  virtual ~SetReturnValueResponse();

  SetReturnValueResponse(const SetReturnValueResponse& from);

  inline SetReturnValueResponse& operator=(const SetReturnValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetReturnValueResponse(SetReturnValueResponse&& from) noexcept
    : SetReturnValueResponse() {
    *this = ::std::move(from);
  }

  inline SetReturnValueResponse& operator=(SetReturnValueResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetReturnValueResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetReturnValueResponse* internal_default_instance() {
    return reinterpret_cast<const SetReturnValueResponse*>(
               &_SetReturnValueResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SetReturnValueResponse* other);
  friend void swap(SetReturnValueResponse& a, SetReturnValueResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetReturnValueResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SetReturnValueResponse>(NULL);
  }

  SetReturnValueResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SetReturnValueResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetReturnValueResponse& from);
  void MergeFrom(const SetReturnValueResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetReturnValueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.SetReturnValueResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSetReturnValueResponseImpl();
};
// -------------------------------------------------------------------

class ExecuteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteRequest) */ {
 public:
  ExecuteRequest();
  virtual ~ExecuteRequest();

  ExecuteRequest(const ExecuteRequest& from);

  inline ExecuteRequest& operator=(const ExecuteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteRequest(ExecuteRequest&& from) noexcept
    : ExecuteRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteRequest& operator=(ExecuteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteRequest*>(
               &_ExecuteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ExecuteRequest* other);
  friend void swap(ExecuteRequest& a, ExecuteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteRequest>(NULL);
  }

  ExecuteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteRequest& from);
  void MergeFrom(const ExecuteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::xla::GlobalDataHandle* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_arguments();
  const ::xla::GlobalDataHandle& arguments(int index) const;
  ::xla::GlobalDataHandle* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      arguments() const;

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.ExecutionOptions execution_options = 5;
  bool has_execution_options() const;
  void clear_execution_options();
  static const int kExecutionOptionsFieldNumber = 5;
  const ::xla::ExecutionOptions& execution_options() const;
  ::xla::ExecutionOptions* release_execution_options();
  ::xla::ExecutionOptions* mutable_execution_options();
  void set_allocated_execution_options(::xla::ExecutionOptions* execution_options);

  // @@protoc_insertion_point(class_scope:xla.ExecuteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > arguments_;
  ::xla::ComputationHandle* computation_;
  ::xla::ExecutionOptions* execution_options_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteRequestImpl();
};
// -------------------------------------------------------------------

class ExecuteGraphRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteGraphRequest) */ {
 public:
  ExecuteGraphRequest();
  virtual ~ExecuteGraphRequest();

  ExecuteGraphRequest(const ExecuteGraphRequest& from);

  inline ExecuteGraphRequest& operator=(const ExecuteGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGraphRequest(ExecuteGraphRequest&& from) noexcept
    : ExecuteGraphRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteGraphRequest& operator=(ExecuteGraphRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGraphRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteGraphRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteGraphRequest*>(
               &_ExecuteGraphRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ExecuteGraphRequest* other);
  friend void swap(ExecuteGraphRequest& a, ExecuteGraphRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGraphRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteGraphRequest>(NULL);
  }

  ExecuteGraphRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteGraphRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGraphRequest& from);
  void MergeFrom(const ExecuteGraphRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGraphRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::xla::GlobalDataHandle* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_arguments();
  const ::xla::GlobalDataHandle& arguments(int index) const;
  ::xla::GlobalDataHandle* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      arguments() const;

  // .xla.HloModuleProto computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::HloModuleProto& computation() const;
  ::xla::HloModuleProto* release_computation();
  ::xla::HloModuleProto* mutable_computation();
  void set_allocated_computation(::xla::HloModuleProto* computation);

  // .xla.ExecutionOptions execution_options = 3;
  bool has_execution_options() const;
  void clear_execution_options();
  static const int kExecutionOptionsFieldNumber = 3;
  const ::xla::ExecutionOptions& execution_options() const;
  ::xla::ExecutionOptions* release_execution_options();
  ::xla::ExecutionOptions* mutable_execution_options();
  void set_allocated_execution_options(::xla::ExecutionOptions* execution_options);

  // @@protoc_insertion_point(class_scope:xla.ExecuteGraphRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > arguments_;
  ::xla::HloModuleProto* computation_;
  ::xla::ExecutionOptions* execution_options_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteGraphRequestImpl();
};
// -------------------------------------------------------------------

class ExecuteParallelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteParallelRequest) */ {
 public:
  ExecuteParallelRequest();
  virtual ~ExecuteParallelRequest();

  ExecuteParallelRequest(const ExecuteParallelRequest& from);

  inline ExecuteParallelRequest& operator=(const ExecuteParallelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteParallelRequest(ExecuteParallelRequest&& from) noexcept
    : ExecuteParallelRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteParallelRequest& operator=(ExecuteParallelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteParallelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteParallelRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteParallelRequest*>(
               &_ExecuteParallelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ExecuteParallelRequest* other);
  friend void swap(ExecuteParallelRequest& a, ExecuteParallelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteParallelRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteParallelRequest>(NULL);
  }

  ExecuteParallelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteParallelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteParallelRequest& from);
  void MergeFrom(const ExecuteParallelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteParallelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.ExecuteRequest requests = 1;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 1;
  ::xla::ExecuteRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::ExecuteRequest >*
      mutable_requests();
  const ::xla::ExecuteRequest& requests(int index) const;
  ::xla::ExecuteRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::xla::ExecuteRequest >&
      requests() const;

  // @@protoc_insertion_point(class_scope:xla.ExecuteParallelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::ExecuteRequest > requests_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteParallelRequestImpl();
};
// -------------------------------------------------------------------

class ExecuteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteResponse) */ {
 public:
  ExecuteResponse();
  virtual ~ExecuteResponse();

  ExecuteResponse(const ExecuteResponse& from);

  inline ExecuteResponse& operator=(const ExecuteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteResponse(ExecuteResponse&& from) noexcept
    : ExecuteResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteResponse& operator=(ExecuteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteResponse*>(
               &_ExecuteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ExecuteResponse* other);
  friend void swap(ExecuteResponse& a, ExecuteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteResponse>(NULL);
  }

  ExecuteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteResponse& from);
  void MergeFrom(const ExecuteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle output = 1;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 1;
  const ::xla::GlobalDataHandle& output() const;
  ::xla::GlobalDataHandle* release_output();
  ::xla::GlobalDataHandle* mutable_output();
  void set_allocated_output(::xla::GlobalDataHandle* output);

  // .xla.ExecutionProfile profile = 2;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 2;
  const ::xla::ExecutionProfile& profile() const;
  ::xla::ExecutionProfile* release_profile();
  ::xla::ExecutionProfile* mutable_profile();
  void set_allocated_profile(::xla::ExecutionProfile* profile);

  // @@protoc_insertion_point(class_scope:xla.ExecuteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* output_;
  ::xla::ExecutionProfile* profile_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteResponseImpl();
};
// -------------------------------------------------------------------

class ExecuteParallelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteParallelResponse) */ {
 public:
  ExecuteParallelResponse();
  virtual ~ExecuteParallelResponse();

  ExecuteParallelResponse(const ExecuteParallelResponse& from);

  inline ExecuteParallelResponse& operator=(const ExecuteParallelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteParallelResponse(ExecuteParallelResponse&& from) noexcept
    : ExecuteParallelResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteParallelResponse& operator=(ExecuteParallelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteParallelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteParallelResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteParallelResponse*>(
               &_ExecuteParallelResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(ExecuteParallelResponse* other);
  friend void swap(ExecuteParallelResponse& a, ExecuteParallelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteParallelResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteParallelResponse>(NULL);
  }

  ExecuteParallelResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteParallelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteParallelResponse& from);
  void MergeFrom(const ExecuteParallelResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteParallelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.ExecuteResponse responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  ::xla::ExecuteResponse* mutable_responses(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::ExecuteResponse >*
      mutable_responses();
  const ::xla::ExecuteResponse& responses(int index) const;
  ::xla::ExecuteResponse* add_responses();
  const ::google::protobuf::RepeatedPtrField< ::xla::ExecuteResponse >&
      responses() const;

  // @@protoc_insertion_point(class_scope:xla.ExecuteParallelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::ExecuteResponse > responses_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteParallelResponseImpl();
};
// -------------------------------------------------------------------

class ExecuteAsyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteAsyncRequest) */ {
 public:
  ExecuteAsyncRequest();
  virtual ~ExecuteAsyncRequest();

  ExecuteAsyncRequest(const ExecuteAsyncRequest& from);

  inline ExecuteAsyncRequest& operator=(const ExecuteAsyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteAsyncRequest(ExecuteAsyncRequest&& from) noexcept
    : ExecuteAsyncRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteAsyncRequest& operator=(ExecuteAsyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteAsyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteAsyncRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteAsyncRequest*>(
               &_ExecuteAsyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(ExecuteAsyncRequest* other);
  friend void swap(ExecuteAsyncRequest& a, ExecuteAsyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteAsyncRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteAsyncRequest>(NULL);
  }

  ExecuteAsyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteAsyncRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteAsyncRequest& from);
  void MergeFrom(const ExecuteAsyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteAsyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::xla::GlobalDataHandle* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_arguments();
  const ::xla::GlobalDataHandle& arguments(int index) const;
  ::xla::GlobalDataHandle* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      arguments() const;

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.ExecutionOptions execution_options = 6;
  bool has_execution_options() const;
  void clear_execution_options();
  static const int kExecutionOptionsFieldNumber = 6;
  const ::xla::ExecutionOptions& execution_options() const;
  ::xla::ExecutionOptions* release_execution_options();
  ::xla::ExecutionOptions* mutable_execution_options();
  void set_allocated_execution_options(::xla::ExecutionOptions* execution_options);

  // @@protoc_insertion_point(class_scope:xla.ExecuteAsyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > arguments_;
  ::xla::ComputationHandle* computation_;
  ::xla::ExecutionOptions* execution_options_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteAsyncRequestImpl();
};
// -------------------------------------------------------------------

class ExecuteAsyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ExecuteAsyncResponse) */ {
 public:
  ExecuteAsyncResponse();
  virtual ~ExecuteAsyncResponse();

  ExecuteAsyncResponse(const ExecuteAsyncResponse& from);

  inline ExecuteAsyncResponse& operator=(const ExecuteAsyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteAsyncResponse(ExecuteAsyncResponse&& from) noexcept
    : ExecuteAsyncResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteAsyncResponse& operator=(ExecuteAsyncResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteAsyncResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteAsyncResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteAsyncResponse*>(
               &_ExecuteAsyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(ExecuteAsyncResponse* other);
  friend void swap(ExecuteAsyncResponse& a, ExecuteAsyncResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteAsyncResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteAsyncResponse>(NULL);
  }

  ExecuteAsyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExecuteAsyncResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteAsyncResponse& from);
  void MergeFrom(const ExecuteAsyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteAsyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ExecutionHandle execution = 1;
  bool has_execution() const;
  void clear_execution();
  static const int kExecutionFieldNumber = 1;
  const ::xla::ExecutionHandle& execution() const;
  ::xla::ExecutionHandle* release_execution();
  ::xla::ExecutionHandle* mutable_execution();
  void set_allocated_execution(::xla::ExecutionHandle* execution);

  // @@protoc_insertion_point(class_scope:xla.ExecuteAsyncResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ExecutionHandle* execution_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsExecuteAsyncResponseImpl();
};
// -------------------------------------------------------------------

class WaitForExecutionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.WaitForExecutionRequest) */ {
 public:
  WaitForExecutionRequest();
  virtual ~WaitForExecutionRequest();

  WaitForExecutionRequest(const WaitForExecutionRequest& from);

  inline WaitForExecutionRequest& operator=(const WaitForExecutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaitForExecutionRequest(WaitForExecutionRequest&& from) noexcept
    : WaitForExecutionRequest() {
    *this = ::std::move(from);
  }

  inline WaitForExecutionRequest& operator=(WaitForExecutionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WaitForExecutionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaitForExecutionRequest* internal_default_instance() {
    return reinterpret_cast<const WaitForExecutionRequest*>(
               &_WaitForExecutionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(WaitForExecutionRequest* other);
  friend void swap(WaitForExecutionRequest& a, WaitForExecutionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaitForExecutionRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaitForExecutionRequest>(NULL);
  }

  WaitForExecutionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaitForExecutionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WaitForExecutionRequest& from);
  void MergeFrom(const WaitForExecutionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WaitForExecutionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ExecutionHandle execution = 1;
  bool has_execution() const;
  void clear_execution();
  static const int kExecutionFieldNumber = 1;
  const ::xla::ExecutionHandle& execution() const;
  ::xla::ExecutionHandle* release_execution();
  ::xla::ExecutionHandle* mutable_execution();
  void set_allocated_execution(::xla::ExecutionHandle* execution);

  // @@protoc_insertion_point(class_scope:xla.WaitForExecutionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ExecutionHandle* execution_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsWaitForExecutionRequestImpl();
};
// -------------------------------------------------------------------

class WaitForExecutionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.WaitForExecutionResponse) */ {
 public:
  WaitForExecutionResponse();
  virtual ~WaitForExecutionResponse();

  WaitForExecutionResponse(const WaitForExecutionResponse& from);

  inline WaitForExecutionResponse& operator=(const WaitForExecutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaitForExecutionResponse(WaitForExecutionResponse&& from) noexcept
    : WaitForExecutionResponse() {
    *this = ::std::move(from);
  }

  inline WaitForExecutionResponse& operator=(WaitForExecutionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WaitForExecutionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaitForExecutionResponse* internal_default_instance() {
    return reinterpret_cast<const WaitForExecutionResponse*>(
               &_WaitForExecutionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(WaitForExecutionResponse* other);
  friend void swap(WaitForExecutionResponse& a, WaitForExecutionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaitForExecutionResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaitForExecutionResponse>(NULL);
  }

  WaitForExecutionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaitForExecutionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WaitForExecutionResponse& from);
  void MergeFrom(const WaitForExecutionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WaitForExecutionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle output = 1;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 1;
  const ::xla::GlobalDataHandle& output() const;
  ::xla::GlobalDataHandle* release_output();
  ::xla::GlobalDataHandle* mutable_output();
  void set_allocated_output(::xla::GlobalDataHandle* output);

  // .xla.ExecutionProfile profile = 2;
  bool has_profile() const;
  void clear_profile();
  static const int kProfileFieldNumber = 2;
  const ::xla::ExecutionProfile& profile() const;
  ::xla::ExecutionProfile* release_profile();
  ::xla::ExecutionProfile* mutable_profile();
  void set_allocated_profile(::xla::ExecutionProfile* profile);

  // @@protoc_insertion_point(class_scope:xla.WaitForExecutionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* output_;
  ::xla::ExecutionProfile* profile_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsWaitForExecutionResponseImpl();
};
// -------------------------------------------------------------------

class IsConstantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.IsConstantRequest) */ {
 public:
  IsConstantRequest();
  virtual ~IsConstantRequest();

  IsConstantRequest(const IsConstantRequest& from);

  inline IsConstantRequest& operator=(const IsConstantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsConstantRequest(IsConstantRequest&& from) noexcept
    : IsConstantRequest() {
    *this = ::std::move(from);
  }

  inline IsConstantRequest& operator=(IsConstantRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IsConstantRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsConstantRequest* internal_default_instance() {
    return reinterpret_cast<const IsConstantRequest*>(
               &_IsConstantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(IsConstantRequest* other);
  friend void swap(IsConstantRequest& a, IsConstantRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsConstantRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IsConstantRequest>(NULL);
  }

  IsConstantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IsConstantRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsConstantRequest& from);
  void MergeFrom(const IsConstantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsConstantRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.ComputationDataHandle operand = 2;
  bool has_operand() const;
  void clear_operand();
  static const int kOperandFieldNumber = 2;
  const ::xla::ComputationDataHandle& operand() const;
  ::xla::ComputationDataHandle* release_operand();
  ::xla::ComputationDataHandle* mutable_operand();
  void set_allocated_operand(::xla::ComputationDataHandle* operand);

  // int64 num_parameters = 3;
  void clear_num_parameters();
  static const int kNumParametersFieldNumber = 3;
  ::google::protobuf::int64 num_parameters() const;
  void set_num_parameters(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.IsConstantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  ::xla::ComputationDataHandle* operand_;
  ::google::protobuf::int64 num_parameters_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsIsConstantRequestImpl();
};
// -------------------------------------------------------------------

class IsConstantResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.IsConstantResponse) */ {
 public:
  IsConstantResponse();
  virtual ~IsConstantResponse();

  IsConstantResponse(const IsConstantResponse& from);

  inline IsConstantResponse& operator=(const IsConstantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsConstantResponse(IsConstantResponse&& from) noexcept
    : IsConstantResponse() {
    *this = ::std::move(from);
  }

  inline IsConstantResponse& operator=(IsConstantResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IsConstantResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsConstantResponse* internal_default_instance() {
    return reinterpret_cast<const IsConstantResponse*>(
               &_IsConstantResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(IsConstantResponse* other);
  friend void swap(IsConstantResponse& a, IsConstantResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsConstantResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IsConstantResponse>(NULL);
  }

  IsConstantResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IsConstantResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsConstantResponse& from);
  void MergeFrom(const IsConstantResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsConstantResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_constant = 1;
  void clear_is_constant();
  static const int kIsConstantFieldNumber = 1;
  bool is_constant() const;
  void set_is_constant(bool value);

  // @@protoc_insertion_point(class_scope:xla.IsConstantResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_constant_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsIsConstantResponseImpl();
};
// -------------------------------------------------------------------

class ComputeConstantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputeConstantRequest) */ {
 public:
  ComputeConstantRequest();
  virtual ~ComputeConstantRequest();

  ComputeConstantRequest(const ComputeConstantRequest& from);

  inline ComputeConstantRequest& operator=(const ComputeConstantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputeConstantRequest(ComputeConstantRequest&& from) noexcept
    : ComputeConstantRequest() {
    *this = ::std::move(from);
  }

  inline ComputeConstantRequest& operator=(ComputeConstantRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputeConstantRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputeConstantRequest* internal_default_instance() {
    return reinterpret_cast<const ComputeConstantRequest*>(
               &_ComputeConstantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ComputeConstantRequest* other);
  friend void swap(ComputeConstantRequest& a, ComputeConstantRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputeConstantRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputeConstantRequest>(NULL);
  }

  ComputeConstantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputeConstantRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputeConstantRequest& from);
  void MergeFrom(const ComputeConstantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputeConstantRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.LiteralProto parameters = 4;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 4;
  ::xla::LiteralProto* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >*
      mutable_parameters();
  const ::xla::LiteralProto& parameters(int index) const;
  ::xla::LiteralProto* add_parameters();
  const ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >&
      parameters() const;

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // .xla.ComputationDataHandle operand = 2;
  bool has_operand() const;
  void clear_operand();
  static const int kOperandFieldNumber = 2;
  const ::xla::ComputationDataHandle& operand() const;
  ::xla::ComputationDataHandle* release_operand();
  ::xla::ComputationDataHandle* mutable_operand();
  void set_allocated_operand(::xla::ComputationDataHandle* operand);

  // .xla.Layout output_layout = 3;
  bool has_output_layout() const;
  void clear_output_layout();
  static const int kOutputLayoutFieldNumber = 3;
  const ::xla::Layout& output_layout() const;
  ::xla::Layout* release_output_layout();
  ::xla::Layout* mutable_output_layout();
  void set_allocated_output_layout(::xla::Layout* output_layout);

  // @@protoc_insertion_point(class_scope:xla.ComputeConstantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto > parameters_;
  ::xla::ComputationHandle* computation_;
  ::xla::ComputationDataHandle* operand_;
  ::xla::Layout* output_layout_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputeConstantRequestImpl();
};
// -------------------------------------------------------------------

class ComputeConstantResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.ComputeConstantResponse) */ {
 public:
  ComputeConstantResponse();
  virtual ~ComputeConstantResponse();

  ComputeConstantResponse(const ComputeConstantResponse& from);

  inline ComputeConstantResponse& operator=(const ComputeConstantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputeConstantResponse(ComputeConstantResponse&& from) noexcept
    : ComputeConstantResponse() {
    *this = ::std::move(from);
  }

  inline ComputeConstantResponse& operator=(ComputeConstantResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputeConstantResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComputeConstantResponse* internal_default_instance() {
    return reinterpret_cast<const ComputeConstantResponse*>(
               &_ComputeConstantResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(ComputeConstantResponse* other);
  friend void swap(ComputeConstantResponse& a, ComputeConstantResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputeConstantResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputeConstantResponse>(NULL);
  }

  ComputeConstantResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ComputeConstantResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputeConstantResponse& from);
  void MergeFrom(const ComputeConstantResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputeConstantResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.LiteralProto literal = 1;
  bool has_literal() const;
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  const ::xla::LiteralProto& literal() const;
  ::xla::LiteralProto* release_literal();
  ::xla::LiteralProto* mutable_literal();
  void set_allocated_literal(::xla::LiteralProto* literal);

  // @@protoc_insertion_point(class_scope:xla.ComputeConstantResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::LiteralProto* literal_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsComputeConstantResponseImpl();
};
// -------------------------------------------------------------------

class DeconstructTupleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DeconstructTupleRequest) */ {
 public:
  DeconstructTupleRequest();
  virtual ~DeconstructTupleRequest();

  DeconstructTupleRequest(const DeconstructTupleRequest& from);

  inline DeconstructTupleRequest& operator=(const DeconstructTupleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeconstructTupleRequest(DeconstructTupleRequest&& from) noexcept
    : DeconstructTupleRequest() {
    *this = ::std::move(from);
  }

  inline DeconstructTupleRequest& operator=(DeconstructTupleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeconstructTupleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeconstructTupleRequest* internal_default_instance() {
    return reinterpret_cast<const DeconstructTupleRequest*>(
               &_DeconstructTupleRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(DeconstructTupleRequest* other);
  friend void swap(DeconstructTupleRequest& a, DeconstructTupleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeconstructTupleRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DeconstructTupleRequest>(NULL);
  }

  DeconstructTupleRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DeconstructTupleRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeconstructTupleRequest& from);
  void MergeFrom(const DeconstructTupleRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeconstructTupleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle tuple_handle = 2;
  bool has_tuple_handle() const;
  void clear_tuple_handle();
  static const int kTupleHandleFieldNumber = 2;
  const ::xla::GlobalDataHandle& tuple_handle() const;
  ::xla::GlobalDataHandle* release_tuple_handle();
  ::xla::GlobalDataHandle* mutable_tuple_handle();
  void set_allocated_tuple_handle(::xla::GlobalDataHandle* tuple_handle);

  // @@protoc_insertion_point(class_scope:xla.DeconstructTupleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* tuple_handle_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsDeconstructTupleRequestImpl();
};
// -------------------------------------------------------------------

class DeconstructTupleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.DeconstructTupleResponse) */ {
 public:
  DeconstructTupleResponse();
  virtual ~DeconstructTupleResponse();

  DeconstructTupleResponse(const DeconstructTupleResponse& from);

  inline DeconstructTupleResponse& operator=(const DeconstructTupleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeconstructTupleResponse(DeconstructTupleResponse&& from) noexcept
    : DeconstructTupleResponse() {
    *this = ::std::move(from);
  }

  inline DeconstructTupleResponse& operator=(DeconstructTupleResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeconstructTupleResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeconstructTupleResponse* internal_default_instance() {
    return reinterpret_cast<const DeconstructTupleResponse*>(
               &_DeconstructTupleResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(DeconstructTupleResponse* other);
  friend void swap(DeconstructTupleResponse& a, DeconstructTupleResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeconstructTupleResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DeconstructTupleResponse>(NULL);
  }

  DeconstructTupleResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<DeconstructTupleResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeconstructTupleResponse& from);
  void MergeFrom(const DeconstructTupleResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeconstructTupleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle element_handles = 1;
  int element_handles_size() const;
  void clear_element_handles();
  static const int kElementHandlesFieldNumber = 1;
  ::xla::GlobalDataHandle* mutable_element_handles(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_element_handles();
  const ::xla::GlobalDataHandle& element_handles(int index) const;
  ::xla::GlobalDataHandle* add_element_handles();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      element_handles() const;

  // @@protoc_insertion_point(class_scope:xla.DeconstructTupleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > element_handles_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsDeconstructTupleResponseImpl();
};
// -------------------------------------------------------------------

class LoadDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.LoadDataRequest) */ {
 public:
  LoadDataRequest();
  virtual ~LoadDataRequest();

  LoadDataRequest(const LoadDataRequest& from);

  inline LoadDataRequest& operator=(const LoadDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadDataRequest(LoadDataRequest&& from) noexcept
    : LoadDataRequest() {
    *this = ::std::move(from);
  }

  inline LoadDataRequest& operator=(LoadDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDataRequest* internal_default_instance() {
    return reinterpret_cast<const LoadDataRequest*>(
               &_LoadDataRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(LoadDataRequest* other);
  friend void swap(LoadDataRequest& a, LoadDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadDataRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadDataRequest>(NULL);
  }

  LoadDataRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadDataRequest& from);
  void MergeFrom(const LoadDataRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string columnio_tablet_path = 1;
  void clear_columnio_tablet_path();
  static const int kColumnioTabletPathFieldNumber = 1;
  const ::std::string& columnio_tablet_path() const;
  void set_columnio_tablet_path(const ::std::string& value);
  #if LANG_CXX11
  void set_columnio_tablet_path(::std::string&& value);
  #endif
  void set_columnio_tablet_path(const char* value);
  void set_columnio_tablet_path(const char* value, size_t size);
  ::std::string* mutable_columnio_tablet_path();
  ::std::string* release_columnio_tablet_path();
  void set_allocated_columnio_tablet_path(::std::string* columnio_tablet_path);

  // string columnio_field = 2;
  void clear_columnio_field();
  static const int kColumnioFieldFieldNumber = 2;
  const ::std::string& columnio_field() const;
  void set_columnio_field(const ::std::string& value);
  #if LANG_CXX11
  void set_columnio_field(::std::string&& value);
  #endif
  void set_columnio_field(const char* value);
  void set_columnio_field(const char* value, size_t size);
  ::std::string* mutable_columnio_field();
  ::std::string* release_columnio_field();
  void set_allocated_columnio_field(::std::string* columnio_field);

  // .xla.Shape element_shape = 3;
  bool has_element_shape() const;
  void clear_element_shape();
  static const int kElementShapeFieldNumber = 3;
  const ::xla::Shape& element_shape() const;
  ::xla::Shape* release_element_shape();
  ::xla::Shape* mutable_element_shape();
  void set_allocated_element_shape(::xla::Shape* element_shape);

  // int64 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // int64 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::int64 limit() const;
  void set_limit(::google::protobuf::int64 value);

  // bool zip = 6;
  void clear_zip();
  static const int kZipFieldNumber = 6;
  bool zip() const;
  void set_zip(bool value);

  // @@protoc_insertion_point(class_scope:xla.LoadDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr columnio_tablet_path_;
  ::google::protobuf::internal::ArenaStringPtr columnio_field_;
  ::xla::Shape* element_shape_;
  ::google::protobuf::int64 offset_;
  ::google::protobuf::int64 limit_;
  bool zip_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsLoadDataRequestImpl();
};
// -------------------------------------------------------------------

class LoadDataResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.LoadDataResponse) */ {
 public:
  LoadDataResponse();
  virtual ~LoadDataResponse();

  LoadDataResponse(const LoadDataResponse& from);

  inline LoadDataResponse& operator=(const LoadDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadDataResponse(LoadDataResponse&& from) noexcept
    : LoadDataResponse() {
    *this = ::std::move(from);
  }

  inline LoadDataResponse& operator=(LoadDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDataResponse* internal_default_instance() {
    return reinterpret_cast<const LoadDataResponse*>(
               &_LoadDataResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(LoadDataResponse* other);
  friend void swap(LoadDataResponse& a, LoadDataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadDataResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadDataResponse>(NULL);
  }

  LoadDataResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoadDataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadDataResponse& from);
  void MergeFrom(const LoadDataResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // .xla.Shape data_shape = 2;
  bool has_data_shape() const;
  void clear_data_shape();
  static const int kDataShapeFieldNumber = 2;
  const ::xla::Shape& data_shape() const;
  ::xla::Shape* release_data_shape();
  ::xla::Shape* mutable_data_shape();
  void set_allocated_data_shape(::xla::Shape* data_shape);

  // int64 available_rows = 3;
  void clear_available_rows();
  static const int kAvailableRowsFieldNumber = 3;
  ::google::protobuf::int64 available_rows() const;
  void set_available_rows(::google::protobuf::int64 value);

  // int64 rows_loaded = 4;
  void clear_rows_loaded();
  static const int kRowsLoadedFieldNumber = 4;
  ::google::protobuf::int64 rows_loaded() const;
  void set_rows_loaded(::google::protobuf::int64 value);

  // int64 nanoseconds = 5;
  void clear_nanoseconds();
  static const int kNanosecondsFieldNumber = 5;
  ::google::protobuf::int64 nanoseconds() const;
  void set_nanoseconds(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.LoadDataResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  ::xla::Shape* data_shape_;
  ::google::protobuf::int64 available_rows_;
  ::google::protobuf::int64 rows_loaded_;
  ::google::protobuf::int64 nanoseconds_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsLoadDataResponseImpl();
};
// -------------------------------------------------------------------

class SpecializeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SpecializeRequest) */ {
 public:
  SpecializeRequest();
  virtual ~SpecializeRequest();

  SpecializeRequest(const SpecializeRequest& from);

  inline SpecializeRequest& operator=(const SpecializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecializeRequest(SpecializeRequest&& from) noexcept
    : SpecializeRequest() {
    *this = ::std::move(from);
  }

  inline SpecializeRequest& operator=(SpecializeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecializeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecializeRequest* internal_default_instance() {
    return reinterpret_cast<const SpecializeRequest*>(
               &_SpecializeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SpecializeRequest* other);
  friend void swap(SpecializeRequest& a, SpecializeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecializeRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SpecializeRequest>(NULL);
  }

  SpecializeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SpecializeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpecializeRequest& from);
  void MergeFrom(const SpecializeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpecializeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::xla::GlobalDataHandle* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_arguments();
  const ::xla::GlobalDataHandle& arguments(int index) const;
  ::xla::GlobalDataHandle* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      arguments() const;

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // @@protoc_insertion_point(class_scope:xla.SpecializeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > arguments_;
  ::xla::ComputationHandle* computation_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSpecializeRequestImpl();
};
// -------------------------------------------------------------------

class SpecializeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SpecializeResponse) */ {
 public:
  SpecializeResponse();
  virtual ~SpecializeResponse();

  SpecializeResponse(const SpecializeResponse& from);

  inline SpecializeResponse& operator=(const SpecializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SpecializeResponse(SpecializeResponse&& from) noexcept
    : SpecializeResponse() {
    *this = ::std::move(from);
  }

  inline SpecializeResponse& operator=(SpecializeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpecializeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpecializeResponse* internal_default_instance() {
    return reinterpret_cast<const SpecializeResponse*>(
               &_SpecializeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SpecializeResponse* other);
  friend void swap(SpecializeResponse& a, SpecializeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SpecializeResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SpecializeResponse>(NULL);
  }

  SpecializeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SpecializeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpecializeResponse& from);
  void MergeFrom(const SpecializeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpecializeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xla.SpecializeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsSpecializeResponseImpl();
};
// -------------------------------------------------------------------

class GetShapeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetShapeRequest) */ {
 public:
  GetShapeRequest();
  virtual ~GetShapeRequest();

  GetShapeRequest(const GetShapeRequest& from);

  inline GetShapeRequest& operator=(const GetShapeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetShapeRequest(GetShapeRequest&& from) noexcept
    : GetShapeRequest() {
    *this = ::std::move(from);
  }

  inline GetShapeRequest& operator=(GetShapeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShapeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetShapeRequest* internal_default_instance() {
    return reinterpret_cast<const GetShapeRequest*>(
               &_GetShapeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(GetShapeRequest* other);
  friend void swap(GetShapeRequest& a, GetShapeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetShapeRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetShapeRequest>(NULL);
  }

  GetShapeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetShapeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetShapeRequest& from);
  void MergeFrom(const GetShapeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetShapeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // @@protoc_insertion_point(class_scope:xla.GetShapeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetShapeRequestImpl();
};
// -------------------------------------------------------------------

class GetShapeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetShapeResponse) */ {
 public:
  GetShapeResponse();
  virtual ~GetShapeResponse();

  GetShapeResponse(const GetShapeResponse& from);

  inline GetShapeResponse& operator=(const GetShapeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetShapeResponse(GetShapeResponse&& from) noexcept
    : GetShapeResponse() {
    *this = ::std::move(from);
  }

  inline GetShapeResponse& operator=(GetShapeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShapeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetShapeResponse* internal_default_instance() {
    return reinterpret_cast<const GetShapeResponse*>(
               &_GetShapeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(GetShapeResponse* other);
  friend void swap(GetShapeResponse& a, GetShapeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetShapeResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetShapeResponse>(NULL);
  }

  GetShapeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetShapeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetShapeResponse& from);
  void MergeFrom(const GetShapeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetShapeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.Shape shape = 1;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 1;
  const ::xla::Shape& shape() const;
  ::xla::Shape* release_shape();
  ::xla::Shape* mutable_shape();
  void set_allocated_shape(::xla::Shape* shape);

  // @@protoc_insertion_point(class_scope:xla.GetShapeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::Shape* shape_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetShapeResponseImpl();
};
// -------------------------------------------------------------------

class GetComputationShapeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetComputationShapeRequest) */ {
 public:
  GetComputationShapeRequest();
  virtual ~GetComputationShapeRequest();

  GetComputationShapeRequest(const GetComputationShapeRequest& from);

  inline GetComputationShapeRequest& operator=(const GetComputationShapeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetComputationShapeRequest(GetComputationShapeRequest&& from) noexcept
    : GetComputationShapeRequest() {
    *this = ::std::move(from);
  }

  inline GetComputationShapeRequest& operator=(GetComputationShapeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetComputationShapeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetComputationShapeRequest* internal_default_instance() {
    return reinterpret_cast<const GetComputationShapeRequest*>(
               &_GetComputationShapeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(GetComputationShapeRequest* other);
  friend void swap(GetComputationShapeRequest& a, GetComputationShapeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetComputationShapeRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetComputationShapeRequest>(NULL);
  }

  GetComputationShapeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetComputationShapeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetComputationShapeRequest& from);
  void MergeFrom(const GetComputationShapeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetComputationShapeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ComputationHandle computation = 1;
  bool has_computation() const;
  void clear_computation();
  static const int kComputationFieldNumber = 1;
  const ::xla::ComputationHandle& computation() const;
  ::xla::ComputationHandle* release_computation();
  ::xla::ComputationHandle* mutable_computation();
  void set_allocated_computation(::xla::ComputationHandle* computation);

  // @@protoc_insertion_point(class_scope:xla.GetComputationShapeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ComputationHandle* computation_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetComputationShapeRequestImpl();
};
// -------------------------------------------------------------------

class GetComputationShapeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.GetComputationShapeResponse) */ {
 public:
  GetComputationShapeResponse();
  virtual ~GetComputationShapeResponse();

  GetComputationShapeResponse(const GetComputationShapeResponse& from);

  inline GetComputationShapeResponse& operator=(const GetComputationShapeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetComputationShapeResponse(GetComputationShapeResponse&& from) noexcept
    : GetComputationShapeResponse() {
    *this = ::std::move(from);
  }

  inline GetComputationShapeResponse& operator=(GetComputationShapeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetComputationShapeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetComputationShapeResponse* internal_default_instance() {
    return reinterpret_cast<const GetComputationShapeResponse*>(
               &_GetComputationShapeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(GetComputationShapeResponse* other);
  friend void swap(GetComputationShapeResponse& a, GetComputationShapeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetComputationShapeResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetComputationShapeResponse>(NULL);
  }

  GetComputationShapeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetComputationShapeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetComputationShapeResponse& from);
  void MergeFrom(const GetComputationShapeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetComputationShapeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.ProgramShape program_shape = 1;
  bool has_program_shape() const;
  void clear_program_shape();
  static const int kProgramShapeFieldNumber = 1;
  const ::xla::ProgramShape& program_shape() const;
  ::xla::ProgramShape* release_program_shape();
  ::xla::ProgramShape* mutable_program_shape();
  void set_allocated_program_shape(::xla::ProgramShape* program_shape);

  // @@protoc_insertion_point(class_scope:xla.GetComputationShapeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::ProgramShape* program_shape_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsGetComputationShapeResponseImpl();
};
// -------------------------------------------------------------------

class UnpackRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.UnpackRequest) */ {
 public:
  UnpackRequest();
  virtual ~UnpackRequest();

  UnpackRequest(const UnpackRequest& from);

  inline UnpackRequest& operator=(const UnpackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnpackRequest(UnpackRequest&& from) noexcept
    : UnpackRequest() {
    *this = ::std::move(from);
  }

  inline UnpackRequest& operator=(UnpackRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnpackRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnpackRequest* internal_default_instance() {
    return reinterpret_cast<const UnpackRequest*>(
               &_UnpackRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(UnpackRequest* other);
  friend void swap(UnpackRequest& a, UnpackRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnpackRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnpackRequest>(NULL);
  }

  UnpackRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnpackRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnpackRequest& from);
  void MergeFrom(const UnpackRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnpackRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .xla.GlobalDataHandle data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::xla::GlobalDataHandle& data() const;
  ::xla::GlobalDataHandle* release_data();
  ::xla::GlobalDataHandle* mutable_data();
  void set_allocated_data(::xla::GlobalDataHandle* data);

  // @@protoc_insertion_point(class_scope:xla.UnpackRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::xla::GlobalDataHandle* data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsUnpackRequestImpl();
};
// -------------------------------------------------------------------

class UnpackResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.UnpackResponse) */ {
 public:
  UnpackResponse();
  virtual ~UnpackResponse();

  UnpackResponse(const UnpackResponse& from);

  inline UnpackResponse& operator=(const UnpackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnpackResponse(UnpackResponse&& from) noexcept
    : UnpackResponse() {
    *this = ::std::move(from);
  }

  inline UnpackResponse& operator=(UnpackResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnpackResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnpackResponse* internal_default_instance() {
    return reinterpret_cast<const UnpackResponse*>(
               &_UnpackResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(UnpackResponse* other);
  friend void swap(UnpackResponse& a, UnpackResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnpackResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnpackResponse>(NULL);
  }

  UnpackResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UnpackResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnpackResponse& from);
  void MergeFrom(const UnpackResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnpackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.GlobalDataHandle tied_data = 1;
  int tied_data_size() const;
  void clear_tied_data();
  static const int kTiedDataFieldNumber = 1;
  ::xla::GlobalDataHandle* mutable_tied_data(int index);
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
      mutable_tied_data();
  const ::xla::GlobalDataHandle& tied_data(int index) const;
  ::xla::GlobalDataHandle* add_tied_data();
  const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
      tied_data() const;

  // @@protoc_insertion_point(class_scope:xla.UnpackResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle > tied_data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::TableStruct;
  friend void ::protobuf_tensorflow_2fcompiler_2fxla_2fxla_2eproto::InitDefaultsUnpackResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HloReducePrecisionOptions

// .xla.HloReducePrecisionOptions.Location location = 1;
inline void HloReducePrecisionOptions::clear_location() {
  location_ = 0;
}
inline ::xla::HloReducePrecisionOptions_Location HloReducePrecisionOptions::location() const {
  // @@protoc_insertion_point(field_get:xla.HloReducePrecisionOptions.location)
  return static_cast< ::xla::HloReducePrecisionOptions_Location >(location_);
}
inline void HloReducePrecisionOptions::set_location(::xla::HloReducePrecisionOptions_Location value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.location)
}

// uint32 exponent_bits = 2;
inline void HloReducePrecisionOptions::clear_exponent_bits() {
  exponent_bits_ = 0u;
}
inline ::google::protobuf::uint32 HloReducePrecisionOptions::exponent_bits() const {
  // @@protoc_insertion_point(field_get:xla.HloReducePrecisionOptions.exponent_bits)
  return exponent_bits_;
}
inline void HloReducePrecisionOptions::set_exponent_bits(::google::protobuf::uint32 value) {
  
  exponent_bits_ = value;
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.exponent_bits)
}

// uint32 mantissa_bits = 3;
inline void HloReducePrecisionOptions::clear_mantissa_bits() {
  mantissa_bits_ = 0u;
}
inline ::google::protobuf::uint32 HloReducePrecisionOptions::mantissa_bits() const {
  // @@protoc_insertion_point(field_get:xla.HloReducePrecisionOptions.mantissa_bits)
  return mantissa_bits_;
}
inline void HloReducePrecisionOptions::set_mantissa_bits(::google::protobuf::uint32 value) {
  
  mantissa_bits_ = value;
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.mantissa_bits)
}

// repeated uint32 opcodes_to_suffix = 4;
inline int HloReducePrecisionOptions::opcodes_to_suffix_size() const {
  return opcodes_to_suffix_.size();
}
inline void HloReducePrecisionOptions::clear_opcodes_to_suffix() {
  opcodes_to_suffix_.Clear();
}
inline ::google::protobuf::uint32 HloReducePrecisionOptions::opcodes_to_suffix(int index) const {
  // @@protoc_insertion_point(field_get:xla.HloReducePrecisionOptions.opcodes_to_suffix)
  return opcodes_to_suffix_.Get(index);
}
inline void HloReducePrecisionOptions::set_opcodes_to_suffix(int index, ::google::protobuf::uint32 value) {
  opcodes_to_suffix_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.opcodes_to_suffix)
}
inline void HloReducePrecisionOptions::add_opcodes_to_suffix(::google::protobuf::uint32 value) {
  opcodes_to_suffix_.Add(value);
  // @@protoc_insertion_point(field_add:xla.HloReducePrecisionOptions.opcodes_to_suffix)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HloReducePrecisionOptions::opcodes_to_suffix() const {
  // @@protoc_insertion_point(field_list:xla.HloReducePrecisionOptions.opcodes_to_suffix)
  return opcodes_to_suffix_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HloReducePrecisionOptions::mutable_opcodes_to_suffix() {
  // @@protoc_insertion_point(field_mutable_list:xla.HloReducePrecisionOptions.opcodes_to_suffix)
  return &opcodes_to_suffix_;
}

// repeated string opname_substrings_to_suffix = 5;
inline int HloReducePrecisionOptions::opname_substrings_to_suffix_size() const {
  return opname_substrings_to_suffix_.size();
}
inline void HloReducePrecisionOptions::clear_opname_substrings_to_suffix() {
  opname_substrings_to_suffix_.Clear();
}
inline const ::std::string& HloReducePrecisionOptions::opname_substrings_to_suffix(int index) const {
  // @@protoc_insertion_point(field_get:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  return opname_substrings_to_suffix_.Get(index);
}
inline ::std::string* HloReducePrecisionOptions::mutable_opname_substrings_to_suffix(int index) {
  // @@protoc_insertion_point(field_mutable:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  return opname_substrings_to_suffix_.Mutable(index);
}
inline void HloReducePrecisionOptions::set_opname_substrings_to_suffix(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  opname_substrings_to_suffix_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void HloReducePrecisionOptions::set_opname_substrings_to_suffix(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  opname_substrings_to_suffix_.Mutable(index)->assign(std::move(value));
}
#endif
inline void HloReducePrecisionOptions::set_opname_substrings_to_suffix(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  opname_substrings_to_suffix_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
inline void HloReducePrecisionOptions::set_opname_substrings_to_suffix(int index, const char* value, size_t size) {
  opname_substrings_to_suffix_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
inline ::std::string* HloReducePrecisionOptions::add_opname_substrings_to_suffix() {
  // @@protoc_insertion_point(field_add_mutable:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  return opname_substrings_to_suffix_.Add();
}
inline void HloReducePrecisionOptions::add_opname_substrings_to_suffix(const ::std::string& value) {
  opname_substrings_to_suffix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
#if LANG_CXX11
inline void HloReducePrecisionOptions::add_opname_substrings_to_suffix(::std::string&& value) {
  opname_substrings_to_suffix_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
#endif
inline void HloReducePrecisionOptions::add_opname_substrings_to_suffix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  opname_substrings_to_suffix_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
inline void HloReducePrecisionOptions::add_opname_substrings_to_suffix(const char* value, size_t size) {
  opname_substrings_to_suffix_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HloReducePrecisionOptions::opname_substrings_to_suffix() const {
  // @@protoc_insertion_point(field_list:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  return opname_substrings_to_suffix_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HloReducePrecisionOptions::mutable_opname_substrings_to_suffix() {
  // @@protoc_insertion_point(field_mutable_list:xla.HloReducePrecisionOptions.opname_substrings_to_suffix)
  return &opname_substrings_to_suffix_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DebugOptions

// string xla_generate_hlo_graph = 1;
inline void DebugOptions::clear_xla_generate_hlo_graph() {
  xla_generate_hlo_graph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_generate_hlo_graph() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_generate_hlo_graph)
  return xla_generate_hlo_graph_.GetNoArena();
}
inline void DebugOptions::set_xla_generate_hlo_graph(const ::std::string& value) {
  
  xla_generate_hlo_graph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_generate_hlo_graph)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_generate_hlo_graph(::std::string&& value) {
  
  xla_generate_hlo_graph_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_generate_hlo_graph)
}
#endif
inline void DebugOptions::set_xla_generate_hlo_graph(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_generate_hlo_graph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_generate_hlo_graph)
}
inline void DebugOptions::set_xla_generate_hlo_graph(const char* value, size_t size) {
  
  xla_generate_hlo_graph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_generate_hlo_graph)
}
inline ::std::string* DebugOptions::mutable_xla_generate_hlo_graph() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_generate_hlo_graph)
  return xla_generate_hlo_graph_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_generate_hlo_graph() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_generate_hlo_graph)
  
  return xla_generate_hlo_graph_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_generate_hlo_graph(::std::string* xla_generate_hlo_graph) {
  if (xla_generate_hlo_graph != NULL) {
    
  } else {
    
  }
  xla_generate_hlo_graph_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_generate_hlo_graph);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_generate_hlo_graph)
}

// bool xla_hlo_graph_addresses = 2;
inline void DebugOptions::clear_xla_hlo_graph_addresses() {
  xla_hlo_graph_addresses_ = false;
}
inline bool DebugOptions::xla_hlo_graph_addresses() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_graph_addresses)
  return xla_hlo_graph_addresses_;
}
inline void DebugOptions::set_xla_hlo_graph_addresses(bool value) {
  
  xla_hlo_graph_addresses_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_graph_addresses)
}

// string xla_hlo_graph_path = 4;
inline void DebugOptions::clear_xla_hlo_graph_path() {
  xla_hlo_graph_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_hlo_graph_path() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_graph_path)
  return xla_hlo_graph_path_.GetNoArena();
}
inline void DebugOptions::set_xla_hlo_graph_path(const ::std::string& value) {
  
  xla_hlo_graph_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_graph_path)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_hlo_graph_path(::std::string&& value) {
  
  xla_hlo_graph_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_hlo_graph_path)
}
#endif
inline void DebugOptions::set_xla_hlo_graph_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_hlo_graph_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_hlo_graph_path)
}
inline void DebugOptions::set_xla_hlo_graph_path(const char* value, size_t size) {
  
  xla_hlo_graph_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_hlo_graph_path)
}
inline ::std::string* DebugOptions::mutable_xla_hlo_graph_path() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_hlo_graph_path)
  return xla_hlo_graph_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_hlo_graph_path() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_hlo_graph_path)
  
  return xla_hlo_graph_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_hlo_graph_path(::std::string* xla_hlo_graph_path) {
  if (xla_hlo_graph_path != NULL) {
    
  } else {
    
  }
  xla_hlo_graph_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_hlo_graph_path);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_hlo_graph_path)
}

// bool xla_hlo_dump_as_graphdef = 5;
inline void DebugOptions::clear_xla_hlo_dump_as_graphdef() {
  xla_hlo_dump_as_graphdef_ = false;
}
inline bool DebugOptions::xla_hlo_dump_as_graphdef() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_dump_as_graphdef)
  return xla_hlo_dump_as_graphdef_;
}
inline void DebugOptions::set_xla_hlo_dump_as_graphdef(bool value) {
  
  xla_hlo_dump_as_graphdef_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_dump_as_graphdef)
}

// string xla_log_hlo_text = 6;
inline void DebugOptions::clear_xla_log_hlo_text() {
  xla_log_hlo_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_log_hlo_text() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_log_hlo_text)
  return xla_log_hlo_text_.GetNoArena();
}
inline void DebugOptions::set_xla_log_hlo_text(const ::std::string& value) {
  
  xla_log_hlo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_log_hlo_text)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_log_hlo_text(::std::string&& value) {
  
  xla_log_hlo_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_log_hlo_text)
}
#endif
inline void DebugOptions::set_xla_log_hlo_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_log_hlo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_log_hlo_text)
}
inline void DebugOptions::set_xla_log_hlo_text(const char* value, size_t size) {
  
  xla_log_hlo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_log_hlo_text)
}
inline ::std::string* DebugOptions::mutable_xla_log_hlo_text() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_log_hlo_text)
  return xla_log_hlo_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_log_hlo_text() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_log_hlo_text)
  
  return xla_log_hlo_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_log_hlo_text(::std::string* xla_log_hlo_text) {
  if (xla_log_hlo_text != NULL) {
    
  } else {
    
  }
  xla_log_hlo_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_log_hlo_text);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_log_hlo_text)
}

// string xla_generate_hlo_text_to = 7;
inline void DebugOptions::clear_xla_generate_hlo_text_to() {
  xla_generate_hlo_text_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_generate_hlo_text_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_generate_hlo_text_to)
  return xla_generate_hlo_text_to_.GetNoArena();
}
inline void DebugOptions::set_xla_generate_hlo_text_to(const ::std::string& value) {
  
  xla_generate_hlo_text_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_generate_hlo_text_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_generate_hlo_text_to(::std::string&& value) {
  
  xla_generate_hlo_text_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_generate_hlo_text_to)
}
#endif
inline void DebugOptions::set_xla_generate_hlo_text_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_generate_hlo_text_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_generate_hlo_text_to)
}
inline void DebugOptions::set_xla_generate_hlo_text_to(const char* value, size_t size) {
  
  xla_generate_hlo_text_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_generate_hlo_text_to)
}
inline ::std::string* DebugOptions::mutable_xla_generate_hlo_text_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_generate_hlo_text_to)
  return xla_generate_hlo_text_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_generate_hlo_text_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_generate_hlo_text_to)
  
  return xla_generate_hlo_text_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_generate_hlo_text_to(::std::string* xla_generate_hlo_text_to) {
  if (xla_generate_hlo_text_to != NULL) {
    
  } else {
    
  }
  xla_generate_hlo_text_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_generate_hlo_text_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_generate_hlo_text_to)
}

// string xla_dump_optimized_hlo_proto_to = 8;
inline void DebugOptions::clear_xla_dump_optimized_hlo_proto_to() {
  xla_dump_optimized_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_optimized_hlo_proto_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
  return xla_dump_optimized_hlo_proto_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_optimized_hlo_proto_to(const ::std::string& value) {
  
  xla_dump_optimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_optimized_hlo_proto_to(::std::string&& value) {
  
  xla_dump_optimized_hlo_proto_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
}
#endif
inline void DebugOptions::set_xla_dump_optimized_hlo_proto_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_optimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
}
inline void DebugOptions::set_xla_dump_optimized_hlo_proto_to(const char* value, size_t size) {
  
  xla_dump_optimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_optimized_hlo_proto_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
  return xla_dump_optimized_hlo_proto_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_optimized_hlo_proto_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
  
  return xla_dump_optimized_hlo_proto_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_optimized_hlo_proto_to(::std::string* xla_dump_optimized_hlo_proto_to) {
  if (xla_dump_optimized_hlo_proto_to != NULL) {
    
  } else {
    
  }
  xla_dump_optimized_hlo_proto_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_optimized_hlo_proto_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_optimized_hlo_proto_to)
}

// bool xla_hlo_profile = 9;
inline void DebugOptions::clear_xla_hlo_profile() {
  xla_hlo_profile_ = false;
}
inline bool DebugOptions::xla_hlo_profile() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_profile)
  return xla_hlo_profile_;
}
inline void DebugOptions::set_xla_hlo_profile(bool value) {
  
  xla_hlo_profile_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_profile)
}

// string xla_dump_computations_to = 10;
inline void DebugOptions::clear_xla_dump_computations_to() {
  xla_dump_computations_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_computations_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_computations_to)
  return xla_dump_computations_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_computations_to(const ::std::string& value) {
  
  xla_dump_computations_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_computations_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_computations_to(::std::string&& value) {
  
  xla_dump_computations_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_computations_to)
}
#endif
inline void DebugOptions::set_xla_dump_computations_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_computations_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_computations_to)
}
inline void DebugOptions::set_xla_dump_computations_to(const char* value, size_t size) {
  
  xla_dump_computations_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_computations_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_computations_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_computations_to)
  return xla_dump_computations_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_computations_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_computations_to)
  
  return xla_dump_computations_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_computations_to(::std::string* xla_dump_computations_to) {
  if (xla_dump_computations_to != NULL) {
    
  } else {
    
  }
  xla_dump_computations_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_computations_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_computations_to)
}

// string xla_dump_executions_to = 11;
inline void DebugOptions::clear_xla_dump_executions_to() {
  xla_dump_executions_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_executions_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_executions_to)
  return xla_dump_executions_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_executions_to(const ::std::string& value) {
  
  xla_dump_executions_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_executions_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_executions_to(::std::string&& value) {
  
  xla_dump_executions_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_executions_to)
}
#endif
inline void DebugOptions::set_xla_dump_executions_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_executions_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_executions_to)
}
inline void DebugOptions::set_xla_dump_executions_to(const char* value, size_t size) {
  
  xla_dump_executions_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_executions_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_executions_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_executions_to)
  return xla_dump_executions_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_executions_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_executions_to)
  
  return xla_dump_executions_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_executions_to(::std::string* xla_dump_executions_to) {
  if (xla_dump_executions_to != NULL) {
    
  } else {
    
  }
  xla_dump_executions_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_executions_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_executions_to)
}

// repeated string xla_disable_hlo_passes = 30;
inline int DebugOptions::xla_disable_hlo_passes_size() const {
  return xla_disable_hlo_passes_.size();
}
inline void DebugOptions::clear_xla_disable_hlo_passes() {
  xla_disable_hlo_passes_.Clear();
}
inline const ::std::string& DebugOptions::xla_disable_hlo_passes(int index) const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_disable_hlo_passes)
  return xla_disable_hlo_passes_.Get(index);
}
inline ::std::string* DebugOptions::mutable_xla_disable_hlo_passes(int index) {
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_disable_hlo_passes)
  return xla_disable_hlo_passes_.Mutable(index);
}
inline void DebugOptions::set_xla_disable_hlo_passes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_disable_hlo_passes)
  xla_disable_hlo_passes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DebugOptions::set_xla_disable_hlo_passes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_disable_hlo_passes)
  xla_disable_hlo_passes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DebugOptions::set_xla_disable_hlo_passes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  xla_disable_hlo_passes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_disable_hlo_passes)
}
inline void DebugOptions::set_xla_disable_hlo_passes(int index, const char* value, size_t size) {
  xla_disable_hlo_passes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_disable_hlo_passes)
}
inline ::std::string* DebugOptions::add_xla_disable_hlo_passes() {
  // @@protoc_insertion_point(field_add_mutable:xla.DebugOptions.xla_disable_hlo_passes)
  return xla_disable_hlo_passes_.Add();
}
inline void DebugOptions::add_xla_disable_hlo_passes(const ::std::string& value) {
  xla_disable_hlo_passes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xla.DebugOptions.xla_disable_hlo_passes)
}
#if LANG_CXX11
inline void DebugOptions::add_xla_disable_hlo_passes(::std::string&& value) {
  xla_disable_hlo_passes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xla.DebugOptions.xla_disable_hlo_passes)
}
#endif
inline void DebugOptions::add_xla_disable_hlo_passes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  xla_disable_hlo_passes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xla.DebugOptions.xla_disable_hlo_passes)
}
inline void DebugOptions::add_xla_disable_hlo_passes(const char* value, size_t size) {
  xla_disable_hlo_passes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xla.DebugOptions.xla_disable_hlo_passes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DebugOptions::xla_disable_hlo_passes() const {
  // @@protoc_insertion_point(field_list:xla.DebugOptions.xla_disable_hlo_passes)
  return xla_disable_hlo_passes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DebugOptions::mutable_xla_disable_hlo_passes() {
  // @@protoc_insertion_point(field_mutable_list:xla.DebugOptions.xla_disable_hlo_passes)
  return &xla_disable_hlo_passes_;
}

// int32 xla_backend_optimization_level = 31;
inline void DebugOptions::clear_xla_backend_optimization_level() {
  xla_backend_optimization_level_ = 0;
}
inline ::google::protobuf::int32 DebugOptions::xla_backend_optimization_level() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_backend_optimization_level)
  return xla_backend_optimization_level_;
}
inline void DebugOptions::set_xla_backend_optimization_level(::google::protobuf::int32 value) {
  
  xla_backend_optimization_level_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_backend_optimization_level)
}

// bool xla_enable_fast_math = 32;
inline void DebugOptions::clear_xla_enable_fast_math() {
  xla_enable_fast_math_ = false;
}
inline bool DebugOptions::xla_enable_fast_math() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_enable_fast_math)
  return xla_enable_fast_math_;
}
inline void DebugOptions::set_xla_enable_fast_math(bool value) {
  
  xla_enable_fast_math_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_enable_fast_math)
}

// bool xla_embed_ir_in_executable = 33;
inline void DebugOptions::clear_xla_embed_ir_in_executable() {
  xla_embed_ir_in_executable_ = false;
}
inline bool DebugOptions::xla_embed_ir_in_executable() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_embed_ir_in_executable)
  return xla_embed_ir_in_executable_;
}
inline void DebugOptions::set_xla_embed_ir_in_executable(bool value) {
  
  xla_embed_ir_in_executable_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_embed_ir_in_executable)
}

// string xla_dump_ir_to = 34;
inline void DebugOptions::clear_xla_dump_ir_to() {
  xla_dump_ir_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_ir_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_ir_to)
  return xla_dump_ir_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_ir_to(const ::std::string& value) {
  
  xla_dump_ir_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_ir_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_ir_to(::std::string&& value) {
  
  xla_dump_ir_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_ir_to)
}
#endif
inline void DebugOptions::set_xla_dump_ir_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_ir_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_ir_to)
}
inline void DebugOptions::set_xla_dump_ir_to(const char* value, size_t size) {
  
  xla_dump_ir_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_ir_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_ir_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_ir_to)
  return xla_dump_ir_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_ir_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_ir_to)
  
  return xla_dump_ir_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_ir_to(::std::string* xla_dump_ir_to) {
  if (xla_dump_ir_to != NULL) {
    
  } else {
    
  }
  xla_dump_ir_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_ir_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_ir_to)
}

// bool xla_eliminate_hlo_implicit_broadcast = 35;
inline void DebugOptions::clear_xla_eliminate_hlo_implicit_broadcast() {
  xla_eliminate_hlo_implicit_broadcast_ = false;
}
inline bool DebugOptions::xla_eliminate_hlo_implicit_broadcast() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_eliminate_hlo_implicit_broadcast)
  return xla_eliminate_hlo_implicit_broadcast_;
}
inline void DebugOptions::set_xla_eliminate_hlo_implicit_broadcast(bool value) {
  
  xla_eliminate_hlo_implicit_broadcast_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_eliminate_hlo_implicit_broadcast)
}

// bool xla_cpu_multi_thread_eigen = 60;
inline void DebugOptions::clear_xla_cpu_multi_thread_eigen() {
  xla_cpu_multi_thread_eigen_ = false;
}
inline bool DebugOptions::xla_cpu_multi_thread_eigen() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_cpu_multi_thread_eigen)
  return xla_cpu_multi_thread_eigen_;
}
inline void DebugOptions::set_xla_cpu_multi_thread_eigen(bool value) {
  
  xla_cpu_multi_thread_eigen_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_cpu_multi_thread_eigen)
}

// string xla_gpu_cuda_data_dir = 61;
inline void DebugOptions::clear_xla_gpu_cuda_data_dir() {
  xla_gpu_cuda_data_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_gpu_cuda_data_dir() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_gpu_cuda_data_dir)
  return xla_gpu_cuda_data_dir_.GetNoArena();
}
inline void DebugOptions::set_xla_gpu_cuda_data_dir(const ::std::string& value) {
  
  xla_gpu_cuda_data_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_gpu_cuda_data_dir)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_gpu_cuda_data_dir(::std::string&& value) {
  
  xla_gpu_cuda_data_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_gpu_cuda_data_dir)
}
#endif
inline void DebugOptions::set_xla_gpu_cuda_data_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_gpu_cuda_data_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_gpu_cuda_data_dir)
}
inline void DebugOptions::set_xla_gpu_cuda_data_dir(const char* value, size_t size) {
  
  xla_gpu_cuda_data_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_gpu_cuda_data_dir)
}
inline ::std::string* DebugOptions::mutable_xla_gpu_cuda_data_dir() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_gpu_cuda_data_dir)
  return xla_gpu_cuda_data_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_gpu_cuda_data_dir() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_gpu_cuda_data_dir)
  
  return xla_gpu_cuda_data_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_gpu_cuda_data_dir(::std::string* xla_gpu_cuda_data_dir) {
  if (xla_gpu_cuda_data_dir != NULL) {
    
  } else {
    
  }
  xla_gpu_cuda_data_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_gpu_cuda_data_dir);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_gpu_cuda_data_dir)
}

// bool xla_gpu_ftz = 62;
inline void DebugOptions::clear_xla_gpu_ftz() {
  xla_gpu_ftz_ = false;
}
inline bool DebugOptions::xla_gpu_ftz() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_gpu_ftz)
  return xla_gpu_ftz_;
}
inline void DebugOptions::set_xla_gpu_ftz(bool value) {
  
  xla_gpu_ftz_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_gpu_ftz)
}

// bool xla_gpu_disable_multi_streaming = 63;
inline void DebugOptions::clear_xla_gpu_disable_multi_streaming() {
  xla_gpu_disable_multi_streaming_ = false;
}
inline bool DebugOptions::xla_gpu_disable_multi_streaming() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_gpu_disable_multi_streaming)
  return xla_gpu_disable_multi_streaming_;
}
inline void DebugOptions::set_xla_gpu_disable_multi_streaming(bool value) {
  
  xla_gpu_disable_multi_streaming_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_gpu_disable_multi_streaming)
}

// bool xla_llvm_enable_alias_scope_metadata = 70;
inline void DebugOptions::clear_xla_llvm_enable_alias_scope_metadata() {
  xla_llvm_enable_alias_scope_metadata_ = false;
}
inline bool DebugOptions::xla_llvm_enable_alias_scope_metadata() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_llvm_enable_alias_scope_metadata)
  return xla_llvm_enable_alias_scope_metadata_;
}
inline void DebugOptions::set_xla_llvm_enable_alias_scope_metadata(bool value) {
  
  xla_llvm_enable_alias_scope_metadata_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_llvm_enable_alias_scope_metadata)
}

// bool xla_llvm_enable_noalias_metadata = 71;
inline void DebugOptions::clear_xla_llvm_enable_noalias_metadata() {
  xla_llvm_enable_noalias_metadata_ = false;
}
inline bool DebugOptions::xla_llvm_enable_noalias_metadata() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_llvm_enable_noalias_metadata)
  return xla_llvm_enable_noalias_metadata_;
}
inline void DebugOptions::set_xla_llvm_enable_noalias_metadata(bool value) {
  
  xla_llvm_enable_noalias_metadata_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_llvm_enable_noalias_metadata)
}

// bool xla_llvm_enable_invariant_load_metadata = 72;
inline void DebugOptions::clear_xla_llvm_enable_invariant_load_metadata() {
  xla_llvm_enable_invariant_load_metadata_ = false;
}
inline bool DebugOptions::xla_llvm_enable_invariant_load_metadata() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_llvm_enable_invariant_load_metadata)
  return xla_llvm_enable_invariant_load_metadata_;
}
inline void DebugOptions::set_xla_llvm_enable_invariant_load_metadata(bool value) {
  
  xla_llvm_enable_invariant_load_metadata_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_llvm_enable_invariant_load_metadata)
}

// bool xla_llvm_disable_expensive_passes = 73;
inline void DebugOptions::clear_xla_llvm_disable_expensive_passes() {
  xla_llvm_disable_expensive_passes_ = false;
}
inline bool DebugOptions::xla_llvm_disable_expensive_passes() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_llvm_disable_expensive_passes)
  return xla_llvm_disable_expensive_passes_;
}
inline void DebugOptions::set_xla_llvm_disable_expensive_passes(bool value) {
  
  xla_llvm_disable_expensive_passes_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_llvm_disable_expensive_passes)
}

// repeated .xla.HloReducePrecisionOptions hlo_reduce_precision_options = 80;
inline int DebugOptions::hlo_reduce_precision_options_size() const {
  return hlo_reduce_precision_options_.size();
}
inline void DebugOptions::clear_hlo_reduce_precision_options() {
  hlo_reduce_precision_options_.Clear();
}
inline ::xla::HloReducePrecisionOptions* DebugOptions::mutable_hlo_reduce_precision_options(int index) {
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.hlo_reduce_precision_options)
  return hlo_reduce_precision_options_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::HloReducePrecisionOptions >*
DebugOptions::mutable_hlo_reduce_precision_options() {
  // @@protoc_insertion_point(field_mutable_list:xla.DebugOptions.hlo_reduce_precision_options)
  return &hlo_reduce_precision_options_;
}
inline const ::xla::HloReducePrecisionOptions& DebugOptions::hlo_reduce_precision_options(int index) const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.hlo_reduce_precision_options)
  return hlo_reduce_precision_options_.Get(index);
}
inline ::xla::HloReducePrecisionOptions* DebugOptions::add_hlo_reduce_precision_options() {
  // @@protoc_insertion_point(field_add:xla.DebugOptions.hlo_reduce_precision_options)
  return hlo_reduce_precision_options_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::HloReducePrecisionOptions >&
DebugOptions::hlo_reduce_precision_options() const {
  // @@protoc_insertion_point(field_list:xla.DebugOptions.hlo_reduce_precision_options)
  return hlo_reduce_precision_options_;
}

// bool xla_test_all_output_layouts = 90;
inline void DebugOptions::clear_xla_test_all_output_layouts() {
  xla_test_all_output_layouts_ = false;
}
inline bool DebugOptions::xla_test_all_output_layouts() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_test_all_output_layouts)
  return xla_test_all_output_layouts_;
}
inline void DebugOptions::set_xla_test_all_output_layouts(bool value) {
  
  xla_test_all_output_layouts_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_test_all_output_layouts)
}

// bool xla_test_all_input_layouts = 91;
inline void DebugOptions::clear_xla_test_all_input_layouts() {
  xla_test_all_input_layouts_ = false;
}
inline bool DebugOptions::xla_test_all_input_layouts() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_test_all_input_layouts)
  return xla_test_all_input_layouts_;
}
inline void DebugOptions::set_xla_test_all_input_layouts(bool value) {
  
  xla_test_all_input_layouts_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_test_all_input_layouts)
}

// bool xla_hlo_graph_sharding_color = 92;
inline void DebugOptions::clear_xla_hlo_graph_sharding_color() {
  xla_hlo_graph_sharding_color_ = false;
}
inline bool DebugOptions::xla_hlo_graph_sharding_color() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_graph_sharding_color)
  return xla_hlo_graph_sharding_color_;
}
inline void DebugOptions::set_xla_hlo_graph_sharding_color(bool value) {
  
  xla_hlo_graph_sharding_color_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_graph_sharding_color)
}

// bool xla_hlo_tfgraph_device_scopes = 93;
inline void DebugOptions::clear_xla_hlo_tfgraph_device_scopes() {
  xla_hlo_tfgraph_device_scopes_ = false;
}
inline bool DebugOptions::xla_hlo_tfgraph_device_scopes() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_hlo_tfgraph_device_scopes)
  return xla_hlo_tfgraph_device_scopes_;
}
inline void DebugOptions::set_xla_hlo_tfgraph_device_scopes(bool value) {
  
  xla_hlo_tfgraph_device_scopes_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_hlo_tfgraph_device_scopes)
}

// bool xla_gpu_use_cudnn_batchnorm = 94;
inline void DebugOptions::clear_xla_gpu_use_cudnn_batchnorm() {
  xla_gpu_use_cudnn_batchnorm_ = false;
}
inline bool DebugOptions::xla_gpu_use_cudnn_batchnorm() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_gpu_use_cudnn_batchnorm)
  return xla_gpu_use_cudnn_batchnorm_;
}
inline void DebugOptions::set_xla_gpu_use_cudnn_batchnorm(bool value) {
  
  xla_gpu_use_cudnn_batchnorm_ = value;
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_gpu_use_cudnn_batchnorm)
}

// string xla_dump_unoptimized_hlo_proto_to = 95;
inline void DebugOptions::clear_xla_dump_unoptimized_hlo_proto_to() {
  xla_dump_unoptimized_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_unoptimized_hlo_proto_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
  return xla_dump_unoptimized_hlo_proto_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_unoptimized_hlo_proto_to(const ::std::string& value) {
  
  xla_dump_unoptimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_unoptimized_hlo_proto_to(::std::string&& value) {
  
  xla_dump_unoptimized_hlo_proto_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
}
#endif
inline void DebugOptions::set_xla_dump_unoptimized_hlo_proto_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_unoptimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
}
inline void DebugOptions::set_xla_dump_unoptimized_hlo_proto_to(const char* value, size_t size) {
  
  xla_dump_unoptimized_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_unoptimized_hlo_proto_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
  return xla_dump_unoptimized_hlo_proto_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_unoptimized_hlo_proto_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
  
  return xla_dump_unoptimized_hlo_proto_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_unoptimized_hlo_proto_to(::std::string* xla_dump_unoptimized_hlo_proto_to) {
  if (xla_dump_unoptimized_hlo_proto_to != NULL) {
    
  } else {
    
  }
  xla_dump_unoptimized_hlo_proto_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_unoptimized_hlo_proto_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_unoptimized_hlo_proto_to)
}

// string xla_dump_per_pass_hlo_proto_to = 96;
inline void DebugOptions::clear_xla_dump_per_pass_hlo_proto_to() {
  xla_dump_per_pass_hlo_proto_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DebugOptions::xla_dump_per_pass_hlo_proto_to() const {
  // @@protoc_insertion_point(field_get:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
  return xla_dump_per_pass_hlo_proto_to_.GetNoArena();
}
inline void DebugOptions::set_xla_dump_per_pass_hlo_proto_to(const ::std::string& value) {
  
  xla_dump_per_pass_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
}
#if LANG_CXX11
inline void DebugOptions::set_xla_dump_per_pass_hlo_proto_to(::std::string&& value) {
  
  xla_dump_per_pass_hlo_proto_to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
}
#endif
inline void DebugOptions::set_xla_dump_per_pass_hlo_proto_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xla_dump_per_pass_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
}
inline void DebugOptions::set_xla_dump_per_pass_hlo_proto_to(const char* value, size_t size) {
  
  xla_dump_per_pass_hlo_proto_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
}
inline ::std::string* DebugOptions::mutable_xla_dump_per_pass_hlo_proto_to() {
  
  // @@protoc_insertion_point(field_mutable:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
  return xla_dump_per_pass_hlo_proto_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugOptions::release_xla_dump_per_pass_hlo_proto_to() {
  // @@protoc_insertion_point(field_release:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
  
  return xla_dump_per_pass_hlo_proto_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugOptions::set_allocated_xla_dump_per_pass_hlo_proto_to(::std::string* xla_dump_per_pass_hlo_proto_to) {
  if (xla_dump_per_pass_hlo_proto_to != NULL) {
    
  } else {
    
  }
  xla_dump_per_pass_hlo_proto_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xla_dump_per_pass_hlo_proto_to);
  // @@protoc_insertion_point(field_set_allocated:xla.DebugOptions.xla_dump_per_pass_hlo_proto_to)
}

// map<string, string> xla_backend_extra_options = 500;
inline int DebugOptions::xla_backend_extra_options_size() const {
  return xla_backend_extra_options_.size();
}
inline void DebugOptions::clear_xla_backend_extra_options() {
  xla_backend_extra_options_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
DebugOptions::xla_backend_extra_options() const {
  // @@protoc_insertion_point(field_map:xla.DebugOptions.xla_backend_extra_options)
  return xla_backend_extra_options_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
DebugOptions::mutable_xla_backend_extra_options() {
  // @@protoc_insertion_point(field_mutable_map:xla.DebugOptions.xla_backend_extra_options)
  return xla_backend_extra_options_.MutableMap();
}

// -------------------------------------------------------------------

// ExecutionOptions

// .xla.Shape shape_with_output_layout = 2;
inline bool ExecutionOptions::has_shape_with_output_layout() const {
  return this != internal_default_instance() && shape_with_output_layout_ != NULL;
}
inline const ::xla::Shape& ExecutionOptions::shape_with_output_layout() const {
  const ::xla::Shape* p = shape_with_output_layout_;
  // @@protoc_insertion_point(field_get:xla.ExecutionOptions.shape_with_output_layout)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* ExecutionOptions::release_shape_with_output_layout() {
  // @@protoc_insertion_point(field_release:xla.ExecutionOptions.shape_with_output_layout)
  
  ::xla::Shape* temp = shape_with_output_layout_;
  shape_with_output_layout_ = NULL;
  return temp;
}
inline ::xla::Shape* ExecutionOptions::mutable_shape_with_output_layout() {
  
  if (shape_with_output_layout_ == NULL) {
    shape_with_output_layout_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecutionOptions.shape_with_output_layout)
  return shape_with_output_layout_;
}
inline void ExecutionOptions::set_allocated_shape_with_output_layout(::xla::Shape* shape_with_output_layout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_output_layout_);
  }
  if (shape_with_output_layout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_output_layout)->GetArena();
    if (message_arena != submessage_arena) {
      shape_with_output_layout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape_with_output_layout, submessage_arena);
    }
    
  } else {
    
  }
  shape_with_output_layout_ = shape_with_output_layout;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecutionOptions.shape_with_output_layout)
}

// uint64 seed = 3;
inline void ExecutionOptions::clear_seed() {
  seed_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecutionOptions::seed() const {
  // @@protoc_insertion_point(field_get:xla.ExecutionOptions.seed)
  return seed_;
}
inline void ExecutionOptions::set_seed(::google::protobuf::uint64 value) {
  
  seed_ = value;
  // @@protoc_insertion_point(field_set:xla.ExecutionOptions.seed)
}

// .xla.DebugOptions debug_options = 4;
inline bool ExecutionOptions::has_debug_options() const {
  return this != internal_default_instance() && debug_options_ != NULL;
}
inline void ExecutionOptions::clear_debug_options() {
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
}
inline const ::xla::DebugOptions& ExecutionOptions::debug_options() const {
  const ::xla::DebugOptions* p = debug_options_;
  // @@protoc_insertion_point(field_get:xla.ExecutionOptions.debug_options)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DebugOptions*>(
      &::xla::_DebugOptions_default_instance_);
}
inline ::xla::DebugOptions* ExecutionOptions::release_debug_options() {
  // @@protoc_insertion_point(field_release:xla.ExecutionOptions.debug_options)
  
  ::xla::DebugOptions* temp = debug_options_;
  debug_options_ = NULL;
  return temp;
}
inline ::xla::DebugOptions* ExecutionOptions::mutable_debug_options() {
  
  if (debug_options_ == NULL) {
    debug_options_ = ::google::protobuf::Arena::Create< ::xla::DebugOptions >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecutionOptions.debug_options)
  return debug_options_;
}
inline void ExecutionOptions::set_allocated_debug_options(::xla::DebugOptions* debug_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete debug_options_;
  }
  if (debug_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      debug_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debug_options, submessage_arena);
    }
    
  } else {
    
  }
  debug_options_ = debug_options;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecutionOptions.debug_options)
}

// repeated .xla.DeviceHandle device_handles = 5;
inline int ExecutionOptions::device_handles_size() const {
  return device_handles_.size();
}
inline ::xla::DeviceHandle* ExecutionOptions::mutable_device_handles(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecutionOptions.device_handles)
  return device_handles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >*
ExecutionOptions::mutable_device_handles() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecutionOptions.device_handles)
  return &device_handles_;
}
inline const ::xla::DeviceHandle& ExecutionOptions::device_handles(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecutionOptions.device_handles)
  return device_handles_.Get(index);
}
inline ::xla::DeviceHandle* ExecutionOptions::add_device_handles() {
  // @@protoc_insertion_point(field_add:xla.ExecutionOptions.device_handles)
  return device_handles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >&
ExecutionOptions::device_handles() const {
  // @@protoc_insertion_point(field_list:xla.ExecutionOptions.device_handles)
  return device_handles_;
}

// -------------------------------------------------------------------

// SnapshotComputationRequest

// .xla.ComputationHandle computation = 1;
inline bool SnapshotComputationRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& SnapshotComputationRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.SnapshotComputationRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* SnapshotComputationRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.SnapshotComputationRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* SnapshotComputationRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.SnapshotComputationRequest.computation)
  return computation_;
}
inline void SnapshotComputationRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.SnapshotComputationRequest.computation)
}

// -------------------------------------------------------------------

// SnapshotComputationResponse

// .xla.SessionModule module = 1;
inline bool SnapshotComputationResponse::has_module() const {
  return this != internal_default_instance() && module_ != NULL;
}
inline const ::xla::SessionModule& SnapshotComputationResponse::module() const {
  const ::xla::SessionModule* p = module_;
  // @@protoc_insertion_point(field_get:xla.SnapshotComputationResponse.module)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::SessionModule*>(
      &::xla::_SessionModule_default_instance_);
}
inline ::xla::SessionModule* SnapshotComputationResponse::release_module() {
  // @@protoc_insertion_point(field_release:xla.SnapshotComputationResponse.module)
  
  ::xla::SessionModule* temp = module_;
  module_ = NULL;
  return temp;
}
inline ::xla::SessionModule* SnapshotComputationResponse::mutable_module() {
  
  if (module_ == NULL) {
    module_ = ::google::protobuf::Arena::Create< ::xla::SessionModule >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.SnapshotComputationResponse.module)
  return module_;
}
inline void SnapshotComputationResponse::set_allocated_module(::xla::SessionModule* module) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(module_);
  }
  if (module) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      module = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, module, submessage_arena);
    }
    
  } else {
    
  }
  module_ = module;
  // @@protoc_insertion_point(field_set_allocated:xla.SnapshotComputationResponse.module)
}

// -------------------------------------------------------------------

// LoadComputationSnapshotRequest

// .xla.SessionModule module = 1;
inline bool LoadComputationSnapshotRequest::has_module() const {
  return this != internal_default_instance() && module_ != NULL;
}
inline const ::xla::SessionModule& LoadComputationSnapshotRequest::module() const {
  const ::xla::SessionModule* p = module_;
  // @@protoc_insertion_point(field_get:xla.LoadComputationSnapshotRequest.module)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::SessionModule*>(
      &::xla::_SessionModule_default_instance_);
}
inline ::xla::SessionModule* LoadComputationSnapshotRequest::release_module() {
  // @@protoc_insertion_point(field_release:xla.LoadComputationSnapshotRequest.module)
  
  ::xla::SessionModule* temp = module_;
  module_ = NULL;
  return temp;
}
inline ::xla::SessionModule* LoadComputationSnapshotRequest::mutable_module() {
  
  if (module_ == NULL) {
    module_ = ::google::protobuf::Arena::Create< ::xla::SessionModule >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LoadComputationSnapshotRequest.module)
  return module_;
}
inline void LoadComputationSnapshotRequest::set_allocated_module(::xla::SessionModule* module) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(module_);
  }
  if (module) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      module = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, module, submessage_arena);
    }
    
  } else {
    
  }
  module_ = module;
  // @@protoc_insertion_point(field_set_allocated:xla.LoadComputationSnapshotRequest.module)
}

// -------------------------------------------------------------------

// LoadComputationSnapshotResponse

// .xla.ComputationHandle computation = 1;
inline bool LoadComputationSnapshotResponse::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& LoadComputationSnapshotResponse::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.LoadComputationSnapshotResponse.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* LoadComputationSnapshotResponse::release_computation() {
  // @@protoc_insertion_point(field_release:xla.LoadComputationSnapshotResponse.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* LoadComputationSnapshotResponse::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LoadComputationSnapshotResponse.computation)
  return computation_;
}
inline void LoadComputationSnapshotResponse::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.LoadComputationSnapshotResponse.computation)
}

// -------------------------------------------------------------------

// GetDeviceHandlesRequest

// int64 device_count = 1;
inline void GetDeviceHandlesRequest::clear_device_count() {
  device_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetDeviceHandlesRequest::device_count() const {
  // @@protoc_insertion_point(field_get:xla.GetDeviceHandlesRequest.device_count)
  return device_count_;
}
inline void GetDeviceHandlesRequest::set_device_count(::google::protobuf::int64 value) {
  
  device_count_ = value;
  // @@protoc_insertion_point(field_set:xla.GetDeviceHandlesRequest.device_count)
}

// -------------------------------------------------------------------

// GetDeviceHandlesResponse

// repeated .xla.DeviceHandle device_handles = 1;
inline int GetDeviceHandlesResponse::device_handles_size() const {
  return device_handles_.size();
}
inline ::xla::DeviceHandle* GetDeviceHandlesResponse::mutable_device_handles(int index) {
  // @@protoc_insertion_point(field_mutable:xla.GetDeviceHandlesResponse.device_handles)
  return device_handles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >*
GetDeviceHandlesResponse::mutable_device_handles() {
  // @@protoc_insertion_point(field_mutable_list:xla.GetDeviceHandlesResponse.device_handles)
  return &device_handles_;
}
inline const ::xla::DeviceHandle& GetDeviceHandlesResponse::device_handles(int index) const {
  // @@protoc_insertion_point(field_get:xla.GetDeviceHandlesResponse.device_handles)
  return device_handles_.Get(index);
}
inline ::xla::DeviceHandle* GetDeviceHandlesResponse::add_device_handles() {
  // @@protoc_insertion_point(field_add:xla.GetDeviceHandlesResponse.device_handles)
  return device_handles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::DeviceHandle >&
GetDeviceHandlesResponse::device_handles() const {
  // @@protoc_insertion_point(field_list:xla.GetDeviceHandlesResponse.device_handles)
  return device_handles_;
}

// -------------------------------------------------------------------

// TransferToClientRequest

// .xla.GlobalDataHandle data = 1;
inline bool TransferToClientRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& TransferToClientRequest::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.TransferToClientRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* TransferToClientRequest::release_data() {
  // @@protoc_insertion_point(field_release:xla.TransferToClientRequest.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* TransferToClientRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToClientRequest.data)
  return data_;
}
inline void TransferToClientRequest::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToClientRequest.data)
}

// .xla.Shape shape_with_layout = 2;
inline bool TransferToClientRequest::has_shape_with_layout() const {
  return this != internal_default_instance() && shape_with_layout_ != NULL;
}
inline const ::xla::Shape& TransferToClientRequest::shape_with_layout() const {
  const ::xla::Shape* p = shape_with_layout_;
  // @@protoc_insertion_point(field_get:xla.TransferToClientRequest.shape_with_layout)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* TransferToClientRequest::release_shape_with_layout() {
  // @@protoc_insertion_point(field_release:xla.TransferToClientRequest.shape_with_layout)
  
  ::xla::Shape* temp = shape_with_layout_;
  shape_with_layout_ = NULL;
  return temp;
}
inline ::xla::Shape* TransferToClientRequest::mutable_shape_with_layout() {
  
  if (shape_with_layout_ == NULL) {
    shape_with_layout_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToClientRequest.shape_with_layout)
  return shape_with_layout_;
}
inline void TransferToClientRequest::set_allocated_shape_with_layout(::xla::Shape* shape_with_layout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_layout_);
  }
  if (shape_with_layout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_layout)->GetArena();
    if (message_arena != submessage_arena) {
      shape_with_layout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape_with_layout, submessage_arena);
    }
    
  } else {
    
  }
  shape_with_layout_ = shape_with_layout;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToClientRequest.shape_with_layout)
}

// -------------------------------------------------------------------

// TransferToClientResponse

// .xla.LiteralProto literal = 1;
inline bool TransferToClientResponse::has_literal() const {
  return this != internal_default_instance() && literal_ != NULL;
}
inline const ::xla::LiteralProto& TransferToClientResponse::literal() const {
  const ::xla::LiteralProto* p = literal_;
  // @@protoc_insertion_point(field_get:xla.TransferToClientResponse.literal)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::LiteralProto*>(
      &::xla::_LiteralProto_default_instance_);
}
inline ::xla::LiteralProto* TransferToClientResponse::release_literal() {
  // @@protoc_insertion_point(field_release:xla.TransferToClientResponse.literal)
  
  ::xla::LiteralProto* temp = literal_;
  literal_ = NULL;
  return temp;
}
inline ::xla::LiteralProto* TransferToClientResponse::mutable_literal() {
  
  if (literal_ == NULL) {
    literal_ = ::google::protobuf::Arena::CreateMessage< ::xla::LiteralProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToClientResponse.literal)
  return literal_;
}
inline void TransferToClientResponse::set_allocated_literal(::xla::LiteralProto* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(literal_);
  }
  if (literal) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(literal)->GetArena();
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    
  } else {
    
  }
  literal_ = literal;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToClientResponse.literal)
}

// -------------------------------------------------------------------

// TransferToServerRequest

// .xla.LiteralProto literal = 1;
inline bool TransferToServerRequest::has_literal() const {
  return this != internal_default_instance() && literal_ != NULL;
}
inline const ::xla::LiteralProto& TransferToServerRequest::literal() const {
  const ::xla::LiteralProto* p = literal_;
  // @@protoc_insertion_point(field_get:xla.TransferToServerRequest.literal)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::LiteralProto*>(
      &::xla::_LiteralProto_default_instance_);
}
inline ::xla::LiteralProto* TransferToServerRequest::release_literal() {
  // @@protoc_insertion_point(field_release:xla.TransferToServerRequest.literal)
  
  ::xla::LiteralProto* temp = literal_;
  literal_ = NULL;
  return temp;
}
inline ::xla::LiteralProto* TransferToServerRequest::mutable_literal() {
  
  if (literal_ == NULL) {
    literal_ = ::google::protobuf::Arena::CreateMessage< ::xla::LiteralProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToServerRequest.literal)
  return literal_;
}
inline void TransferToServerRequest::set_allocated_literal(::xla::LiteralProto* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(literal_);
  }
  if (literal) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(literal)->GetArena();
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    
  } else {
    
  }
  literal_ = literal;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToServerRequest.literal)
}

// .xla.DeviceHandle device_handle = 2;
inline bool TransferToServerRequest::has_device_handle() const {
  return this != internal_default_instance() && device_handle_ != NULL;
}
inline const ::xla::DeviceHandle& TransferToServerRequest::device_handle() const {
  const ::xla::DeviceHandle* p = device_handle_;
  // @@protoc_insertion_point(field_get:xla.TransferToServerRequest.device_handle)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DeviceHandle*>(
      &::xla::_DeviceHandle_default_instance_);
}
inline ::xla::DeviceHandle* TransferToServerRequest::release_device_handle() {
  // @@protoc_insertion_point(field_release:xla.TransferToServerRequest.device_handle)
  
  ::xla::DeviceHandle* temp = device_handle_;
  device_handle_ = NULL;
  return temp;
}
inline ::xla::DeviceHandle* TransferToServerRequest::mutable_device_handle() {
  
  if (device_handle_ == NULL) {
    device_handle_ = ::google::protobuf::Arena::CreateMessage< ::xla::DeviceHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToServerRequest.device_handle)
  return device_handle_;
}
inline void TransferToServerRequest::set_allocated_device_handle(::xla::DeviceHandle* device_handle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle_);
  }
  if (device_handle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle)->GetArena();
    if (message_arena != submessage_arena) {
      device_handle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_handle, submessage_arena);
    }
    
  } else {
    
  }
  device_handle_ = device_handle;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToServerRequest.device_handle)
}

// -------------------------------------------------------------------

// TransferToServerResponse

// .xla.GlobalDataHandle data = 1;
inline bool TransferToServerResponse::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& TransferToServerResponse::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.TransferToServerResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* TransferToServerResponse::release_data() {
  // @@protoc_insertion_point(field_release:xla.TransferToServerResponse.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* TransferToServerResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToServerResponse.data)
  return data_;
}
inline void TransferToServerResponse::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToServerResponse.data)
}

// -------------------------------------------------------------------

// TransferToInfeedRequest

// .xla.LiteralProto literal = 1;
inline bool TransferToInfeedRequest::has_literal() const {
  return this != internal_default_instance() && literal_ != NULL;
}
inline const ::xla::LiteralProto& TransferToInfeedRequest::literal() const {
  const ::xla::LiteralProto* p = literal_;
  // @@protoc_insertion_point(field_get:xla.TransferToInfeedRequest.literal)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::LiteralProto*>(
      &::xla::_LiteralProto_default_instance_);
}
inline ::xla::LiteralProto* TransferToInfeedRequest::release_literal() {
  // @@protoc_insertion_point(field_release:xla.TransferToInfeedRequest.literal)
  
  ::xla::LiteralProto* temp = literal_;
  literal_ = NULL;
  return temp;
}
inline ::xla::LiteralProto* TransferToInfeedRequest::mutable_literal() {
  
  if (literal_ == NULL) {
    literal_ = ::google::protobuf::Arena::CreateMessage< ::xla::LiteralProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToInfeedRequest.literal)
  return literal_;
}
inline void TransferToInfeedRequest::set_allocated_literal(::xla::LiteralProto* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(literal_);
  }
  if (literal) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(literal)->GetArena();
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    
  } else {
    
  }
  literal_ = literal;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToInfeedRequest.literal)
}

// int64 replica_id = 2;
inline void TransferToInfeedRequest::clear_replica_id() {
  replica_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferToInfeedRequest::replica_id() const {
  // @@protoc_insertion_point(field_get:xla.TransferToInfeedRequest.replica_id)
  return replica_id_;
}
inline void TransferToInfeedRequest::set_replica_id(::google::protobuf::int64 value) {
  
  replica_id_ = value;
  // @@protoc_insertion_point(field_set:xla.TransferToInfeedRequest.replica_id)
}

// .xla.DeviceHandle device_handle = 3;
inline bool TransferToInfeedRequest::has_device_handle() const {
  return this != internal_default_instance() && device_handle_ != NULL;
}
inline const ::xla::DeviceHandle& TransferToInfeedRequest::device_handle() const {
  const ::xla::DeviceHandle* p = device_handle_;
  // @@protoc_insertion_point(field_get:xla.TransferToInfeedRequest.device_handle)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DeviceHandle*>(
      &::xla::_DeviceHandle_default_instance_);
}
inline ::xla::DeviceHandle* TransferToInfeedRequest::release_device_handle() {
  // @@protoc_insertion_point(field_release:xla.TransferToInfeedRequest.device_handle)
  
  ::xla::DeviceHandle* temp = device_handle_;
  device_handle_ = NULL;
  return temp;
}
inline ::xla::DeviceHandle* TransferToInfeedRequest::mutable_device_handle() {
  
  if (device_handle_ == NULL) {
    device_handle_ = ::google::protobuf::Arena::CreateMessage< ::xla::DeviceHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferToInfeedRequest.device_handle)
  return device_handle_;
}
inline void TransferToInfeedRequest::set_allocated_device_handle(::xla::DeviceHandle* device_handle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle_);
  }
  if (device_handle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle)->GetArena();
    if (message_arena != submessage_arena) {
      device_handle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_handle, submessage_arena);
    }
    
  } else {
    
  }
  device_handle_ = device_handle;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferToInfeedRequest.device_handle)
}

// -------------------------------------------------------------------

// TransferToInfeedResponse

// -------------------------------------------------------------------

// TransferFromOutfeedRequest

// .xla.Shape shape_with_layout = 1;
inline bool TransferFromOutfeedRequest::has_shape_with_layout() const {
  return this != internal_default_instance() && shape_with_layout_ != NULL;
}
inline const ::xla::Shape& TransferFromOutfeedRequest::shape_with_layout() const {
  const ::xla::Shape* p = shape_with_layout_;
  // @@protoc_insertion_point(field_get:xla.TransferFromOutfeedRequest.shape_with_layout)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* TransferFromOutfeedRequest::release_shape_with_layout() {
  // @@protoc_insertion_point(field_release:xla.TransferFromOutfeedRequest.shape_with_layout)
  
  ::xla::Shape* temp = shape_with_layout_;
  shape_with_layout_ = NULL;
  return temp;
}
inline ::xla::Shape* TransferFromOutfeedRequest::mutable_shape_with_layout() {
  
  if (shape_with_layout_ == NULL) {
    shape_with_layout_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferFromOutfeedRequest.shape_with_layout)
  return shape_with_layout_;
}
inline void TransferFromOutfeedRequest::set_allocated_shape_with_layout(::xla::Shape* shape_with_layout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_layout_);
  }
  if (shape_with_layout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(shape_with_layout)->GetArena();
    if (message_arena != submessage_arena) {
      shape_with_layout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape_with_layout, submessage_arena);
    }
    
  } else {
    
  }
  shape_with_layout_ = shape_with_layout;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferFromOutfeedRequest.shape_with_layout)
}

// int64 replica_id = 2;
inline void TransferFromOutfeedRequest::clear_replica_id() {
  replica_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransferFromOutfeedRequest::replica_id() const {
  // @@protoc_insertion_point(field_get:xla.TransferFromOutfeedRequest.replica_id)
  return replica_id_;
}
inline void TransferFromOutfeedRequest::set_replica_id(::google::protobuf::int64 value) {
  
  replica_id_ = value;
  // @@protoc_insertion_point(field_set:xla.TransferFromOutfeedRequest.replica_id)
}

// .xla.DeviceHandle device_handle = 3;
inline bool TransferFromOutfeedRequest::has_device_handle() const {
  return this != internal_default_instance() && device_handle_ != NULL;
}
inline const ::xla::DeviceHandle& TransferFromOutfeedRequest::device_handle() const {
  const ::xla::DeviceHandle* p = device_handle_;
  // @@protoc_insertion_point(field_get:xla.TransferFromOutfeedRequest.device_handle)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DeviceHandle*>(
      &::xla::_DeviceHandle_default_instance_);
}
inline ::xla::DeviceHandle* TransferFromOutfeedRequest::release_device_handle() {
  // @@protoc_insertion_point(field_release:xla.TransferFromOutfeedRequest.device_handle)
  
  ::xla::DeviceHandle* temp = device_handle_;
  device_handle_ = NULL;
  return temp;
}
inline ::xla::DeviceHandle* TransferFromOutfeedRequest::mutable_device_handle() {
  
  if (device_handle_ == NULL) {
    device_handle_ = ::google::protobuf::Arena::CreateMessage< ::xla::DeviceHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferFromOutfeedRequest.device_handle)
  return device_handle_;
}
inline void TransferFromOutfeedRequest::set_allocated_device_handle(::xla::DeviceHandle* device_handle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle_);
  }
  if (device_handle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle)->GetArena();
    if (message_arena != submessage_arena) {
      device_handle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_handle, submessage_arena);
    }
    
  } else {
    
  }
  device_handle_ = device_handle;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferFromOutfeedRequest.device_handle)
}

// -------------------------------------------------------------------

// TransferFromOutfeedResponse

// .xla.LiteralProto literal = 1;
inline bool TransferFromOutfeedResponse::has_literal() const {
  return this != internal_default_instance() && literal_ != NULL;
}
inline const ::xla::LiteralProto& TransferFromOutfeedResponse::literal() const {
  const ::xla::LiteralProto* p = literal_;
  // @@protoc_insertion_point(field_get:xla.TransferFromOutfeedResponse.literal)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::LiteralProto*>(
      &::xla::_LiteralProto_default_instance_);
}
inline ::xla::LiteralProto* TransferFromOutfeedResponse::release_literal() {
  // @@protoc_insertion_point(field_release:xla.TransferFromOutfeedResponse.literal)
  
  ::xla::LiteralProto* temp = literal_;
  literal_ = NULL;
  return temp;
}
inline ::xla::LiteralProto* TransferFromOutfeedResponse::mutable_literal() {
  
  if (literal_ == NULL) {
    literal_ = ::google::protobuf::Arena::CreateMessage< ::xla::LiteralProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.TransferFromOutfeedResponse.literal)
  return literal_;
}
inline void TransferFromOutfeedResponse::set_allocated_literal(::xla::LiteralProto* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(literal_);
  }
  if (literal) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(literal)->GetArena();
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    
  } else {
    
  }
  literal_ = literal;
  // @@protoc_insertion_point(field_set_allocated:xla.TransferFromOutfeedResponse.literal)
}

// -------------------------------------------------------------------

// ResetDeviceRequest

// .xla.DeviceHandle device_handle = 1;
inline bool ResetDeviceRequest::has_device_handle() const {
  return this != internal_default_instance() && device_handle_ != NULL;
}
inline const ::xla::DeviceHandle& ResetDeviceRequest::device_handle() const {
  const ::xla::DeviceHandle* p = device_handle_;
  // @@protoc_insertion_point(field_get:xla.ResetDeviceRequest.device_handle)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DeviceHandle*>(
      &::xla::_DeviceHandle_default_instance_);
}
inline ::xla::DeviceHandle* ResetDeviceRequest::release_device_handle() {
  // @@protoc_insertion_point(field_release:xla.ResetDeviceRequest.device_handle)
  
  ::xla::DeviceHandle* temp = device_handle_;
  device_handle_ = NULL;
  return temp;
}
inline ::xla::DeviceHandle* ResetDeviceRequest::mutable_device_handle() {
  
  if (device_handle_ == NULL) {
    device_handle_ = ::google::protobuf::Arena::CreateMessage< ::xla::DeviceHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ResetDeviceRequest.device_handle)
  return device_handle_;
}
inline void ResetDeviceRequest::set_allocated_device_handle(::xla::DeviceHandle* device_handle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle_);
  }
  if (device_handle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(device_handle)->GetArena();
    if (message_arena != submessage_arena) {
      device_handle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_handle, submessage_arena);
    }
    
  } else {
    
  }
  device_handle_ = device_handle;
  // @@protoc_insertion_point(field_set_allocated:xla.ResetDeviceRequest.device_handle)
}

// -------------------------------------------------------------------

// ResetDeviceResponse

// -------------------------------------------------------------------

// ComputationStatsRequest

// .xla.ComputationHandle computation = 1;
inline bool ComputationStatsRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& ComputationStatsRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ComputationStatsRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* ComputationStatsRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ComputationStatsRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* ComputationStatsRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputationStatsRequest.computation)
  return computation_;
}
inline void ComputationStatsRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputationStatsRequest.computation)
}

// .xla.DebugOptions debug_options = 2;
inline bool ComputationStatsRequest::has_debug_options() const {
  return this != internal_default_instance() && debug_options_ != NULL;
}
inline void ComputationStatsRequest::clear_debug_options() {
  if (GetArenaNoVirtual() == NULL && debug_options_ != NULL) {
    delete debug_options_;
  }
  debug_options_ = NULL;
}
inline const ::xla::DebugOptions& ComputationStatsRequest::debug_options() const {
  const ::xla::DebugOptions* p = debug_options_;
  // @@protoc_insertion_point(field_get:xla.ComputationStatsRequest.debug_options)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::DebugOptions*>(
      &::xla::_DebugOptions_default_instance_);
}
inline ::xla::DebugOptions* ComputationStatsRequest::release_debug_options() {
  // @@protoc_insertion_point(field_release:xla.ComputationStatsRequest.debug_options)
  
  ::xla::DebugOptions* temp = debug_options_;
  debug_options_ = NULL;
  return temp;
}
inline ::xla::DebugOptions* ComputationStatsRequest::mutable_debug_options() {
  
  if (debug_options_ == NULL) {
    debug_options_ = ::google::protobuf::Arena::Create< ::xla::DebugOptions >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputationStatsRequest.debug_options)
  return debug_options_;
}
inline void ComputationStatsRequest::set_allocated_debug_options(::xla::DebugOptions* debug_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete debug_options_;
  }
  if (debug_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      debug_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, debug_options, submessage_arena);
    }
    
  } else {
    
  }
  debug_options_ = debug_options;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputationStatsRequest.debug_options)
}

// -------------------------------------------------------------------

// ComputationStatsResponse

// .xla.ComputationStats stats = 1;
inline bool ComputationStatsResponse::has_stats() const {
  return this != internal_default_instance() && stats_ != NULL;
}
inline const ::xla::ComputationStats& ComputationStatsResponse::stats() const {
  const ::xla::ComputationStats* p = stats_;
  // @@protoc_insertion_point(field_get:xla.ComputationStatsResponse.stats)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationStats*>(
      &::xla::_ComputationStats_default_instance_);
}
inline ::xla::ComputationStats* ComputationStatsResponse::release_stats() {
  // @@protoc_insertion_point(field_release:xla.ComputationStatsResponse.stats)
  
  ::xla::ComputationStats* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline ::xla::ComputationStats* ComputationStatsResponse::mutable_stats() {
  
  if (stats_ == NULL) {
    stats_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationStats >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputationStatsResponse.stats)
  return stats_;
}
inline void ComputationStatsResponse::set_allocated_stats(::xla::ComputationStats* stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stats_);
  }
  if (stats) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(stats)->GetArena();
    if (message_arena != submessage_arena) {
      stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    
  } else {
    
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputationStatsResponse.stats)
}

// -------------------------------------------------------------------

// ComputationRequest

// string name = 1;
inline void ComputationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ComputationRequest::name() const {
  // @@protoc_insertion_point(field_get:xla.ComputationRequest.name)
  return name_.GetNoArena();
}
inline void ComputationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.ComputationRequest.name)
}
#if LANG_CXX11
inline void ComputationRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.ComputationRequest.name)
}
#endif
inline void ComputationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.ComputationRequest.name)
}
inline void ComputationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.ComputationRequest.name)
}
inline ::std::string* ComputationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xla.ComputationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComputationRequest::release_name() {
  // @@protoc_insertion_point(field_release:xla.ComputationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComputationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xla.ComputationRequest.name)
}

// -------------------------------------------------------------------

// ComputationResponse

// .xla.ComputationHandle computation = 1;
inline bool ComputationResponse::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& ComputationResponse::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ComputationResponse.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* ComputationResponse::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ComputationResponse.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* ComputationResponse::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputationResponse.computation)
  return computation_;
}
inline void ComputationResponse::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputationResponse.computation)
}

// -------------------------------------------------------------------

// CreateChannelHandleRequest

// -------------------------------------------------------------------

// CreateChannelHandleResponse

// .xla.ChannelHandle channel = 1;
inline bool CreateChannelHandleResponse::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline const ::xla::ChannelHandle& CreateChannelHandleResponse::channel() const {
  const ::xla::ChannelHandle* p = channel_;
  // @@protoc_insertion_point(field_get:xla.CreateChannelHandleResponse.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ChannelHandle*>(
      &::xla::_ChannelHandle_default_instance_);
}
inline ::xla::ChannelHandle* CreateChannelHandleResponse::release_channel() {
  // @@protoc_insertion_point(field_release:xla.CreateChannelHandleResponse.channel)
  
  ::xla::ChannelHandle* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::xla::ChannelHandle* CreateChannelHandleResponse::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = ::google::protobuf::Arena::CreateMessage< ::xla::ChannelHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.CreateChannelHandleResponse.channel)
  return channel_;
}
inline void CreateChannelHandleResponse::set_allocated_channel(::xla::ChannelHandle* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_);
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(channel)->GetArena();
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:xla.CreateChannelHandleResponse.channel)
}

// -------------------------------------------------------------------

// UnregisterRequest

// .xla.GlobalDataHandle data = 1;
inline bool UnregisterRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& UnregisterRequest::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.UnregisterRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* UnregisterRequest::release_data() {
  // @@protoc_insertion_point(field_release:xla.UnregisterRequest.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* UnregisterRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.UnregisterRequest.data)
  return data_;
}
inline void UnregisterRequest::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.UnregisterRequest.data)
}

// -------------------------------------------------------------------

// UnregisterResponse

// -------------------------------------------------------------------

// SetReturnValueRequest

// .xla.ComputationHandle computation = 1;
inline bool SetReturnValueRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& SetReturnValueRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.SetReturnValueRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* SetReturnValueRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.SetReturnValueRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* SetReturnValueRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.SetReturnValueRequest.computation)
  return computation_;
}
inline void SetReturnValueRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.SetReturnValueRequest.computation)
}

// .xla.ComputationDataHandle operand = 2;
inline bool SetReturnValueRequest::has_operand() const {
  return this != internal_default_instance() && operand_ != NULL;
}
inline const ::xla::ComputationDataHandle& SetReturnValueRequest::operand() const {
  const ::xla::ComputationDataHandle* p = operand_;
  // @@protoc_insertion_point(field_get:xla.SetReturnValueRequest.operand)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationDataHandle*>(
      &::xla::_ComputationDataHandle_default_instance_);
}
inline ::xla::ComputationDataHandle* SetReturnValueRequest::release_operand() {
  // @@protoc_insertion_point(field_release:xla.SetReturnValueRequest.operand)
  
  ::xla::ComputationDataHandle* temp = operand_;
  operand_ = NULL;
  return temp;
}
inline ::xla::ComputationDataHandle* SetReturnValueRequest::mutable_operand() {
  
  if (operand_ == NULL) {
    operand_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.SetReturnValueRequest.operand)
  return operand_;
}
inline void SetReturnValueRequest::set_allocated_operand(::xla::ComputationDataHandle* operand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operand_);
  }
  if (operand) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(operand)->GetArena();
    if (message_arena != submessage_arena) {
      operand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operand, submessage_arena);
    }
    
  } else {
    
  }
  operand_ = operand;
  // @@protoc_insertion_point(field_set_allocated:xla.SetReturnValueRequest.operand)
}

// -------------------------------------------------------------------

// SetReturnValueResponse

// -------------------------------------------------------------------

// ExecuteRequest

// .xla.ComputationHandle computation = 1;
inline bool ExecuteRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& ExecuteRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ExecuteRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* ExecuteRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ExecuteRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* ExecuteRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteRequest.computation)
  return computation_;
}
inline void ExecuteRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteRequest.computation)
}

// repeated .xla.GlobalDataHandle arguments = 2;
inline int ExecuteRequest::arguments_size() const {
  return arguments_.size();
}
inline ::xla::GlobalDataHandle* ExecuteRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecuteRequest.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
ExecuteRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecuteRequest.arguments)
  return &arguments_;
}
inline const ::xla::GlobalDataHandle& ExecuteRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecuteRequest.arguments)
  return arguments_.Get(index);
}
inline ::xla::GlobalDataHandle* ExecuteRequest::add_arguments() {
  // @@protoc_insertion_point(field_add:xla.ExecuteRequest.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
ExecuteRequest::arguments() const {
  // @@protoc_insertion_point(field_list:xla.ExecuteRequest.arguments)
  return arguments_;
}

// .xla.ExecutionOptions execution_options = 5;
inline bool ExecuteRequest::has_execution_options() const {
  return this != internal_default_instance() && execution_options_ != NULL;
}
inline void ExecuteRequest::clear_execution_options() {
  if (GetArenaNoVirtual() == NULL && execution_options_ != NULL) {
    delete execution_options_;
  }
  execution_options_ = NULL;
}
inline const ::xla::ExecutionOptions& ExecuteRequest::execution_options() const {
  const ::xla::ExecutionOptions* p = execution_options_;
  // @@protoc_insertion_point(field_get:xla.ExecuteRequest.execution_options)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionOptions*>(
      &::xla::_ExecutionOptions_default_instance_);
}
inline ::xla::ExecutionOptions* ExecuteRequest::release_execution_options() {
  // @@protoc_insertion_point(field_release:xla.ExecuteRequest.execution_options)
  
  ::xla::ExecutionOptions* temp = execution_options_;
  execution_options_ = NULL;
  return temp;
}
inline ::xla::ExecutionOptions* ExecuteRequest::mutable_execution_options() {
  
  if (execution_options_ == NULL) {
    execution_options_ = ::google::protobuf::Arena::Create< ::xla::ExecutionOptions >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteRequest.execution_options)
  return execution_options_;
}
inline void ExecuteRequest::set_allocated_execution_options(::xla::ExecutionOptions* execution_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete execution_options_;
  }
  if (execution_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      execution_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_options, submessage_arena);
    }
    
  } else {
    
  }
  execution_options_ = execution_options;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteRequest.execution_options)
}

// -------------------------------------------------------------------

// ExecuteGraphRequest

// .xla.HloModuleProto computation = 1;
inline bool ExecuteGraphRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::HloModuleProto& ExecuteGraphRequest::computation() const {
  const ::xla::HloModuleProto* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ExecuteGraphRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::HloModuleProto*>(
      &::xla::_HloModuleProto_default_instance_);
}
inline ::xla::HloModuleProto* ExecuteGraphRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ExecuteGraphRequest.computation)
  
  ::xla::HloModuleProto* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::HloModuleProto* ExecuteGraphRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::HloModuleProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteGraphRequest.computation)
  return computation_;
}
inline void ExecuteGraphRequest::set_allocated_computation(::xla::HloModuleProto* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteGraphRequest.computation)
}

// repeated .xla.GlobalDataHandle arguments = 2;
inline int ExecuteGraphRequest::arguments_size() const {
  return arguments_.size();
}
inline ::xla::GlobalDataHandle* ExecuteGraphRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecuteGraphRequest.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
ExecuteGraphRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecuteGraphRequest.arguments)
  return &arguments_;
}
inline const ::xla::GlobalDataHandle& ExecuteGraphRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecuteGraphRequest.arguments)
  return arguments_.Get(index);
}
inline ::xla::GlobalDataHandle* ExecuteGraphRequest::add_arguments() {
  // @@protoc_insertion_point(field_add:xla.ExecuteGraphRequest.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
ExecuteGraphRequest::arguments() const {
  // @@protoc_insertion_point(field_list:xla.ExecuteGraphRequest.arguments)
  return arguments_;
}

// .xla.ExecutionOptions execution_options = 3;
inline bool ExecuteGraphRequest::has_execution_options() const {
  return this != internal_default_instance() && execution_options_ != NULL;
}
inline void ExecuteGraphRequest::clear_execution_options() {
  if (GetArenaNoVirtual() == NULL && execution_options_ != NULL) {
    delete execution_options_;
  }
  execution_options_ = NULL;
}
inline const ::xla::ExecutionOptions& ExecuteGraphRequest::execution_options() const {
  const ::xla::ExecutionOptions* p = execution_options_;
  // @@protoc_insertion_point(field_get:xla.ExecuteGraphRequest.execution_options)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionOptions*>(
      &::xla::_ExecutionOptions_default_instance_);
}
inline ::xla::ExecutionOptions* ExecuteGraphRequest::release_execution_options() {
  // @@protoc_insertion_point(field_release:xla.ExecuteGraphRequest.execution_options)
  
  ::xla::ExecutionOptions* temp = execution_options_;
  execution_options_ = NULL;
  return temp;
}
inline ::xla::ExecutionOptions* ExecuteGraphRequest::mutable_execution_options() {
  
  if (execution_options_ == NULL) {
    execution_options_ = ::google::protobuf::Arena::Create< ::xla::ExecutionOptions >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteGraphRequest.execution_options)
  return execution_options_;
}
inline void ExecuteGraphRequest::set_allocated_execution_options(::xla::ExecutionOptions* execution_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete execution_options_;
  }
  if (execution_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      execution_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_options, submessage_arena);
    }
    
  } else {
    
  }
  execution_options_ = execution_options;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteGraphRequest.execution_options)
}

// -------------------------------------------------------------------

// ExecuteParallelRequest

// repeated .xla.ExecuteRequest requests = 1;
inline int ExecuteParallelRequest::requests_size() const {
  return requests_.size();
}
inline void ExecuteParallelRequest::clear_requests() {
  requests_.Clear();
}
inline ::xla::ExecuteRequest* ExecuteParallelRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecuteParallelRequest.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::ExecuteRequest >*
ExecuteParallelRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecuteParallelRequest.requests)
  return &requests_;
}
inline const ::xla::ExecuteRequest& ExecuteParallelRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecuteParallelRequest.requests)
  return requests_.Get(index);
}
inline ::xla::ExecuteRequest* ExecuteParallelRequest::add_requests() {
  // @@protoc_insertion_point(field_add:xla.ExecuteParallelRequest.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::ExecuteRequest >&
ExecuteParallelRequest::requests() const {
  // @@protoc_insertion_point(field_list:xla.ExecuteParallelRequest.requests)
  return requests_;
}

// -------------------------------------------------------------------

// ExecuteResponse

// .xla.GlobalDataHandle output = 1;
inline bool ExecuteResponse::has_output() const {
  return this != internal_default_instance() && output_ != NULL;
}
inline const ::xla::GlobalDataHandle& ExecuteResponse::output() const {
  const ::xla::GlobalDataHandle* p = output_;
  // @@protoc_insertion_point(field_get:xla.ExecuteResponse.output)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* ExecuteResponse::release_output() {
  // @@protoc_insertion_point(field_release:xla.ExecuteResponse.output)
  
  ::xla::GlobalDataHandle* temp = output_;
  output_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* ExecuteResponse::mutable_output() {
  
  if (output_ == NULL) {
    output_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteResponse.output)
  return output_;
}
inline void ExecuteResponse::set_allocated_output(::xla::GlobalDataHandle* output) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_);
  }
  if (output) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(output)->GetArena();
    if (message_arena != submessage_arena) {
      output = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output, submessage_arena);
    }
    
  } else {
    
  }
  output_ = output;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteResponse.output)
}

// .xla.ExecutionProfile profile = 2;
inline bool ExecuteResponse::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::xla::ExecutionProfile& ExecuteResponse::profile() const {
  const ::xla::ExecutionProfile* p = profile_;
  // @@protoc_insertion_point(field_get:xla.ExecuteResponse.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionProfile*>(
      &::xla::_ExecutionProfile_default_instance_);
}
inline ::xla::ExecutionProfile* ExecuteResponse::release_profile() {
  // @@protoc_insertion_point(field_release:xla.ExecuteResponse.profile)
  
  ::xla::ExecutionProfile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::xla::ExecutionProfile* ExecuteResponse::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = ::google::protobuf::Arena::CreateMessage< ::xla::ExecutionProfile >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteResponse.profile)
  return profile_;
}
inline void ExecuteResponse::set_allocated_profile(::xla::ExecutionProfile* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(profile)->GetArena();
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteResponse.profile)
}

// -------------------------------------------------------------------

// ExecuteParallelResponse

// repeated .xla.ExecuteResponse responses = 1;
inline int ExecuteParallelResponse::responses_size() const {
  return responses_.size();
}
inline void ExecuteParallelResponse::clear_responses() {
  responses_.Clear();
}
inline ::xla::ExecuteResponse* ExecuteParallelResponse::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecuteParallelResponse.responses)
  return responses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::ExecuteResponse >*
ExecuteParallelResponse::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecuteParallelResponse.responses)
  return &responses_;
}
inline const ::xla::ExecuteResponse& ExecuteParallelResponse::responses(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecuteParallelResponse.responses)
  return responses_.Get(index);
}
inline ::xla::ExecuteResponse* ExecuteParallelResponse::add_responses() {
  // @@protoc_insertion_point(field_add:xla.ExecuteParallelResponse.responses)
  return responses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::ExecuteResponse >&
ExecuteParallelResponse::responses() const {
  // @@protoc_insertion_point(field_list:xla.ExecuteParallelResponse.responses)
  return responses_;
}

// -------------------------------------------------------------------

// ExecuteAsyncRequest

// .xla.ComputationHandle computation = 1;
inline bool ExecuteAsyncRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& ExecuteAsyncRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ExecuteAsyncRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* ExecuteAsyncRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ExecuteAsyncRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* ExecuteAsyncRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteAsyncRequest.computation)
  return computation_;
}
inline void ExecuteAsyncRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteAsyncRequest.computation)
}

// repeated .xla.GlobalDataHandle arguments = 2;
inline int ExecuteAsyncRequest::arguments_size() const {
  return arguments_.size();
}
inline ::xla::GlobalDataHandle* ExecuteAsyncRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ExecuteAsyncRequest.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
ExecuteAsyncRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:xla.ExecuteAsyncRequest.arguments)
  return &arguments_;
}
inline const ::xla::GlobalDataHandle& ExecuteAsyncRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:xla.ExecuteAsyncRequest.arguments)
  return arguments_.Get(index);
}
inline ::xla::GlobalDataHandle* ExecuteAsyncRequest::add_arguments() {
  // @@protoc_insertion_point(field_add:xla.ExecuteAsyncRequest.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
ExecuteAsyncRequest::arguments() const {
  // @@protoc_insertion_point(field_list:xla.ExecuteAsyncRequest.arguments)
  return arguments_;
}

// .xla.ExecutionOptions execution_options = 6;
inline bool ExecuteAsyncRequest::has_execution_options() const {
  return this != internal_default_instance() && execution_options_ != NULL;
}
inline void ExecuteAsyncRequest::clear_execution_options() {
  if (GetArenaNoVirtual() == NULL && execution_options_ != NULL) {
    delete execution_options_;
  }
  execution_options_ = NULL;
}
inline const ::xla::ExecutionOptions& ExecuteAsyncRequest::execution_options() const {
  const ::xla::ExecutionOptions* p = execution_options_;
  // @@protoc_insertion_point(field_get:xla.ExecuteAsyncRequest.execution_options)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionOptions*>(
      &::xla::_ExecutionOptions_default_instance_);
}
inline ::xla::ExecutionOptions* ExecuteAsyncRequest::release_execution_options() {
  // @@protoc_insertion_point(field_release:xla.ExecuteAsyncRequest.execution_options)
  
  ::xla::ExecutionOptions* temp = execution_options_;
  execution_options_ = NULL;
  return temp;
}
inline ::xla::ExecutionOptions* ExecuteAsyncRequest::mutable_execution_options() {
  
  if (execution_options_ == NULL) {
    execution_options_ = ::google::protobuf::Arena::Create< ::xla::ExecutionOptions >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteAsyncRequest.execution_options)
  return execution_options_;
}
inline void ExecuteAsyncRequest::set_allocated_execution_options(::xla::ExecutionOptions* execution_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete execution_options_;
  }
  if (execution_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      execution_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_options, submessage_arena);
    }
    
  } else {
    
  }
  execution_options_ = execution_options;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteAsyncRequest.execution_options)
}

// -------------------------------------------------------------------

// ExecuteAsyncResponse

// .xla.ExecutionHandle execution = 1;
inline bool ExecuteAsyncResponse::has_execution() const {
  return this != internal_default_instance() && execution_ != NULL;
}
inline const ::xla::ExecutionHandle& ExecuteAsyncResponse::execution() const {
  const ::xla::ExecutionHandle* p = execution_;
  // @@protoc_insertion_point(field_get:xla.ExecuteAsyncResponse.execution)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionHandle*>(
      &::xla::_ExecutionHandle_default_instance_);
}
inline ::xla::ExecutionHandle* ExecuteAsyncResponse::release_execution() {
  // @@protoc_insertion_point(field_release:xla.ExecuteAsyncResponse.execution)
  
  ::xla::ExecutionHandle* temp = execution_;
  execution_ = NULL;
  return temp;
}
inline ::xla::ExecutionHandle* ExecuteAsyncResponse::mutable_execution() {
  
  if (execution_ == NULL) {
    execution_ = ::google::protobuf::Arena::CreateMessage< ::xla::ExecutionHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ExecuteAsyncResponse.execution)
  return execution_;
}
inline void ExecuteAsyncResponse::set_allocated_execution(::xla::ExecutionHandle* execution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(execution_);
  }
  if (execution) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(execution)->GetArena();
    if (message_arena != submessage_arena) {
      execution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution, submessage_arena);
    }
    
  } else {
    
  }
  execution_ = execution;
  // @@protoc_insertion_point(field_set_allocated:xla.ExecuteAsyncResponse.execution)
}

// -------------------------------------------------------------------

// WaitForExecutionRequest

// .xla.ExecutionHandle execution = 1;
inline bool WaitForExecutionRequest::has_execution() const {
  return this != internal_default_instance() && execution_ != NULL;
}
inline const ::xla::ExecutionHandle& WaitForExecutionRequest::execution() const {
  const ::xla::ExecutionHandle* p = execution_;
  // @@protoc_insertion_point(field_get:xla.WaitForExecutionRequest.execution)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionHandle*>(
      &::xla::_ExecutionHandle_default_instance_);
}
inline ::xla::ExecutionHandle* WaitForExecutionRequest::release_execution() {
  // @@protoc_insertion_point(field_release:xla.WaitForExecutionRequest.execution)
  
  ::xla::ExecutionHandle* temp = execution_;
  execution_ = NULL;
  return temp;
}
inline ::xla::ExecutionHandle* WaitForExecutionRequest::mutable_execution() {
  
  if (execution_ == NULL) {
    execution_ = ::google::protobuf::Arena::CreateMessage< ::xla::ExecutionHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.WaitForExecutionRequest.execution)
  return execution_;
}
inline void WaitForExecutionRequest::set_allocated_execution(::xla::ExecutionHandle* execution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(execution_);
  }
  if (execution) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(execution)->GetArena();
    if (message_arena != submessage_arena) {
      execution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution, submessage_arena);
    }
    
  } else {
    
  }
  execution_ = execution;
  // @@protoc_insertion_point(field_set_allocated:xla.WaitForExecutionRequest.execution)
}

// -------------------------------------------------------------------

// WaitForExecutionResponse

// .xla.GlobalDataHandle output = 1;
inline bool WaitForExecutionResponse::has_output() const {
  return this != internal_default_instance() && output_ != NULL;
}
inline const ::xla::GlobalDataHandle& WaitForExecutionResponse::output() const {
  const ::xla::GlobalDataHandle* p = output_;
  // @@protoc_insertion_point(field_get:xla.WaitForExecutionResponse.output)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* WaitForExecutionResponse::release_output() {
  // @@protoc_insertion_point(field_release:xla.WaitForExecutionResponse.output)
  
  ::xla::GlobalDataHandle* temp = output_;
  output_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* WaitForExecutionResponse::mutable_output() {
  
  if (output_ == NULL) {
    output_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.WaitForExecutionResponse.output)
  return output_;
}
inline void WaitForExecutionResponse::set_allocated_output(::xla::GlobalDataHandle* output) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_);
  }
  if (output) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(output)->GetArena();
    if (message_arena != submessage_arena) {
      output = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output, submessage_arena);
    }
    
  } else {
    
  }
  output_ = output;
  // @@protoc_insertion_point(field_set_allocated:xla.WaitForExecutionResponse.output)
}

// .xla.ExecutionProfile profile = 2;
inline bool WaitForExecutionResponse::has_profile() const {
  return this != internal_default_instance() && profile_ != NULL;
}
inline const ::xla::ExecutionProfile& WaitForExecutionResponse::profile() const {
  const ::xla::ExecutionProfile* p = profile_;
  // @@protoc_insertion_point(field_get:xla.WaitForExecutionResponse.profile)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ExecutionProfile*>(
      &::xla::_ExecutionProfile_default_instance_);
}
inline ::xla::ExecutionProfile* WaitForExecutionResponse::release_profile() {
  // @@protoc_insertion_point(field_release:xla.WaitForExecutionResponse.profile)
  
  ::xla::ExecutionProfile* temp = profile_;
  profile_ = NULL;
  return temp;
}
inline ::xla::ExecutionProfile* WaitForExecutionResponse::mutable_profile() {
  
  if (profile_ == NULL) {
    profile_ = ::google::protobuf::Arena::CreateMessage< ::xla::ExecutionProfile >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.WaitForExecutionResponse.profile)
  return profile_;
}
inline void WaitForExecutionResponse::set_allocated_profile(::xla::ExecutionProfile* profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(profile_);
  }
  if (profile) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(profile)->GetArena();
    if (message_arena != submessage_arena) {
      profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, profile, submessage_arena);
    }
    
  } else {
    
  }
  profile_ = profile;
  // @@protoc_insertion_point(field_set_allocated:xla.WaitForExecutionResponse.profile)
}

// -------------------------------------------------------------------

// IsConstantRequest

// .xla.ComputationHandle computation = 1;
inline bool IsConstantRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& IsConstantRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.IsConstantRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* IsConstantRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.IsConstantRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* IsConstantRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.IsConstantRequest.computation)
  return computation_;
}
inline void IsConstantRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.IsConstantRequest.computation)
}

// .xla.ComputationDataHandle operand = 2;
inline bool IsConstantRequest::has_operand() const {
  return this != internal_default_instance() && operand_ != NULL;
}
inline const ::xla::ComputationDataHandle& IsConstantRequest::operand() const {
  const ::xla::ComputationDataHandle* p = operand_;
  // @@protoc_insertion_point(field_get:xla.IsConstantRequest.operand)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationDataHandle*>(
      &::xla::_ComputationDataHandle_default_instance_);
}
inline ::xla::ComputationDataHandle* IsConstantRequest::release_operand() {
  // @@protoc_insertion_point(field_release:xla.IsConstantRequest.operand)
  
  ::xla::ComputationDataHandle* temp = operand_;
  operand_ = NULL;
  return temp;
}
inline ::xla::ComputationDataHandle* IsConstantRequest::mutable_operand() {
  
  if (operand_ == NULL) {
    operand_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.IsConstantRequest.operand)
  return operand_;
}
inline void IsConstantRequest::set_allocated_operand(::xla::ComputationDataHandle* operand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operand_);
  }
  if (operand) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(operand)->GetArena();
    if (message_arena != submessage_arena) {
      operand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operand, submessage_arena);
    }
    
  } else {
    
  }
  operand_ = operand;
  // @@protoc_insertion_point(field_set_allocated:xla.IsConstantRequest.operand)
}

// int64 num_parameters = 3;
inline void IsConstantRequest::clear_num_parameters() {
  num_parameters_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IsConstantRequest::num_parameters() const {
  // @@protoc_insertion_point(field_get:xla.IsConstantRequest.num_parameters)
  return num_parameters_;
}
inline void IsConstantRequest::set_num_parameters(::google::protobuf::int64 value) {
  
  num_parameters_ = value;
  // @@protoc_insertion_point(field_set:xla.IsConstantRequest.num_parameters)
}

// -------------------------------------------------------------------

// IsConstantResponse

// bool is_constant = 1;
inline void IsConstantResponse::clear_is_constant() {
  is_constant_ = false;
}
inline bool IsConstantResponse::is_constant() const {
  // @@protoc_insertion_point(field_get:xla.IsConstantResponse.is_constant)
  return is_constant_;
}
inline void IsConstantResponse::set_is_constant(bool value) {
  
  is_constant_ = value;
  // @@protoc_insertion_point(field_set:xla.IsConstantResponse.is_constant)
}

// -------------------------------------------------------------------

// ComputeConstantRequest

// .xla.ComputationHandle computation = 1;
inline bool ComputeConstantRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& ComputeConstantRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.ComputeConstantRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* ComputeConstantRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.ComputeConstantRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* ComputeConstantRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputeConstantRequest.computation)
  return computation_;
}
inline void ComputeConstantRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputeConstantRequest.computation)
}

// .xla.ComputationDataHandle operand = 2;
inline bool ComputeConstantRequest::has_operand() const {
  return this != internal_default_instance() && operand_ != NULL;
}
inline const ::xla::ComputationDataHandle& ComputeConstantRequest::operand() const {
  const ::xla::ComputationDataHandle* p = operand_;
  // @@protoc_insertion_point(field_get:xla.ComputeConstantRequest.operand)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationDataHandle*>(
      &::xla::_ComputationDataHandle_default_instance_);
}
inline ::xla::ComputationDataHandle* ComputeConstantRequest::release_operand() {
  // @@protoc_insertion_point(field_release:xla.ComputeConstantRequest.operand)
  
  ::xla::ComputationDataHandle* temp = operand_;
  operand_ = NULL;
  return temp;
}
inline ::xla::ComputationDataHandle* ComputeConstantRequest::mutable_operand() {
  
  if (operand_ == NULL) {
    operand_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputeConstantRequest.operand)
  return operand_;
}
inline void ComputeConstantRequest::set_allocated_operand(::xla::ComputationDataHandle* operand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operand_);
  }
  if (operand) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(operand)->GetArena();
    if (message_arena != submessage_arena) {
      operand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operand, submessage_arena);
    }
    
  } else {
    
  }
  operand_ = operand;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputeConstantRequest.operand)
}

// .xla.Layout output_layout = 3;
inline bool ComputeConstantRequest::has_output_layout() const {
  return this != internal_default_instance() && output_layout_ != NULL;
}
inline const ::xla::Layout& ComputeConstantRequest::output_layout() const {
  const ::xla::Layout* p = output_layout_;
  // @@protoc_insertion_point(field_get:xla.ComputeConstantRequest.output_layout)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Layout*>(
      &::xla::_Layout_default_instance_);
}
inline ::xla::Layout* ComputeConstantRequest::release_output_layout() {
  // @@protoc_insertion_point(field_release:xla.ComputeConstantRequest.output_layout)
  
  ::xla::Layout* temp = output_layout_;
  output_layout_ = NULL;
  return temp;
}
inline ::xla::Layout* ComputeConstantRequest::mutable_output_layout() {
  
  if (output_layout_ == NULL) {
    output_layout_ = ::google::protobuf::Arena::CreateMessage< ::xla::Layout >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputeConstantRequest.output_layout)
  return output_layout_;
}
inline void ComputeConstantRequest::set_allocated_output_layout(::xla::Layout* output_layout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_layout_);
  }
  if (output_layout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(output_layout)->GetArena();
    if (message_arena != submessage_arena) {
      output_layout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_layout, submessage_arena);
    }
    
  } else {
    
  }
  output_layout_ = output_layout;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputeConstantRequest.output_layout)
}

// repeated .xla.LiteralProto parameters = 4;
inline int ComputeConstantRequest::parameters_size() const {
  return parameters_.size();
}
inline ::xla::LiteralProto* ComputeConstantRequest::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ComputeConstantRequest.parameters)
  return parameters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >*
ComputeConstantRequest::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:xla.ComputeConstantRequest.parameters)
  return &parameters_;
}
inline const ::xla::LiteralProto& ComputeConstantRequest::parameters(int index) const {
  // @@protoc_insertion_point(field_get:xla.ComputeConstantRequest.parameters)
  return parameters_.Get(index);
}
inline ::xla::LiteralProto* ComputeConstantRequest::add_parameters() {
  // @@protoc_insertion_point(field_add:xla.ComputeConstantRequest.parameters)
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::LiteralProto >&
ComputeConstantRequest::parameters() const {
  // @@protoc_insertion_point(field_list:xla.ComputeConstantRequest.parameters)
  return parameters_;
}

// -------------------------------------------------------------------

// ComputeConstantResponse

// .xla.LiteralProto literal = 1;
inline bool ComputeConstantResponse::has_literal() const {
  return this != internal_default_instance() && literal_ != NULL;
}
inline const ::xla::LiteralProto& ComputeConstantResponse::literal() const {
  const ::xla::LiteralProto* p = literal_;
  // @@protoc_insertion_point(field_get:xla.ComputeConstantResponse.literal)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::LiteralProto*>(
      &::xla::_LiteralProto_default_instance_);
}
inline ::xla::LiteralProto* ComputeConstantResponse::release_literal() {
  // @@protoc_insertion_point(field_release:xla.ComputeConstantResponse.literal)
  
  ::xla::LiteralProto* temp = literal_;
  literal_ = NULL;
  return temp;
}
inline ::xla::LiteralProto* ComputeConstantResponse::mutable_literal() {
  
  if (literal_ == NULL) {
    literal_ = ::google::protobuf::Arena::CreateMessage< ::xla::LiteralProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.ComputeConstantResponse.literal)
  return literal_;
}
inline void ComputeConstantResponse::set_allocated_literal(::xla::LiteralProto* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(literal_);
  }
  if (literal) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(literal)->GetArena();
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    
  } else {
    
  }
  literal_ = literal;
  // @@protoc_insertion_point(field_set_allocated:xla.ComputeConstantResponse.literal)
}

// -------------------------------------------------------------------

// DeconstructTupleRequest

// .xla.GlobalDataHandle tuple_handle = 2;
inline bool DeconstructTupleRequest::has_tuple_handle() const {
  return this != internal_default_instance() && tuple_handle_ != NULL;
}
inline const ::xla::GlobalDataHandle& DeconstructTupleRequest::tuple_handle() const {
  const ::xla::GlobalDataHandle* p = tuple_handle_;
  // @@protoc_insertion_point(field_get:xla.DeconstructTupleRequest.tuple_handle)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* DeconstructTupleRequest::release_tuple_handle() {
  // @@protoc_insertion_point(field_release:xla.DeconstructTupleRequest.tuple_handle)
  
  ::xla::GlobalDataHandle* temp = tuple_handle_;
  tuple_handle_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* DeconstructTupleRequest::mutable_tuple_handle() {
  
  if (tuple_handle_ == NULL) {
    tuple_handle_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.DeconstructTupleRequest.tuple_handle)
  return tuple_handle_;
}
inline void DeconstructTupleRequest::set_allocated_tuple_handle(::xla::GlobalDataHandle* tuple_handle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tuple_handle_);
  }
  if (tuple_handle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(tuple_handle)->GetArena();
    if (message_arena != submessage_arena) {
      tuple_handle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tuple_handle, submessage_arena);
    }
    
  } else {
    
  }
  tuple_handle_ = tuple_handle;
  // @@protoc_insertion_point(field_set_allocated:xla.DeconstructTupleRequest.tuple_handle)
}

// -------------------------------------------------------------------

// DeconstructTupleResponse

// repeated .xla.GlobalDataHandle element_handles = 1;
inline int DeconstructTupleResponse::element_handles_size() const {
  return element_handles_.size();
}
inline ::xla::GlobalDataHandle* DeconstructTupleResponse::mutable_element_handles(int index) {
  // @@protoc_insertion_point(field_mutable:xla.DeconstructTupleResponse.element_handles)
  return element_handles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
DeconstructTupleResponse::mutable_element_handles() {
  // @@protoc_insertion_point(field_mutable_list:xla.DeconstructTupleResponse.element_handles)
  return &element_handles_;
}
inline const ::xla::GlobalDataHandle& DeconstructTupleResponse::element_handles(int index) const {
  // @@protoc_insertion_point(field_get:xla.DeconstructTupleResponse.element_handles)
  return element_handles_.Get(index);
}
inline ::xla::GlobalDataHandle* DeconstructTupleResponse::add_element_handles() {
  // @@protoc_insertion_point(field_add:xla.DeconstructTupleResponse.element_handles)
  return element_handles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
DeconstructTupleResponse::element_handles() const {
  // @@protoc_insertion_point(field_list:xla.DeconstructTupleResponse.element_handles)
  return element_handles_;
}

// -------------------------------------------------------------------

// LoadDataRequest

// string columnio_tablet_path = 1;
inline void LoadDataRequest::clear_columnio_tablet_path() {
  columnio_tablet_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoadDataRequest::columnio_tablet_path() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.columnio_tablet_path)
  return columnio_tablet_path_.GetNoArena();
}
inline void LoadDataRequest::set_columnio_tablet_path(const ::std::string& value) {
  
  columnio_tablet_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.LoadDataRequest.columnio_tablet_path)
}
#if LANG_CXX11
inline void LoadDataRequest::set_columnio_tablet_path(::std::string&& value) {
  
  columnio_tablet_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.LoadDataRequest.columnio_tablet_path)
}
#endif
inline void LoadDataRequest::set_columnio_tablet_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  columnio_tablet_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.LoadDataRequest.columnio_tablet_path)
}
inline void LoadDataRequest::set_columnio_tablet_path(const char* value, size_t size) {
  
  columnio_tablet_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.LoadDataRequest.columnio_tablet_path)
}
inline ::std::string* LoadDataRequest::mutable_columnio_tablet_path() {
  
  // @@protoc_insertion_point(field_mutable:xla.LoadDataRequest.columnio_tablet_path)
  return columnio_tablet_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoadDataRequest::release_columnio_tablet_path() {
  // @@protoc_insertion_point(field_release:xla.LoadDataRequest.columnio_tablet_path)
  
  return columnio_tablet_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoadDataRequest::set_allocated_columnio_tablet_path(::std::string* columnio_tablet_path) {
  if (columnio_tablet_path != NULL) {
    
  } else {
    
  }
  columnio_tablet_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), columnio_tablet_path);
  // @@protoc_insertion_point(field_set_allocated:xla.LoadDataRequest.columnio_tablet_path)
}

// string columnio_field = 2;
inline void LoadDataRequest::clear_columnio_field() {
  columnio_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoadDataRequest::columnio_field() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.columnio_field)
  return columnio_field_.GetNoArena();
}
inline void LoadDataRequest::set_columnio_field(const ::std::string& value) {
  
  columnio_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.LoadDataRequest.columnio_field)
}
#if LANG_CXX11
inline void LoadDataRequest::set_columnio_field(::std::string&& value) {
  
  columnio_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.LoadDataRequest.columnio_field)
}
#endif
inline void LoadDataRequest::set_columnio_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  columnio_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.LoadDataRequest.columnio_field)
}
inline void LoadDataRequest::set_columnio_field(const char* value, size_t size) {
  
  columnio_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.LoadDataRequest.columnio_field)
}
inline ::std::string* LoadDataRequest::mutable_columnio_field() {
  
  // @@protoc_insertion_point(field_mutable:xla.LoadDataRequest.columnio_field)
  return columnio_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoadDataRequest::release_columnio_field() {
  // @@protoc_insertion_point(field_release:xla.LoadDataRequest.columnio_field)
  
  return columnio_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoadDataRequest::set_allocated_columnio_field(::std::string* columnio_field) {
  if (columnio_field != NULL) {
    
  } else {
    
  }
  columnio_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), columnio_field);
  // @@protoc_insertion_point(field_set_allocated:xla.LoadDataRequest.columnio_field)
}

// .xla.Shape element_shape = 3;
inline bool LoadDataRequest::has_element_shape() const {
  return this != internal_default_instance() && element_shape_ != NULL;
}
inline const ::xla::Shape& LoadDataRequest::element_shape() const {
  const ::xla::Shape* p = element_shape_;
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.element_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* LoadDataRequest::release_element_shape() {
  // @@protoc_insertion_point(field_release:xla.LoadDataRequest.element_shape)
  
  ::xla::Shape* temp = element_shape_;
  element_shape_ = NULL;
  return temp;
}
inline ::xla::Shape* LoadDataRequest::mutable_element_shape() {
  
  if (element_shape_ == NULL) {
    element_shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LoadDataRequest.element_shape)
  return element_shape_;
}
inline void LoadDataRequest::set_allocated_element_shape(::xla::Shape* element_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(element_shape_);
  }
  if (element_shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(element_shape)->GetArena();
    if (message_arena != submessage_arena) {
      element_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, element_shape, submessage_arena);
    }
    
  } else {
    
  }
  element_shape_ = element_shape;
  // @@protoc_insertion_point(field_set_allocated:xla.LoadDataRequest.element_shape)
}

// int64 offset = 4;
inline void LoadDataRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LoadDataRequest::offset() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.offset)
  return offset_;
}
inline void LoadDataRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataRequest.offset)
}

// int64 limit = 5;
inline void LoadDataRequest::clear_limit() {
  limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LoadDataRequest::limit() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.limit)
  return limit_;
}
inline void LoadDataRequest::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataRequest.limit)
}

// bool zip = 6;
inline void LoadDataRequest::clear_zip() {
  zip_ = false;
}
inline bool LoadDataRequest::zip() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataRequest.zip)
  return zip_;
}
inline void LoadDataRequest::set_zip(bool value) {
  
  zip_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataRequest.zip)
}

// -------------------------------------------------------------------

// LoadDataResponse

// .xla.GlobalDataHandle data = 1;
inline bool LoadDataResponse::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& LoadDataResponse::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.LoadDataResponse.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* LoadDataResponse::release_data() {
  // @@protoc_insertion_point(field_release:xla.LoadDataResponse.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* LoadDataResponse::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LoadDataResponse.data)
  return data_;
}
inline void LoadDataResponse::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.LoadDataResponse.data)
}

// .xla.Shape data_shape = 2;
inline bool LoadDataResponse::has_data_shape() const {
  return this != internal_default_instance() && data_shape_ != NULL;
}
inline const ::xla::Shape& LoadDataResponse::data_shape() const {
  const ::xla::Shape* p = data_shape_;
  // @@protoc_insertion_point(field_get:xla.LoadDataResponse.data_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* LoadDataResponse::release_data_shape() {
  // @@protoc_insertion_point(field_release:xla.LoadDataResponse.data_shape)
  
  ::xla::Shape* temp = data_shape_;
  data_shape_ = NULL;
  return temp;
}
inline ::xla::Shape* LoadDataResponse::mutable_data_shape() {
  
  if (data_shape_ == NULL) {
    data_shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.LoadDataResponse.data_shape)
  return data_shape_;
}
inline void LoadDataResponse::set_allocated_data_shape(::xla::Shape* data_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_shape_);
  }
  if (data_shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data_shape)->GetArena();
    if (message_arena != submessage_arena) {
      data_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_shape, submessage_arena);
    }
    
  } else {
    
  }
  data_shape_ = data_shape;
  // @@protoc_insertion_point(field_set_allocated:xla.LoadDataResponse.data_shape)
}

// int64 available_rows = 3;
inline void LoadDataResponse::clear_available_rows() {
  available_rows_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LoadDataResponse::available_rows() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataResponse.available_rows)
  return available_rows_;
}
inline void LoadDataResponse::set_available_rows(::google::protobuf::int64 value) {
  
  available_rows_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataResponse.available_rows)
}

// int64 rows_loaded = 4;
inline void LoadDataResponse::clear_rows_loaded() {
  rows_loaded_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LoadDataResponse::rows_loaded() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataResponse.rows_loaded)
  return rows_loaded_;
}
inline void LoadDataResponse::set_rows_loaded(::google::protobuf::int64 value) {
  
  rows_loaded_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataResponse.rows_loaded)
}

// int64 nanoseconds = 5;
inline void LoadDataResponse::clear_nanoseconds() {
  nanoseconds_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LoadDataResponse::nanoseconds() const {
  // @@protoc_insertion_point(field_get:xla.LoadDataResponse.nanoseconds)
  return nanoseconds_;
}
inline void LoadDataResponse::set_nanoseconds(::google::protobuf::int64 value) {
  
  nanoseconds_ = value;
  // @@protoc_insertion_point(field_set:xla.LoadDataResponse.nanoseconds)
}

// -------------------------------------------------------------------

// SpecializeRequest

// .xla.ComputationHandle computation = 1;
inline bool SpecializeRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& SpecializeRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.SpecializeRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* SpecializeRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.SpecializeRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* SpecializeRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.SpecializeRequest.computation)
  return computation_;
}
inline void SpecializeRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.SpecializeRequest.computation)
}

// repeated .xla.GlobalDataHandle arguments = 2;
inline int SpecializeRequest::arguments_size() const {
  return arguments_.size();
}
inline ::xla::GlobalDataHandle* SpecializeRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:xla.SpecializeRequest.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
SpecializeRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:xla.SpecializeRequest.arguments)
  return &arguments_;
}
inline const ::xla::GlobalDataHandle& SpecializeRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:xla.SpecializeRequest.arguments)
  return arguments_.Get(index);
}
inline ::xla::GlobalDataHandle* SpecializeRequest::add_arguments() {
  // @@protoc_insertion_point(field_add:xla.SpecializeRequest.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
SpecializeRequest::arguments() const {
  // @@protoc_insertion_point(field_list:xla.SpecializeRequest.arguments)
  return arguments_;
}

// -------------------------------------------------------------------

// SpecializeResponse

// -------------------------------------------------------------------

// GetShapeRequest

// .xla.GlobalDataHandle data = 1;
inline bool GetShapeRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& GetShapeRequest::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.GetShapeRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* GetShapeRequest::release_data() {
  // @@protoc_insertion_point(field_release:xla.GetShapeRequest.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* GetShapeRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.GetShapeRequest.data)
  return data_;
}
inline void GetShapeRequest::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.GetShapeRequest.data)
}

// -------------------------------------------------------------------

// GetShapeResponse

// .xla.Shape shape = 1;
inline bool GetShapeResponse::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
inline const ::xla::Shape& GetShapeResponse::shape() const {
  const ::xla::Shape* p = shape_;
  // @@protoc_insertion_point(field_get:xla.GetShapeResponse.shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::Shape*>(
      &::xla::_Shape_default_instance_);
}
inline ::xla::Shape* GetShapeResponse::release_shape() {
  // @@protoc_insertion_point(field_release:xla.GetShapeResponse.shape)
  
  ::xla::Shape* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline ::xla::Shape* GetShapeResponse::mutable_shape() {
  
  if (shape_ == NULL) {
    shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::Shape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.GetShapeResponse.shape)
  return shape_;
}
inline void GetShapeResponse::set_allocated_shape(::xla::Shape* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(shape_);
  }
  if (shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(shape)->GetArena();
    if (message_arena != submessage_arena) {
      shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shape, submessage_arena);
    }
    
  } else {
    
  }
  shape_ = shape;
  // @@protoc_insertion_point(field_set_allocated:xla.GetShapeResponse.shape)
}

// -------------------------------------------------------------------

// GetComputationShapeRequest

// .xla.ComputationHandle computation = 1;
inline bool GetComputationShapeRequest::has_computation() const {
  return this != internal_default_instance() && computation_ != NULL;
}
inline const ::xla::ComputationHandle& GetComputationShapeRequest::computation() const {
  const ::xla::ComputationHandle* p = computation_;
  // @@protoc_insertion_point(field_get:xla.GetComputationShapeRequest.computation)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ComputationHandle*>(
      &::xla::_ComputationHandle_default_instance_);
}
inline ::xla::ComputationHandle* GetComputationShapeRequest::release_computation() {
  // @@protoc_insertion_point(field_release:xla.GetComputationShapeRequest.computation)
  
  ::xla::ComputationHandle* temp = computation_;
  computation_ = NULL;
  return temp;
}
inline ::xla::ComputationHandle* GetComputationShapeRequest::mutable_computation() {
  
  if (computation_ == NULL) {
    computation_ = ::google::protobuf::Arena::CreateMessage< ::xla::ComputationHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.GetComputationShapeRequest.computation)
  return computation_;
}
inline void GetComputationShapeRequest::set_allocated_computation(::xla::ComputationHandle* computation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(computation_);
  }
  if (computation) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(computation)->GetArena();
    if (message_arena != submessage_arena) {
      computation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computation, submessage_arena);
    }
    
  } else {
    
  }
  computation_ = computation;
  // @@protoc_insertion_point(field_set_allocated:xla.GetComputationShapeRequest.computation)
}

// -------------------------------------------------------------------

// GetComputationShapeResponse

// .xla.ProgramShape program_shape = 1;
inline bool GetComputationShapeResponse::has_program_shape() const {
  return this != internal_default_instance() && program_shape_ != NULL;
}
inline const ::xla::ProgramShape& GetComputationShapeResponse::program_shape() const {
  const ::xla::ProgramShape* p = program_shape_;
  // @@protoc_insertion_point(field_get:xla.GetComputationShapeResponse.program_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::ProgramShape*>(
      &::xla::_ProgramShape_default_instance_);
}
inline ::xla::ProgramShape* GetComputationShapeResponse::release_program_shape() {
  // @@protoc_insertion_point(field_release:xla.GetComputationShapeResponse.program_shape)
  
  ::xla::ProgramShape* temp = program_shape_;
  program_shape_ = NULL;
  return temp;
}
inline ::xla::ProgramShape* GetComputationShapeResponse::mutable_program_shape() {
  
  if (program_shape_ == NULL) {
    program_shape_ = ::google::protobuf::Arena::CreateMessage< ::xla::ProgramShape >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.GetComputationShapeResponse.program_shape)
  return program_shape_;
}
inline void GetComputationShapeResponse::set_allocated_program_shape(::xla::ProgramShape* program_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(program_shape_);
  }
  if (program_shape) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(program_shape)->GetArena();
    if (message_arena != submessage_arena) {
      program_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, program_shape, submessage_arena);
    }
    
  } else {
    
  }
  program_shape_ = program_shape;
  // @@protoc_insertion_point(field_set_allocated:xla.GetComputationShapeResponse.program_shape)
}

// -------------------------------------------------------------------

// UnpackRequest

// .xla.GlobalDataHandle data = 1;
inline bool UnpackRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::xla::GlobalDataHandle& UnpackRequest::data() const {
  const ::xla::GlobalDataHandle* p = data_;
  // @@protoc_insertion_point(field_get:xla.UnpackRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xla::GlobalDataHandle*>(
      &::xla::_GlobalDataHandle_default_instance_);
}
inline ::xla::GlobalDataHandle* UnpackRequest::release_data() {
  // @@protoc_insertion_point(field_release:xla.UnpackRequest.data)
  
  ::xla::GlobalDataHandle* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xla::GlobalDataHandle* UnpackRequest::mutable_data() {
  
  if (data_ == NULL) {
    data_ = ::google::protobuf::Arena::CreateMessage< ::xla::GlobalDataHandle >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:xla.UnpackRequest.data)
  return data_;
}
inline void UnpackRequest::set_allocated_data(::xla::GlobalDataHandle* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(data)->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xla.UnpackRequest.data)
}

// -------------------------------------------------------------------

// UnpackResponse

// repeated .xla.GlobalDataHandle tied_data = 1;
inline int UnpackResponse::tied_data_size() const {
  return tied_data_.size();
}
inline ::xla::GlobalDataHandle* UnpackResponse::mutable_tied_data(int index) {
  // @@protoc_insertion_point(field_mutable:xla.UnpackResponse.tied_data)
  return tied_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >*
UnpackResponse::mutable_tied_data() {
  // @@protoc_insertion_point(field_mutable_list:xla.UnpackResponse.tied_data)
  return &tied_data_;
}
inline const ::xla::GlobalDataHandle& UnpackResponse::tied_data(int index) const {
  // @@protoc_insertion_point(field_get:xla.UnpackResponse.tied_data)
  return tied_data_.Get(index);
}
inline ::xla::GlobalDataHandle* UnpackResponse::add_tied_data() {
  // @@protoc_insertion_point(field_add:xla.UnpackResponse.tied_data)
  return tied_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::GlobalDataHandle >&
UnpackResponse::tied_data() const {
  // @@protoc_insertion_point(field_list:xla.UnpackResponse.tied_data)
  return tied_data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xla

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xla::HloReducePrecisionOptions_Location> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::HloReducePrecisionOptions_Location>() {
  return ::xla::HloReducePrecisionOptions_Location_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcompiler_2fxla_2fxla_2eproto_INCLUDED
